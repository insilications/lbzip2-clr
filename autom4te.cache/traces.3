m4trace:/usr/share/aclocal-1.16/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.16'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.16.5], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.16.5])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.16/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.16/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.16/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.16/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.16/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.16/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE="gmake" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/share/aclocal-1.16/depout.m4:64: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/share/aclocal-1.16/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
m4_ifdef([_$0_ALREADY_INIT],
  [m4_fatal([$0 expanded multiple times
]m4_defn([_$0_ALREADY_INIT]))],
  [m4_define([_$0_ALREADY_INIT], m4_expansion_stack)])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifset([AC_PACKAGE_NAME], [ok]):m4_ifset([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
# Variables for tags utilities; see am/tags.am
if test -z "$CTAGS"; then
  CTAGS=ctags
fi
AC_SUBST([CTAGS])
if test -z "$ETAGS"; then
  ETAGS=etags
fi
AC_SUBST([ETAGS])
if test -z "$CSCOPE"; then
  CSCOPE=cscope
fi
AC_SUBST([CSCOPE])

AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.16/init.m4:204: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.16/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.16/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.16/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/share/aclocal-1.16/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/share/aclocal-1.16/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.16/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  MISSING="\${SHELL} '$am_aux_dir/missing'"
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.16/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.16/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.16/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.16/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.16/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.16/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.16/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.16/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.16/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/00gnulib.m4:24: -1- AC_DEFUN([gl_COMPILER_CLANG], [
dnl AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([whether the compiler is clang],
    [gl_cv_compiler_clang],
    [dnl Use _AC_COMPILE_IFELSE instead of AC_EGREP_CPP, to avoid error
     dnl "circular dependency of AC_LANG_COMPILER(C)" if AC_PROG_CC has
     dnl not yet been invoked.
     _AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[
           #ifdef __clang__
           barfbarf
           #endif
           ]],[[]])
        ],
        [gl_cv_compiler_clang=no],
        [gl_cv_compiler_clang=yes])
    ])
])
m4trace:m4/00gnulib.m4:43: -1- AC_DEFUN([gl_COMPILER_PREPARE_CHECK_DECL], [
dnl AC_REQUIRE([AC_PROG_CC])
dnl AC_REQUIRE([gl_COMPILER_CLANG])
  AC_CACHE_CHECK([for compiler option needed when checking for declarations],
    [gl_cv_compiler_check_decl_option],
    [if test $gl_cv_compiler_clang = yes; then
       dnl Test whether the compiler supports the option
       dnl '-Werror=implicit-function-declaration'.
       save_ac_compile="$ac_compile"
       ac_compile="$ac_compile -Werror=implicit-function-declaration"
       dnl Use _AC_COMPILE_IFELSE instead of AC_COMPILE_IFELSE, to avoid a
       dnl warning "AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS".
       _AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[]])],
         [gl_cv_compiler_check_decl_option='-Werror=implicit-function-declaration'],
         [gl_cv_compiler_check_decl_option=none])
       ac_compile="$save_ac_compile"
     else
       gl_cv_compiler_check_decl_option=none
     fi
    ])
  if test "x$gl_cv_compiler_check_decl_option" != xnone; then
    ac_compile_for_check_decl="$ac_compile $gl_cv_compiler_check_decl_option"
  else
    ac_compile_for_check_decl="$ac_compile"
  fi
])
m4trace:m4/00gnulib.m4:85: -1- AC_DEFUN([gl_00GNULIB])
m4trace:m4/absolute-header.m4:22: -1- AC_DEFUN([gl_ABSOLUTE_HEADER], [AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PREPROC_REQUIRE()dnl
m4_foreach_w([gl_HEADER_NAME], [$1],
  [AS_VAR_PUSHDEF([gl_absolute_header],
                  [gl_cv_absolute_]m4_defn([gl_HEADER_NAME]))dnl
  AC_CACHE_CHECK([absolute name of <]m4_defn([gl_HEADER_NAME])[>],
    [gl_absolute_header],
    [AS_VAR_PUSHDEF([ac_header_exists],
                    [ac_cv_header_]m4_defn([gl_HEADER_NAME]))dnl
    AC_CHECK_HEADERS_ONCE(m4_defn([gl_HEADER_NAME]))dnl
    if test AS_VAR_GET([ac_header_exists]) = yes; then
      gl_ABSOLUTE_HEADER_ONE(m4_defn([gl_HEADER_NAME]))
    fi
    AS_VAR_POPDEF([ac_header_exists])dnl
    ])dnl
  AC_DEFINE_UNQUOTED(AS_TR_CPP([ABSOLUTE_]m4_defn([gl_HEADER_NAME])),
                     ["AS_VAR_GET([gl_absolute_header])"],
                     [Define this to an absolute name of <]m4_defn([gl_HEADER_NAME])[>.])
  AS_VAR_POPDEF([gl_absolute_header])dnl
])dnl
])
m4trace:m4/absolute-header.m4:52: -1- AC_DEFUN([gl_ABSOLUTE_HEADER_ONE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_LANG_CONFTEST([AC_LANG_SOURCE([[#include <]]m4_dquote([$1])[[>]])])
  dnl AIX "xlc -E" and "cc -E" omit #line directives for header files
  dnl that contain only a #include of other header files and no
  dnl non-comment tokens of their own. This leads to a failure to
  dnl detect the absolute name of <dirent.h>, <signal.h>, <poll.h>
  dnl and others. The workaround is to force preservation of comments
  dnl through option -C. This ensures all necessary #line directives
  dnl are present. GCC supports option -C as well.
  case "$host_os" in
    aix*) gl_absname_cpp="$ac_cpp -C" ;;
    *)    gl_absname_cpp="$ac_cpp" ;;
  esac
changequote(,)
  case "$host_os" in
    mingw*)
      dnl For the sake of native Windows compilers (excluding gcc),
      dnl treat backslash as a directory separator, like /.
      dnl Actually, these compilers use a double-backslash as
      dnl directory separator, inside the
      dnl   # line "filename"
      dnl directives.
      gl_dirsep_regex='[/\\]'
      ;;
    *)
      gl_dirsep_regex='\/'
      ;;
  esac
  dnl A sed expression that turns a string into a basic regular
  dnl expression, for use within "/.../".
  gl_make_literal_regex_sed='s,[]$^\\.*/[],\\&,g'
  gl_header_literal_regex=`echo '$1' \
                           | sed -e "$gl_make_literal_regex_sed"`
  gl_absolute_header_sed="/${gl_dirsep_regex}${gl_header_literal_regex}/"'{
      s/.*"\(.*'"${gl_dirsep_regex}${gl_header_literal_regex}"'\)".*/\1/
      s|^/[^/]|//&|
      p
      q
    }'
changequote([,])
  dnl eval is necessary to expand gl_absname_cpp.
  dnl Ultrix and Pyramid sh refuse to redirect output of eval,
  dnl so use subshell.
  AS_VAR_SET([gl_cv_absolute_]AS_TR_SH([[$1]]),
[`(eval "$gl_absname_cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD |
  sed -n "$gl_absolute_header_sed"`])
])
m4trace:m4/alloca.m4:8: -1- AC_DEFUN([gl_FUNC_ALLOCA], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  if test $ac_cv_func_alloca_works = no; then
    gl_PREREQ_ALLOCA
  fi

  # Define an additional variable used in the Makefile substitution.
  if test $ac_cv_working_alloca_h = yes; then
    AC_CACHE_CHECK([for alloca as a compiler built-in], [gl_cv_rpl_alloca], [
      AC_EGREP_CPP([Need own alloca], [
#if defined __GNUC__ || defined _AIX || defined _MSC_VER
        Need own alloca
#endif
        ], [gl_cv_rpl_alloca=yes], [gl_cv_rpl_alloca=no])
    ])
    if test $gl_cv_rpl_alloca = yes; then
      dnl OK, alloca can be implemented through a compiler built-in.
      AC_DEFINE([HAVE_ALLOCA], [1],
        [Define to 1 if you have 'alloca' after including <alloca.h>,
         a header that may be supplied by this distribution.])
      ALLOCA_H=alloca.h
    else
      dnl alloca exists as a library function, i.e. it is slow and probably
      dnl a memory leak. Don't define HAVE_ALLOCA in this case.
      ALLOCA_H=
    fi
  else
    ALLOCA_H=alloca.h
  fi
  AC_SUBST([ALLOCA_H])
  AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])

  if test $ac_cv_working_alloca_h = yes; then
    HAVE_ALLOCA_H=1
  else
    HAVE_ALLOCA_H=0
  fi
  AC_SUBST([HAVE_ALLOCA_H])
])
m4trace:m4/alloca.m4:51: -1- AC_DEFUN([gl_PREREQ_ALLOCA], [:])
m4trace:m4/calloc.m4:18: -1- AC_DEFUN([_AC_FUNC_CALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether calloc (0, n) and calloc (n, 0) return nonnull],
    [ac_cv_func_calloc_0_nonnull],
    [if test $cross_compiling != yes; then
       ac_cv_func_calloc_0_nonnull=yes
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[int result = 0;
              char * volatile p = calloc (0, 0);
              if (!p)
                result |= 1;
              free (p);
              return result;
            ]])],
         [],
         [ac_cv_func_calloc_0_nonnull=no])
     else
       case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # Guess yes on native Windows.
         mingw*)        ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             ac_cv_func_calloc_0_nonnull="$gl_cross_guess_normal" ;;
       esac
     fi
    ])
  AS_CASE([$ac_cv_func_calloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/calloc.m4:57: -1- AC_DEFUN([gl_FUNC_CALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_CALLOC_POSIX])
  if test $REPLACE_CALLOC = 0; then
    _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC=1])
  fi
])
m4trace:m4/calloc.m4:71: -1- AC_DEFUN([gl_FUNC_CALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 1; then
    REPLACE_CALLOC=1
  fi
  dnl Although in theory we should also test for size_t overflow,
  dnl in practice testing for ptrdiff_t overflow suffices
  dnl since PTRDIFF_MAX <= SIZE_MAX on all known Gnulib porting targets.
  dnl A separate size_t test would slow down 'configure'.
])
m4trace:m4/clock_time.m4:12: -1- AC_DEFUN([gl_CLOCK_TIME], [
  dnl Persuade glibc and Solaris <time.h> to declare these functions.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Solaris 2.5.1 needs -lposix4 to get the clock_gettime function.
  # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.

  # Save and restore LIBS so e.g., -lrt, isn't added to it.  Otherwise, *all*
  # programs in the package would end up linked with that potentially-shared
  # library, inducing unnecessary run-time overhead.
  LIB_CLOCK_GETTIME=
  AC_SUBST([LIB_CLOCK_GETTIME])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([clock_gettime], [rt posix4],
                   [test "$ac_cv_search_clock_gettime" = "none required" ||
                    LIB_CLOCK_GETTIME=$ac_cv_search_clock_gettime])
    AC_CHECK_FUNCS([clock_gettime clock_settime])
  LIBS=$gl_saved_libs
])
m4trace:m4/dup2.m4:7: -1- AC_DEFUN([gl_FUNC_DUP2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether dup2 works], [gl_cv_func_dup2_works],
    [AC_RUN_IFELSE([
       AC_LANG_PROGRAM(
         [[#include <errno.h>
           #include <fcntl.h>
           #include <limits.h>
           #include <sys/resource.h>
           #include <unistd.h>
           ]GL_MDA_DEFINES[
           #ifndef RLIM_SAVED_CUR
           # define RLIM_SAVED_CUR RLIM_INFINITY
           #endif
           #ifndef RLIM_SAVED_MAX
           # define RLIM_SAVED_MAX RLIM_INFINITY
           #endif
         ]],
         [[int result = 0;
           int bad_fd = INT_MAX;
           struct rlimit rlim;
           if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
               && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
               && rlim.rlim_cur != RLIM_INFINITY
               && rlim.rlim_cur != RLIM_SAVED_MAX
               && rlim.rlim_cur != RLIM_SAVED_CUR)
             bad_fd = rlim.rlim_cur;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_SETFD, FD_CLOEXEC) == -1)
               result |= 1;
           #endif
           if (dup2 (1, 1) != 1)
             result |= 2;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_GETFD) != FD_CLOEXEC)
               result |= 4;
           #endif
           close (0);
           if (dup2 (0, 0) != -1)
             result |= 8;
           /* Many gnulib modules require POSIX conformance of EBADF.  */
           if (dup2 (2, bad_fd) == -1 && errno != EBADF)
             result |= 16;
           /* Flush out some cygwin core dumps.  */
           if (dup2 (2, -1) != -1 || errno != EBADF)
             result |= 32;
           dup2 (2, 255);
           dup2 (2, 256);
           /* On OS/2 kLIBC, dup2() does not work on a directory fd.  */
           {
             int fd = open (".", O_RDONLY);
             if (fd == -1)
               result |= 64;
             else if (dup2 (fd, fd + 1) == -1)
               result |= 128;
             close (fd);
           }
           return result;]])
      ],
      [gl_cv_func_dup2_works=yes], [gl_cv_func_dup2_works=no],
      [case "$host_os" in
         mingw*) # on this platform, dup2 always returns 0 for success
           gl_cv_func_dup2_works="guessing no" ;;
         cygwin*) # on cygwin 1.5.x, dup2(1,1) returns 0
           gl_cv_func_dup2_works="guessing no" ;;
         aix* | freebsd*)
                 # on AIX 7.1 and FreeBSD 6.1, dup2 (1,toobig) gives EMFILE,
                 # not EBADF.
           gl_cv_func_dup2_works="guessing no" ;;
         haiku*) # on Haiku alpha 2, dup2(1, 1) resets FD_CLOEXEC.
           gl_cv_func_dup2_works="guessing no" ;;
         *-android*) # implemented using dup3(), which fails if oldfd == newfd
           gl_cv_func_dup2_works="guessing no" ;;
         os2*) # on OS/2 kLIBC, dup2() does not work on a directory fd.
           gl_cv_func_dup2_works="guessing no" ;;
         *) gl_cv_func_dup2_works="guessing yes" ;;
       esac])
    ])
  case "$gl_cv_func_dup2_works" in
    *yes) ;;
    *)
      REPLACE_DUP2=1
      AC_CHECK_FUNCS([setdtablesize])
      ;;
  esac
  dnl Replace dup2() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP2=1
    fi
  ])
])
m4trace:m4/dup2.m4:105: -1- AC_DEFUN([gl_PREREQ_DUP2], [])
m4trace:m4/eealloc.m4:7: -1- AC_DEFUN([gl_EEALLOC], [
  AC_REQUIRE([gl_EEMALLOC])
  AC_REQUIRE([gl_EEREALLOC])
])
m4trace:m4/eealloc.m4:13: -1- AC_DEFUN([gl_EEMALLOC], [
  _AC_FUNC_MALLOC_IF(
    [gl_cv_func_malloc_0_nonnull=1],
    [gl_cv_func_malloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([MALLOC_0_IS_NONNULL], [$gl_cv_func_malloc_0_nonnull],
    [If malloc(0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/eealloc.m4:23: -1- AC_DEFUN([gl_EEREALLOC], [
  _AC_FUNC_REALLOC_IF(
    [gl_cv_func_realloc_0_nonnull=1],
    [gl_cv_func_realloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([REALLOC_0_IS_NONNULL], [$gl_cv_func_realloc_0_nonnull],
    [If realloc(NULL,0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/errno_h.m4:9: -1- AC_DEFUN_ONCE([gl_HEADER_ERRNO_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for complete errno.h], [gl_cv_header_errno_h_complete], [
    AC_EGREP_CPP([booboo],[
#include <errno.h>
#if !defined ETXTBSY
booboo
#endif
#if !defined ENOMSG
booboo
#endif
#if !defined EIDRM
booboo
#endif
#if !defined ENOLINK
booboo
#endif
#if !defined EPROTO
booboo
#endif
#if !defined EMULTIHOP
booboo
#endif
#if !defined EBADMSG
booboo
#endif
#if !defined EOVERFLOW
booboo
#endif
#if !defined ENOTSUP
booboo
#endif
#if !defined ENETRESET
booboo
#endif
#if !defined ECONNABORTED
booboo
#endif
#if !defined ESTALE
booboo
#endif
#if !defined EDQUOT
booboo
#endif
#if !defined ECANCELED
booboo
#endif
#if !defined EOWNERDEAD
booboo
#endif
#if !defined ENOTRECOVERABLE
booboo
#endif
#if !defined EILSEQ
booboo
#endif
      ],
      [gl_cv_header_errno_h_complete=no],
      [gl_cv_header_errno_h_complete=yes])
  ])
  if test $gl_cv_header_errno_h_complete = yes; then
    ERRNO_H=''
  else
    gl_NEXT_HEADERS([errno.h])
    ERRNO_H='errno.h'
  fi
  AC_SUBST([ERRNO_H])
  AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
  gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
  gl_REPLACE_ERRNO_VALUE([ENOLINK])
  gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
])
m4trace:m4/errno_h.m4:89: -1- AC_DEFUN([gl_REPLACE_ERRNO_VALUE], [
  if test -n "$ERRNO_H"; then
    AC_CACHE_CHECK([for ]$1[ value], [gl_cv_header_errno_h_]$1, [
      AC_EGREP_CPP([yes],[
#include <errno.h>
#ifdef ]$1[
yes
#endif
      ],
      [gl_cv_header_errno_h_]$1[=yes],
      [gl_cv_header_errno_h_]$1[=no])
      if test $gl_cv_header_errno_h_]$1[ = no; then
        AC_EGREP_CPP([yes],[
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
#ifdef ]$1[
yes
#endif
          ], [gl_cv_header_errno_h_]$1[=hidden])
        if test $gl_cv_header_errno_h_]$1[ = hidden; then
          dnl The macro exists but is hidden.
          dnl Define it to the same value.
          AC_COMPUTE_INT([gl_cv_header_errno_h_]$1, $1, [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
        fi
      fi
    ])
    case $gl_cv_header_errno_h_$1 in
      yes | no)
        $1_HIDDEN=0; $1_VALUE=
        ;;
      *)
        $1_HIDDEN=1; $1_VALUE="$gl_cv_header_errno_h_$1"
        ;;
    esac
    AC_SUBST($1[_HIDDEN])
    AC_SUBST($1[_VALUE])
  fi
])
m4trace:m4/exponentd.m4:6: -1- AC_DEFUN([gl_DOUBLE_EXPONENT_LOCATION], [
  AC_CACHE_CHECK([where to find the exponent in a 'double'],
    [gl_cv_cc_double_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { double value; unsigned int word[NWORDS]; } memory_double;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (double x)
{
  memory_double m;
  size_t i;
  /* Clear it first, in case sizeof (double) < sizeof (memory_double).  */
  memset (&m, 0, sizeof (memory_double));
  m.value = x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  add_to_ored_words (0.25);
  add_to_ored_words (0.5);
  add_to_ored_words (1.0);
  add_to_ored_words (2.0);
  add_to_ored_words (4.0);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_double_expbit0=`cat conftest.out`],
        [gl_cv_cc_double_expbit0="unknown"],
        [
          dnl On ARM, there are two 'double' floating-point formats, used by
          dnl different sets of instructions: The older FPA instructions assume
          dnl that they are stored in big-endian word order, while the words
          dnl (like integer types) are stored in little-endian byte order.
          dnl The newer VFP instructions assume little-endian order
          dnl consistently.
          AC_EGREP_CPP([mixed_endianness], [
#if defined arm || defined __arm || defined __arm__
  mixed_endianness
#endif
            ],
            [gl_cv_cc_double_expbit0="unknown"],
            [
              pushdef([AC_MSG_CHECKING],[:])dnl
              pushdef([AC_MSG_RESULT],[:])dnl
              pushdef([AC_MSG_RESULT_UNQUOTED],[:])dnl
              AC_C_BIGENDIAN(
                [gl_cv_cc_double_expbit0="word 0 bit 20"],
                [gl_cv_cc_double_expbit0="word 1 bit 20"],
                [gl_cv_cc_double_expbit0="unknown"])
              popdef([AC_MSG_RESULT_UNQUOTED])dnl
              popdef([AC_MSG_RESULT])dnl
              popdef([AC_MSG_CHECKING])dnl
            ])
        ])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_double_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_double_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_double_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([DBL_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'double'.])
      AC_DEFINE_UNQUOTED([DBL_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'double'.])
      ;;
  esac
])
m4trace:m4/exponentf.m4:6: -1- AC_DEFUN([gl_FLOAT_EXPONENT_LOCATION], [
  AC_CACHE_CHECK([where to find the exponent in a 'float'],
    [gl_cv_cc_float_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (float) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { float value; unsigned int word[NWORDS]; } memory_float;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (float x)
{
  memory_float m;
  size_t i;
  /* Clear it first, in case
     sizeof (float) < sizeof (memory_float).  */
  memset (&m, 0, sizeof (memory_float));
  m.value = x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  add_to_ored_words (0.25f);
  add_to_ored_words (0.5f);
  add_to_ored_words (1.0f);
  add_to_ored_words (2.0f);
  add_to_ored_words (4.0f);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_float_expbit0=`cat conftest.out`],
        [gl_cv_cc_float_expbit0="unknown"],
        [gl_cv_cc_float_expbit0="word 0 bit 23"])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_float_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_float_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_float_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([FLT_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'float'.])
      AC_DEFINE_UNQUOTED([FLT_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'float'.])
      ;;
  esac
])
m4trace:m4/exponentl.m4:6: -1- AC_DEFUN([gl_LONG_DOUBLE_EXPONENT_LOCATION], [
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([where to find the exponent in a 'long double'],
    [gl_cv_cc_long_double_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (long double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { long double value; unsigned int word[NWORDS]; }
        memory_long_double;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (long double *x)
{
  memory_long_double m;
  size_t i;
  /* Clear it first, in case
     sizeof (long double) < sizeof (memory_long_double).  */
  memset (&m, 0, sizeof (memory_long_double));
  m.value = *x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  static long double samples[5] = { 0.25L, 0.5L, 1.0L, 2.0L, 4.0L };
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  for (j = 0; j < 5; j++)
    add_to_ored_words (&samples[j]);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_long_double_expbit0=`cat conftest.out`],
        [gl_cv_cc_long_double_expbit0="unknown"],
        [
          dnl When cross-compiling, in general we don't know. It depends on the
          dnl ABI and compiler version. There are too many cases.
          gl_cv_cc_long_double_expbit0="unknown"
          case "$host_os" in
            mingw*) # On native Windows (little-endian), we know the result
                    # in two cases: mingw, MSVC.
              AC_EGREP_CPP([Known], [
#ifdef __MINGW32__
 Known
#endif
                ], [gl_cv_cc_long_double_expbit0="word 2 bit 0"])
              AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                ], [gl_cv_cc_long_double_expbit0="word 1 bit 20"])
              ;;
          esac
        ])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_long_double_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_long_double_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_long_double_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([LDBL_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'long double'.])
      AC_DEFINE_UNQUOTED([LDBL_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'long double'.])
      ;;
  esac
])
m4trace:m4/extensions.m4:212: -1- AC_DEFUN_ONCE([gl_USE_SYSTEM_EXTENSIONS], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl On OpenBSD 6.8 with GCC, the include files contain a couple of
  dnl definitions that are only activated with an explicit -D_ISOC11_SOURCE.
  dnl That's because this version of GCC (4.2.1) supports the option
  dnl '-std=gnu99' but not the option '-std=gnu11'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    openbsd*)
      AC_DEFINE([_ISOC11_SOURCE], [1],
        [Define to enable the declarations of ISO C 11 types and functions.])
      ;;
  esac
])
m4trace:m4/extern-inline.m4:8: -1- AC_DEFUN([gl_EXTERN_INLINE], [
  AH_VERBATIM([extern_inline],
[/* Please see the Gnulib manual for how to use these macros.

   Suppress extern inline with HP-UX cc, as it appears to be broken; see
   <https://lists.gnu.org/r/bug-texinfo/2013-02/msg00030.html>.

   Suppress extern inline with Sun C in standards-conformance mode, as it
   mishandles inline functions that call each other.  E.g., for 'inline void f
   (void) { } inline void g (void) { f (); }', c99 incorrectly complains
   'reference to static identifier "f" in extern inline function'.
   This bug was observed with Oracle Developer Studio 12.6
   (Sun C 5.15 SunOS_sparc 2017/05/30).

   Suppress extern inline (with or without __attribute__ ((__gnu_inline__)))
   on configurations that mistakenly use 'static inline' to implement
   functions or macros in standard C headers like <ctype.h>.  For example,
   if isdigit is mistakenly implemented via a static inline function,
   a program containing an extern inline function that calls isdigit
   may not work since the C standard prohibits extern inline functions
   from calling static functions (ISO C 99 section 6.7.4.(3).
   This bug is known to occur on:

     OS X 10.8 and earlier; see:
     https://lists.gnu.org/r/bug-gnulib/2012-12/msg00023.html

     DragonFly; see
     http://muscles.dragonflybsd.org/bulk/clang-master-potential/20141111_102002/logs/ah-tty-0.3.12.log

     FreeBSD; see:
     https://lists.gnu.org/r/bug-gnulib/2014-07/msg00104.html

   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
   for clang but remains for g++; see <https://trac.macports.org/ticket/41033>.
   Assume DragonFly and FreeBSD will be similar.

   GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  It defines a macro
   __GNUC_STDC_INLINE__ to indicate this situation or a macro
   __GNUC_GNU_INLINE__ to indicate the opposite situation.
   GCC 4.2 with -std=c99 or -std=gnu99 implements the GNU C inline
   semantics but warns, unless -fgnu89-inline is used:
     warning: C99 inline functions are not supported; using GNU89
     warning: to disable this warning use -fgnu89-inline or the gnu_inline function attribute
   It defines a macro __GNUC_GNU_INLINE__ to indicate this situation.
 */
#if (((defined __APPLE__ && defined __MACH__) \
      || defined __DragonFly__ || defined __FreeBSD__) \
     && (defined __header_inline \
         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
            && ! defined __clang__) \
         : ((! defined _DONT_USE_CTYPE_INLINE_ \
             && (defined __GNUC__ || defined __cplusplus)) \
            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
                && defined __GNUC__ && ! defined __cplusplus))))
# define _GL_EXTERN_INLINE_STDHEADER_BUG
#endif
#if ((__GNUC__ \
      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \
      : (199901L <= __STDC_VERSION__ \
         && !defined __HP_cc \
         && !defined __PGI \
         && !(defined __SUNPRO_C && __STDC__))) \
     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# define _GL_INLINE inline
# define _GL_EXTERN_INLINE extern inline
# define _GL_EXTERN_INLINE_IN_USE
#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \
       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__
   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */
#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))
# else
#  define _GL_INLINE extern inline
# endif
# define _GL_EXTERN_INLINE extern
# define _GL_EXTERN_INLINE_IN_USE
#else
# define _GL_INLINE _GL_UNUSED static
# define _GL_EXTERN_INLINE _GL_UNUSED static
#endif

/* In GCC 4.6 (inclusive) to 5.1 (exclusive),
   suppress bogus "no previous prototype for 'FOO'"
   and "no previous declaration for 'FOO'" diagnostics,
   when FOO is an inline function in the header; see
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113> and
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63877>.  */
#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__
# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__
#  define _GL_INLINE_HEADER_CONST_PRAGMA
# else
#  define _GL_INLINE_HEADER_CONST_PRAGMA \
     _Pragma ("GCC diagnostic ignored \"-Wsuggest-attribute=const\"")
# endif
# define _GL_INLINE_HEADER_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-prototypes\"") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-declarations\"") \
    _GL_INLINE_HEADER_CONST_PRAGMA
# define _GL_INLINE_HEADER_END \
    _Pragma ("GCC diagnostic pop")
#else
# define _GL_INLINE_HEADER_BEGIN
# define _GL_INLINE_HEADER_END
#endif])
])
m4trace:m4/fcntl-o.m4:14: -1- AC_DEFUN([gl_FCNTL_O_FLAGS], [
  dnl Persuade glibc <fcntl.h> to define O_NOATIME and O_NOFOLLOW.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_FUNCS_ONCE([symlink])
  AC_CACHE_CHECK([for working fcntl.h], [gl_cv_header_working_fcntl_h],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
           #include <sys/stat.h>
           #if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <io.h>
           # include <stdlib.h>
           # defined sleep(n) _sleep ((n) * 1000)
           #endif
           #include <fcntl.h>
           ]GL_MDA_DEFINES[
           #ifndef O_NOATIME
            #define O_NOATIME 0
           #endif
           #ifndef O_NOFOLLOW
            #define O_NOFOLLOW 0
           #endif
           static int const constants[] =
            {
              O_CREAT, O_EXCL, O_NOCTTY, O_TRUNC, O_APPEND,
              O_NONBLOCK, O_SYNC, O_ACCMODE, O_RDONLY, O_RDWR, O_WRONLY
            };
          ]],
          [[
            int result = !constants;
            #if HAVE_SYMLINK
            {
              static char const sym[] = "conftest.sym";
              if (symlink ("/dev/null", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_WRONLY | O_NOFOLLOW | O_CREAT, 0);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              if (unlink (sym) != 0 || symlink (".", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_RDONLY | O_NOFOLLOW);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              unlink (sym);
            }
            #endif
            {
              static char const file[] = "confdefs.h";
              int fd = open (file, O_RDONLY | O_NOATIME);
              if (fd < 0)
                result |= 8;
              else
                {
                  struct stat st0;
                  if (fstat (fd, &st0) != 0)
                    result |= 16;
                  else
                    {
                      char c;
                      sleep (1);
                      if (read (fd, &c, 1) != 1)
                        result |= 24;
                      else
                        {
                          if (close (fd) != 0)
                            result |= 32;
                          else
                            {
                              struct stat st1;
                              if (stat (file, &st1) != 0)
                                result |= 40;
                              else
                                if (st0.st_atime != st1.st_atime)
                                  result |= 64;
                            }
                        }
                    }
                }
            }
            return result;]])],
       [gl_cv_header_working_fcntl_h=yes],
       [case $? in #(
        4) gl_cv_header_working_fcntl_h='no (bad O_NOFOLLOW)';; #(
        64) gl_cv_header_working_fcntl_h='no (bad O_NOATIME)';; #(
        68) gl_cv_header_working_fcntl_h='no (bad O_NOATIME, O_NOFOLLOW)';; #(
         *) gl_cv_header_working_fcntl_h='no';;
        esac],
       [case "$host_os" in
                  # Guess 'no' on native Windows.
          mingw*) gl_cv_header_working_fcntl_h='no' ;;
          *)      gl_cv_header_working_fcntl_h=cross-compiling ;;
        esac
       ])
    ])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOATIME* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOATIME], [$ac_val],
    [Define to 1 if O_NOATIME works.])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOFOLLOW* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOFOLLOW], [$ac_val],
    [Define to 1 if O_NOFOLLOW works.])
])
m4trace:m4/fcntl_h.m4:10: -1- AC_DEFUN_ONCE([gl_FCNTL_H], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_O_FLAGS])
  gl_NEXT_HEADERS([fcntl.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
])
m4trace:m4/fcntl_h.m4:33: -1- AC_DEFUN([gl_FCNTL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_FCNTL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fcntl_h.m4:45: -1- AC_DEFUN([gl_FCNTL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
])
m4trace:m4/fcntl_h.m4:61: -1- AC_DEFUN([gl_FCNTL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCNTL=1;          AC_SUBST([HAVE_FCNTL])
  HAVE_OPENAT=1;         AC_SUBST([HAVE_OPENAT])
  REPLACE_CREAT=0;       AC_SUBST([REPLACE_CREAT])
  REPLACE_FCNTL=0;       AC_SUBST([REPLACE_FCNTL])
  REPLACE_OPEN=0;        AC_SUBST([REPLACE_OPEN])
  REPLACE_OPENAT=0;      AC_SUBST([REPLACE_OPENAT])
])
m4trace:m4/float_h.m4:7: -1- AC_DEFUN([gl_FLOAT_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  FLOAT_H=
  REPLACE_FLOAT_LDBL=0
  case "$host_os" in
    aix* | beos* | openbsd* | mirbsd* | irix*)
      FLOAT_H=float.h
      ;;
    freebsd* | dragonfly*)
      case "$host_cpu" in
changequote(,)dnl
        i[34567]86 )
changequote([,])dnl
          FLOAT_H=float.h
          ;;
        x86_64 )
          # On x86_64 systems, the C compiler may still be generating
          # 32-bit code.
          AC_COMPILE_IFELSE(
            [AC_LANG_SOURCE(
               [[#if defined __LP64__ || defined __x86_64__ || defined __amd64__
                  int ok;
                 #else
                  error fail
                 #endif
               ]])],
            [],
            [FLOAT_H=float.h])
          ;;
      esac
      ;;
    linux*)
      case "$host_cpu" in
        powerpc*)
          FLOAT_H=float.h
          ;;
      esac
      ;;
  esac
  case "$host_os" in
    aix* | freebsd* | dragonfly* | linux*)
      if test -n "$FLOAT_H"; then
        REPLACE_FLOAT_LDBL=1
      fi
      ;;
  esac

  dnl Test against glibc-2.7 Linux/SPARC64 bug.
  REPLACE_ITOLD=0
  AC_CACHE_CHECK([whether conversion from 'int' to 'long double' works],
    [gl_cv_func_itold_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
int i = -1;
volatile long double ld;
int main ()
{
  ld += i * 1.0L;
  if (ld > 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_itold_works=yes],
        [gl_cv_func_itold_works=no],
        [case "$host" in
           sparc*-*-linux*)
             AC_COMPILE_IFELSE(
               [AC_LANG_SOURCE(
                 [[#if defined __LP64__ || defined __arch64__
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
               [gl_cv_func_itold_works="guessing no"],
               [gl_cv_func_itold_works="guessing yes"])
             ;;
                   # Guess yes on native Windows.
           mingw*) gl_cv_func_itold_works="guessing yes" ;;
           *)      gl_cv_func_itold_works="guessing yes" ;;
         esac
        ])
    ])
  case "$gl_cv_func_itold_works" in
    *no)
      REPLACE_ITOLD=1
      dnl We add the workaround to <float.h> but also to <math.h>,
      dnl to increase the chances that the fix function gets pulled in.
      FLOAT_H=float.h
      ;;
  esac

  if test -n "$FLOAT_H"; then
    gl_NEXT_HEADERS([float.h])
  fi
  AC_SUBST([FLOAT_H])
  AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [test -n "$FLOAT_H"])
  AC_SUBST([REPLACE_ITOLD])
])
m4trace:m4/fpieee.m4:25: -1- AC_DEFUN([gl_FP_IEEE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  # IEEE behaviour is the default on all CPUs except Alpha and SH
  # (according to the test results of Bruno Haible's ieeefp/fenv_default.m4
  # and the GCC 4.1.2 manual).
  case "$host_cpu" in
    alpha*)
      # On Alpha systems, a compiler option provides the behaviour.
      # See the ieee(3) manual page, also available at
      # <https://backdrift.org/man/tru64/man3/ieee.3.html>
      if test -n "$GCC"; then
        # GCC has the option -mieee.
        # For full IEEE compliance (rarely needed), use option -mieee-with-inexact.
        CPPFLAGS="$CPPFLAGS -mieee"
      else
        # Compaq (ex-DEC) C has the option -ieee, equivalent to -ieee_with_no_inexact.
        # For full IEEE compliance (rarely needed), use option -ieee_with_inexact.
        CPPFLAGS="$CPPFLAGS -ieee"
      fi
      ;;
    sh*)
      if test -n "$GCC"; then
        # GCC has the option -mieee.
        CPPFLAGS="$CPPFLAGS -mieee"
      fi
      ;;
  esac
])
m4trace:m4/fprintf-posix.m4:7: -1- AC_DEFUN([gl_FUNC_FPRINTF_POSIX], [
  AC_REQUIRE([gl_PRINTF_SIZES_C99])
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  AC_REQUIRE([gl_PRINTF_INFINITE])
  AC_REQUIRE([gl_PRINTF_INFINITE_LONG_DOUBLE])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_A])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_F])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_N])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_LS])
  AC_REQUIRE([gl_PRINTF_POSITIONS])
  AC_REQUIRE([gl_PRINTF_FLAG_GROUPING])
  AC_REQUIRE([gl_PRINTF_FLAG_LEFTADJUST])
  AC_REQUIRE([gl_PRINTF_FLAG_ZERO])
  AC_REQUIRE([gl_PRINTF_PRECISION])
  AC_REQUIRE([gl_PRINTF_ENOMEM])
  gl_cv_func_fprintf_posix=no
  case "$gl_cv_func_printf_sizes_c99" in
    *yes)
      case "$gl_cv_func_printf_long_double" in
        *yes)
          case "$gl_cv_func_printf_infinite" in
            *yes)
              case "$gl_cv_func_printf_infinite_long_double" in
                *yes)
                  case "$gl_cv_func_printf_directive_a" in
                    *yes)
                      case "$gl_cv_func_printf_directive_f" in
                        *yes)
                          case "$gl_cv_func_printf_directive_n" in
                            *yes)
                              case "$gl_cv_func_printf_directive_ls" in
                                *yes)
                                  case "$gl_cv_func_printf_positions" in
                                    *yes)
                                      case "$gl_cv_func_printf_flag_grouping" in
                                        *yes)
                                          case "$gl_cv_func_printf_flag_leftadjust" in
                                            *yes)
                                              case "$gl_cv_func_printf_flag_zero" in
                                                *yes)
                                                  case "$gl_cv_func_printf_precision" in
                                                    *yes)
                                                      case "$gl_cv_func_printf_enomem" in
                                                        *yes)
                                                          # fprintf exists and is
                                                          # already POSIX compliant.
                                                          gl_cv_func_fprintf_posix=yes
                                                          ;;
                                                      esac
                                                      ;;
                                                  esac
                                                  ;;
                                              esac
                                              ;;
                                          esac
                                          ;;
                                      esac
                                      ;;
                                  esac
                                  ;;
                              esac
                              ;;
                          esac
                          ;;
                      esac
                      ;;
                  esac
                  ;;
              esac
              ;;
          esac
          ;;
      esac
      ;;
  esac
  if test $gl_cv_func_fprintf_posix = no; then
    gl_PREREQ_VASNPRINTF_LONG_DOUBLE
    gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
    gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
    gl_PREREQ_VASNPRINTF_DIRECTIVE_A
    gl_PREREQ_VASNPRINTF_DIRECTIVE_F
    gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
    gl_PREREQ_VASNPRINTF_FLAG_GROUPING
    gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
    gl_PREREQ_VASNPRINTF_FLAG_ZERO
    gl_PREREQ_VASNPRINTF_PRECISION
    gl_PREREQ_VASNPRINTF_ENOMEM
    gl_REPLACE_VASNPRINTF
    gl_REPLACE_FPRINTF
  fi
])
m4trace:m4/fprintf-posix.m4:100: -1- AC_DEFUN([gl_REPLACE_FPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_LIBOBJ([fprintf])
  REPLACE_FPRINTF=1
  AC_DEFINE([REPLACE_FPRINTF_POSIX], [1],
    [Define if fprintf is overridden by a POSIX compliant gnulib implementation.])
  gl_PREREQ_FPRINTF
])
m4trace:m4/fprintf-posix.m4:110: -1- AC_DEFUN([gl_PREREQ_FPRINTF], [:])
m4trace:m4/free.m4:9: -1- AC_DEFUN([gl_FUNC_FREE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl In the next release of POSIX, free must preserve errno.
  dnl https://www.austingroupbugs.net/view.php?id=385
  dnl https://sourceware.org/bugzilla/show_bug.cgi?id=17924
  dnl So far, we know of three platforms that do this:
  dnl * glibc >= 2.33, thanks to the fix for this bug:
  dnl   <https://sourceware.org/bugzilla/show_bug.cgi?id=17924>
  dnl * OpenBSD >= 4.5, thanks to this commit:
  dnl   <https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/lib/libc/stdlib/malloc.c.diff?r1=1.100&r2=1.101&f=h>
  dnl * Solaris, because its malloc() implementation is based on brk(),
  dnl   not mmap(); hence its free() implementation makes no system calls.
  dnl For other platforms, you can only be sure if they state it in their
  dnl documentation, or by code inspection of the free() implementation in libc.
  AC_CACHE_CHECK([whether free is known to preserve errno],
    [gl_cv_func_free_preserves_errno],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[#if 2 < __GLIBC__ + (33 <= __GLIBC_MINOR__)
            #elif defined __OpenBSD__
            #elif defined __sun
            #else
              #error "'free' is not known to preserve errno"
            #endif
          ]])],
       [gl_cv_func_free_preserves_errno=yes],
       [gl_cv_func_free_preserves_errno=no])
    ])

  case $gl_cv_func_free_preserves_errno in
   *yes)
    AC_DEFINE([HAVE_FREE_POSIX], [1],
      [Define if the 'free' function is guaranteed to preserve errno.])
    ;;
   *) REPLACE_FREE=1 ;;
  esac
])
m4trace:m4/free.m4:52: -1- AC_DEFUN([gl_PREREQ_FREE], [:])
m4trace:m4/frexp.m4:7: -1- AC_DEFUN([gl_FUNC_FREXP], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  FREXP_LIBM=
  if test $gl_cv_func_frexp_no_libm = no; then
    AC_CACHE_CHECK([whether frexp() can be used with libm],
      [gl_cv_func_frexp_in_libm],
      [
        save_LIBS="$LIBS"
        LIBS="$LIBS -lm"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <math.h>
               double x;]],
             [[int e; return frexp (x, &e) > 0;]])],
          [gl_cv_func_frexp_in_libm=yes],
          [gl_cv_func_frexp_in_libm=no])
        LIBS="$save_LIBS"
      ])
    if test $gl_cv_func_frexp_in_libm = yes; then
      FREXP_LIBM=-lm
    fi
  fi
  if test $gl_cv_func_frexp_no_libm = yes \
     || test $gl_cv_func_frexp_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $FREXP_LIBM"
    gl_FUNC_FREXP_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_frexp_works" in
      *yes) gl_func_frexp=yes ;;
      *)    gl_func_frexp=no; REPLACE_FREXP=1; FREXP_LIBM= ;;
    esac
  else
    gl_func_frexp=no
  fi
  if test $gl_func_frexp = yes; then
    AC_DEFINE([HAVE_FREXP], [1],
      [Define if the frexp() function is available and works.])
  fi
  AC_SUBST([FREXP_LIBM])
])
m4trace:m4/frexp.m4:51: -1- AC_DEFUN([gl_FUNC_FREXP_NO_LIBM], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  if test $gl_cv_func_frexp_no_libm = yes; then
    gl_FUNC_FREXP_WORKS
    case "$gl_cv_func_frexp_works" in
      *yes) gl_func_frexp_no_libm=yes ;;
      *)    gl_func_frexp_no_libm=no; REPLACE_FREXP=1 ;;
    esac
  else
    gl_func_frexp_no_libm=no
    dnl Set REPLACE_FREXP here because the system may have frexp in libm.
    REPLACE_FREXP=1
  fi
  if test $gl_func_frexp_no_libm = yes; then
    AC_DEFINE([HAVE_FREXP_IN_LIBC], [1],
      [Define if the frexp() function is available in libc.])
  fi
])
m4trace:m4/frexp.m4:74: -1- AC_DEFUN([gl_CHECK_FREXP_NO_LIBM], [
  AC_CACHE_CHECK([whether frexp() can be used without linking with libm],
    [gl_cv_func_frexp_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             double x;]],
           [[int e; return frexp (x, &e) > 0;]])],
        [gl_cv_func_frexp_no_libm=yes],
        [gl_cv_func_frexp_no_libm=no])
    ])
])
m4trace:m4/frexp.m4:92: -1- AC_DEFUN([gl_FUNC_FREXP_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([alarm])
  AC_CACHE_CHECK([whether frexp works], [gl_cv_func_frexp_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <math.h>
#include <string.h>
#if HAVE_DECL_ALARM
# include <signal.h>
# include <unistd.h>
#endif
/* HP cc on HP-UX 10.20 has a bug with the constant expression -0.0.
   ICC 10.0 has a bug when optimizing the expression -zero.
   The expression -DBL_MIN * DBL_MIN does not work when cross-compiling
   to PowerPC on Mac OS X 10.5.  */
#if defined __hpux || defined __sgi || defined __ICC
static double
compute_minus_zero (void)
{
  return -DBL_MIN * DBL_MIN;
}
# define minus_zero compute_minus_zero ()
#else
double minus_zero = -0.0;
#endif
int main()
{
  int result = 0;
  int i;
  volatile double x;
  double zero = 0.0;
#if HAVE_DECL_ALARM
  /* NeXTstep 3.3 frexp() runs into an endless loop when called on an infinite
     number.  Let the test fail in this case.  */
  signal (SIGALRM, SIG_DFL);
  alarm (5);
#endif
  /* Test on denormalized numbers.  */
  for (i = 1, x = 1.0; i >= DBL_MIN_EXP; i--, x *= 0.5)
    ;
  if (x > 0.0)
    {
      int exp;
      double y = frexp (x, &exp);
      /* On machines with IEEE754 arithmetic: x = 1.11254e-308, exp = -1022.
         On NetBSD: y = 0.75. Correct: y = 0.5.  */
      if (y != 0.5)
        result |= 1;
    }
  /* Test on infinite numbers.  */
  x = 1.0 / zero;
  {
    int exp;
    double y = frexp (x, &exp);
    if (y != x)
      result |= 2;
  }
  /* Test on negative zero.  */
  x = minus_zero;
  {
    int exp;
    double y = frexp (x, &exp);
    if (memcmp (&y, &x, sizeof x))
      result |= 4;
  }
  return result;
}]])],
        [gl_cv_func_frexp_works=yes],
        [gl_cv_func_frexp_works=no],
        [case "$host_os" in
           netbsd* | irix*) gl_cv_func_frexp_works="guessing no" ;;
           mingw*) # Guess yes with MSVC, no with mingw.
             AC_EGREP_CPP([Good], [
#ifdef _MSC_VER
 Good
#endif
               ],
               [gl_cv_func_frexp_works="guessing yes"],
               [gl_cv_func_frexp_works="guessing no"])
             ;;
           *) gl_cv_func_frexp_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/frexpl.m4:7: -1- AC_DEFUN([gl_FUNC_FREXPL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])

  dnl Persuade glibc <math.h> to declare frexpl().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Check whether it's declared.
  dnl Mac OS X 10.3 has frexpl() in libc but doesn't declare it in <math.h>.
  AC_CHECK_DECL([frexpl], , [HAVE_DECL_FREXPL=0], [[#include <math.h>]])

  FREXPL_LIBM=
  if test $HAVE_DECL_FREXPL = 1; then
    gl_CHECK_FREXPL_NO_LIBM
    if test $gl_cv_func_frexpl_no_libm = no; then
      AC_CACHE_CHECK([whether frexpl() can be used with libm],
        [gl_cv_func_frexpl_in_libm],
        [
          save_LIBS="$LIBS"
          LIBS="$LIBS -lm"
          AC_LINK_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <math.h>
                 long double x;]],
               [[int e; return frexpl (x, &e) > 0;]])],
            [gl_cv_func_frexpl_in_libm=yes],
            [gl_cv_func_frexpl_in_libm=no])
          LIBS="$save_LIBS"
        ])
      if test $gl_cv_func_frexpl_in_libm = yes; then
        FREXPL_LIBM=-lm
      fi
    fi
    if test $gl_cv_func_frexpl_no_libm = yes \
       || test $gl_cv_func_frexpl_in_libm = yes; then
      save_LIBS="$LIBS"
      LIBS="$LIBS $FREXPL_LIBM"
      gl_FUNC_FREXPL_WORKS
      LIBS="$save_LIBS"
      case "$gl_cv_func_frexpl_works" in
        *yes) gl_func_frexpl=yes ;;
        *)    gl_func_frexpl=no; REPLACE_FREXPL=1 ;;
      esac
    else
      gl_func_frexpl=no
    fi
    if test $gl_func_frexpl = yes; then
      AC_DEFINE([HAVE_FREXPL], [1],
        [Define if the frexpl() function is available.])
    fi
  fi
  if test $HAVE_DECL_FREXPL = 0 || test $gl_func_frexpl = no; then
    dnl Find libraries needed to link lib/frexpl.c.
    if test $HAVE_SAME_LONG_DOUBLE_AS_DOUBLE = 1; then
      AC_REQUIRE([gl_FUNC_FREXP])
      FREXPL_LIBM="$FREXP_LIBM"
    else
      FREXPL_LIBM=
    fi
  fi
  AC_SUBST([FREXPL_LIBM])
])
m4trace:m4/frexpl.m4:71: -1- AC_DEFUN([gl_FUNC_FREXPL_NO_LIBM], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  dnl Check whether it's declared.
  dnl Mac OS X 10.3 has frexpl() in libc but doesn't declare it in <math.h>.
  AC_CHECK_DECL([frexpl], , [HAVE_DECL_FREXPL=0], [[#include <math.h>]])
  if test $HAVE_DECL_FREXPL = 1; then
    gl_CHECK_FREXPL_NO_LIBM
    if test $gl_cv_func_frexpl_no_libm = yes; then
      gl_FUNC_FREXPL_WORKS
      case "$gl_cv_func_frexpl_works" in
        *yes) gl_func_frexpl_no_libm=yes ;;
        *)    gl_func_frexpl_no_libm=no; REPLACE_FREXPL=1 ;;
      esac
    else
      gl_func_frexpl_no_libm=no
      dnl Set REPLACE_FREXPL here because the system may have frexpl in libm.
      REPLACE_FREXPL=1
    fi
    if test $gl_func_frexpl_no_libm = yes; then
      AC_DEFINE([HAVE_FREXPL_IN_LIBC], [1],
        [Define if the frexpl() function is available in libc.])
    fi
  fi
])
m4trace:m4/frexpl.m4:100: -1- AC_DEFUN([gl_CHECK_FREXPL_NO_LIBM], [
  AC_CACHE_CHECK([whether frexpl() can be used without linking with libm],
    [gl_cv_func_frexpl_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             long double x;]],
           [[int e; return frexpl (x, &e) > 0;]])],
        [gl_cv_func_frexpl_no_libm=yes],
        [gl_cv_func_frexpl_no_libm=no])
    ])
])
m4trace:m4/frexpl.m4:119: -1- AC_DEFUN([gl_FUNC_FREXPL_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether frexpl works], [gl_cv_func_frexpl_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <math.h>
/* Override the values of <float.h>, like done in float.in.h.  */
#if defined __i386__ && (defined __BEOS__ || defined __OpenBSD__)
# undef LDBL_MIN_EXP
# define LDBL_MIN_EXP    (-16381)
#endif
#if defined __i386__ && (defined __FreeBSD__ || defined __DragonFly__)
# undef LDBL_MIN_EXP
# define LDBL_MIN_EXP    (-16381)
#endif
#if (defined _ARCH_PPC || defined _POWER) && defined _AIX && (LDBL_MANT_DIG == 106) && defined __GNUC__
# undef LDBL_MIN_EXP
# define LDBL_MIN_EXP DBL_MIN_EXP
#endif
#if defined __sgi && (LDBL_MANT_DIG >= 106)
# if defined __GNUC__
#  undef LDBL_MIN_EXP
#  define LDBL_MIN_EXP DBL_MIN_EXP
# endif
#endif
extern
#ifdef __cplusplus
"C"
#endif
long double frexpl (long double, int *);
long double zero = 0.0L;
int main()
{
  int result = 0;
  volatile long double x;
  /* Test on finite numbers that fails on AIX 5.1.  */
  x = 16.0L;
  {
    int exp = -9999;
    frexpl (x, &exp);
    if (exp != 5)
      result |= 1;
  }
  /* Test on finite numbers that fails on Mac OS X 10.4, because its frexpl
     function returns an invalid (incorrectly normalized) value: it returns
               y = { 0x3fe028f5, 0xc28f5c28, 0x3c9eb851, 0xeb851eb8 }
     but the correct result is
          0.505L = { 0x3fe028f5, 0xc28f5c29, 0xbc547ae1, 0x47ae1480 }  */
  x = 1.01L;
  {
    int exp = -9999;
    long double y = frexpl (x, &exp);
    if (!(exp == 1 && y == 0.505L))
      result |= 2;
  }
  /* Test on large finite numbers.  This fails on BeOS at i = 16322, while
     LDBL_MAX_EXP = 16384.
     In the loop end test, we test x against Infinity, rather than comparing
     i with LDBL_MAX_EXP, because BeOS <float.h> has a wrong LDBL_MAX_EXP.  */
  {
    int i;
    for (i = 1, x = 1.0L; x != x + x; i++, x *= 2.0L)
      {
        int exp = -9999;
        frexpl (x, &exp);
        if (exp != i)
          {
            result |= 4;
            break;
          }
      }
  }
  /* Test on denormalized numbers.  */
  {
    int i;
    for (i = 1, x = 1.0L; i >= LDBL_MIN_EXP; i--, x *= 0.5L)
      ;
    if (x > 0.0L)
      {
        int exp;
        long double y = frexpl (x, &exp);
        /* On machines with IEEE854 arithmetic: x = 1.68105e-4932,
           exp = -16382, y = 0.5.  On Mac OS X 10.5: exp = -16384, y = 0.5.  */
        if (exp != LDBL_MIN_EXP - 1)
          result |= 8;
      }
  }
  /* Test on infinite numbers.  */
  /* The Microsoft MSVC 14 compiler chokes on the expression 1.0 / 0.0.  */
  x = 1.0L / zero;
  {
    int exp;
    long double y = frexpl (x, &exp);
    if (y != x)
      result |= 16;
  }
  return result;
}]])],
        [gl_cv_func_frexpl_works=yes],
        [gl_cv_func_frexpl_works=no],
        [
changequote(,)dnl
         case "$host_os" in
           aix | aix[3-6]* | beos* | darwin* | irix* | mingw* | pw*)
              gl_cv_func_frexpl_works="guessing no";;
           *) gl_cv_func_frexpl_works="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/fseterr.m4:7: -1- AC_DEFUN([gl_FUNC_FSETERR], [
  AC_CHECK_FUNCS_ONCE([__fseterr])
])
m4trace:m4/fstat.m4:7: -1- AC_DEFUN([gl_FUNC_FSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  case "$host_os" in
    mingw* | solaris*)
      dnl On MinGW, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      dnl Solaris stat can return a negative tv_nsec.
      REPLACE_FSTAT=1
      ;;
  esac

  dnl Replace fstat() for supporting the gnulib-defined open() on directories.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      case "$gl_cv_func_open_directory_works" in
        *yes) ;;
        *)
          REPLACE_FSTAT=1
          ;;
      esac
    fi
  ])
])
m4trace:m4/fstat.m4:36: -1- AC_DEFUN([gl_PREREQ_FSTAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/gettime.m4:7: -1- AC_DEFUN([gl_GETTIME], [
  dnl Prerequisites of lib/gettime.c.
  AC_REQUIRE([gl_CLOCK_TIME])
  AC_REQUIRE([gl_TIMESPEC])
  AC_CHECK_FUNCS_ONCE([gettimeofday])
])
m4trace:m4/gettimeofday.m4:10: -1- AC_DEFUN([gl_FUNC_GETTIMEOFDAY], [
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_TIME_H])
  AC_CHECK_FUNCS_ONCE([gettimeofday])

  gl_gettimeofday_timezone=void
  if test $ac_cv_func_gettimeofday != yes; then
    HAVE_GETTIMEOFDAY=0
  else
    AC_CACHE_CHECK([for gettimeofday with POSIX signature],
      [gl_cv_func_gettimeofday_posix_signature],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
              struct timeval c;
              int gettimeofday (struct timeval *restrict, void *restrict);
            ]],
            [[/* glibc uses struct timezone * rather than the POSIX void *
                 if _GNU_SOURCE is defined.  However, since the only portable
                 use of gettimeofday uses NULL as the second parameter, and
                 since the glibc definition is actually more typesafe, it is
                 not worth wrapping this to get a compliant signature.  */
              int (*f) (struct timeval *restrict, void *restrict)
                = gettimeofday;
              int x = f (&c, 0);
              return !(x | c.tv_sec | c.tv_usec);
            ]])],
          [gl_cv_func_gettimeofday_posix_signature=yes],
          [AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
              [[#include <sys/time.h>
int gettimeofday (struct timeval *restrict, struct timezone *restrict);
              ]])],
            [gl_cv_func_gettimeofday_posix_signature=almost],
            [gl_cv_func_gettimeofday_posix_signature=no])])])
    if test $gl_cv_func_gettimeofday_posix_signature = almost; then
      gl_gettimeofday_timezone='struct timezone'
    elif test $gl_cv_func_gettimeofday_posix_signature != yes; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl If we override 'struct timeval', we also have to override gettimeofday.
    if test $REPLACE_STRUCT_TIMEVAL = 1; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl On mingw, the original gettimeofday has only a precision of 15.6
    dnl milliseconds. So override it.
    case "$host_os" in
      mingw*) REPLACE_GETTIMEOFDAY=1 ;;
    esac
  fi
  AC_DEFINE_UNQUOTED([GETTIMEOFDAY_TIMEZONE], [$gl_gettimeofday_timezone],
    [Define this to 'void' or 'struct timezone' to match the system's
     declaration of the second argument to gettimeofday.])
])
m4trace:m4/gettimeofday.m4:69: -1- AC_DEFUN([gl_PREREQ_GETTIMEOFDAY], [:])
m4trace:m4/gnulib-common.m4:11: -1- AC_DEFUN([gl_COMMON], [
  dnl Use AC_REQUIRE here, so that the code is expanded once only.
  AC_REQUIRE([gl_00GNULIB])
  AC_REQUIRE([gl_COMMON_BODY])
  AC_REQUIRE([gl_ZZGNULIB])
])
m4trace:m4/gnulib-common.m4:17: -1- AC_DEFUN([gl_COMMON_BODY], [
  AH_VERBATIM([_GL_GNUC_PREREQ],
[/* True if the compiler says it groks GNU C version MAJOR.MINOR.  */
#if defined __GNUC__ && defined __GNUC_MINOR__
# define _GL_GNUC_PREREQ(major, minor) \
    ((major) < __GNUC__ + ((minor) <= __GNUC_MINOR__))
#else
# define _GL_GNUC_PREREQ(major, minor) 0
#endif
])
  AH_VERBATIM([_Noreturn],
[/* The _Noreturn keyword of C11.  */
#ifndef _Noreturn
# if (defined __cplusplus \
      && ((201103 <= __cplusplus && !(__GNUC__ == 4 && __GNUC_MINOR__ == 7)) \
          || (defined _MSC_VER && 1900 <= _MSC_VER)) \
      && 0)
    /* [[noreturn]] is not practically usable, because with it the syntax
         extern _Noreturn void func (...);
       would not be valid; such a declaration would only be valid with 'extern'
       and '_Noreturn' swapped, or without the 'extern' keyword.  However, some
       AIX system header files and several gnulib header files use precisely
       this syntax with 'extern'.  */
#  define _Noreturn [[noreturn]]
# elif ((!defined __cplusplus || defined __clang__) \
        && (201112 <= (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) \
            || (!defined __STRICT_ANSI__ \
                && (_GL_GNUC_PREREQ (4, 7) \
                    || (defined __apple_build_version__ \
                        ? 6000000 <= __apple_build_version__ \
                        : 3 < __clang_major__ + (5 <= __clang_minor__))))))
   /* _Noreturn works as-is.  */
# elif _GL_GNUC_PREREQ (2, 8) || defined __clang__ || 0x5110 <= __SUNPRO_C
#  define _Noreturn __attribute__ ((__noreturn__))
# elif 1200 <= (defined _MSC_VER ? _MSC_VER : 0)
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif
])
  AH_VERBATIM([isoc99_inline],
[/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of
   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
   __APPLE__ && __MACH__ test for Mac OS X.
   __APPLE_CC__ tests for the Apple compiler and its version.
   __STDC_VERSION__ tests for the C99 mode.  */
#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
# define __GNUC_STDC_INLINE__ 1
#endif])
  AH_VERBATIM([attribute],
[/* Attributes.  */
#if (defined __has_attribute \
     && (!defined __clang_minor__ \
         || 3 < __clang_major__ + (5 <= __clang_minor__)))
# define _GL_HAS_ATTRIBUTE(attr) __has_attribute (__##attr##__)
#else
# define _GL_HAS_ATTRIBUTE(attr) _GL_ATTR_##attr
# define _GL_ATTR_alloc_size _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_always_inline _GL_GNUC_PREREQ (3, 2)
# define _GL_ATTR_artificial _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_cold _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_const _GL_GNUC_PREREQ (2, 95)
# define _GL_ATTR_deprecated _GL_GNUC_PREREQ (3, 1)
# define _GL_ATTR_diagnose_if 0
# define _GL_ATTR_error _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_externally_visible _GL_GNUC_PREREQ (4, 1)
# define _GL_ATTR_fallthrough _GL_GNUC_PREREQ (7, 0)
# define _GL_ATTR_format _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_leaf _GL_GNUC_PREREQ (4, 6)
# define _GL_ATTR_malloc _GL_GNUC_PREREQ (3, 0)
# ifdef _ICC
#  define _GL_ATTR_may_alias 0
# else
#  define _GL_ATTR_may_alias _GL_GNUC_PREREQ (3, 3)
# endif
# define _GL_ATTR_noinline _GL_GNUC_PREREQ (3, 1)
# define _GL_ATTR_nonnull _GL_GNUC_PREREQ (3, 3)
# define _GL_ATTR_nonstring _GL_GNUC_PREREQ (8, 0)
# define _GL_ATTR_nothrow _GL_GNUC_PREREQ (3, 3)
# define _GL_ATTR_packed _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_pure _GL_GNUC_PREREQ (2, 96)
# define _GL_ATTR_returns_nonnull _GL_GNUC_PREREQ (4, 9)
# define _GL_ATTR_sentinel _GL_GNUC_PREREQ (4, 0)
# define _GL_ATTR_unused _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_warn_unused_result _GL_GNUC_PREREQ (3, 4)
#endif

#ifdef __has_c_attribute
# define _GL_HAS_C_ATTRIBUTE(attr) __has_c_attribute (__##attr##__)
#else
# define _GL_HAS_C_ATTRIBUTE(attr) 0
#endif

]dnl There is no _GL_ATTRIBUTE_ALIGNED; use stdalign's _Alignas instead.
[
/* _GL_ATTRIBUTE_ALLOC_SIZE ((N)) declares that the Nth argument of the function
   is the size of the returned memory block.
   _GL_ATTRIBUTE_ALLOC_SIZE ((M, N)) declares that the Mth argument multiplied
   by the Nth argument of the function is the size of the returned memory block.
 */
/* Applies to: function, pointer to function, function types.  */
#if _GL_HAS_ATTRIBUTE (alloc_size)
# define _GL_ATTRIBUTE_ALLOC_SIZE(args) __attribute__ ((__alloc_size__ args))
#else
# define _GL_ATTRIBUTE_ALLOC_SIZE(args)
#endif

/* _GL_ATTRIBUTE_ALWAYS_INLINE tells that the compiler should always inline the
   function and report an error if it cannot do so.  */
/* Applies to: function.  */
#if _GL_HAS_ATTRIBUTE (always_inline)
# define _GL_ATTRIBUTE_ALWAYS_INLINE __attribute__ ((__always_inline__))
#else
# define _GL_ATTRIBUTE_ALWAYS_INLINE
#endif

/* _GL_ATTRIBUTE_ARTIFICIAL declares that the function is not important to show
    in stack traces when debugging.  The compiler should omit the function from
    stack traces.  */
/* Applies to: function.  */
#if _GL_HAS_ATTRIBUTE (artificial)
# define _GL_ATTRIBUTE_ARTIFICIAL __attribute__ ((__artificial__))
#else
# define _GL_ATTRIBUTE_ARTIFICIAL
#endif

/* _GL_ATTRIBUTE_COLD declares that the function is rarely executed.  */
/* Applies to: functions.  */
/* Avoid __attribute__ ((cold)) on MinGW; see thread starting at
   <https://lists.gnu.org/r/emacs-devel/2019-04/msg01152.html>.
   Also, Oracle Studio 12.6 requires 'cold' not '__cold__'.  */
#if _GL_HAS_ATTRIBUTE (cold) && !defined __MINGW32__
# ifndef __SUNPRO_C
#  define _GL_ATTRIBUTE_COLD __attribute__ ((__cold__))
# else
#  define _GL_ATTRIBUTE_COLD __attribute__ ((cold))
# endif
#else
# define _GL_ATTRIBUTE_COLD
#endif

/* _GL_ATTRIBUTE_CONST declares that it is OK for a compiler to omit duplicate
   calls to the function with the same arguments.
   This attribute is safe for a function that neither depends on nor affects
   observable state, and always returns exactly once - e.g., does not loop
   forever, and does not call longjmp.
   (This attribute is stricter than _GL_ATTRIBUTE_PURE.)  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (const)
# define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))
#else
# define _GL_ATTRIBUTE_CONST
#endif

/* _GL_ATTRIBUTE_DEALLOC (F, I) declares that the function returns pointers
   that can be freed by passing them as the Ith argument to the
   function F.
   _GL_ATTRIBUTE_DEALLOC_FREE declares that the function returns pointers that
   can be freed via 'free'; it can be used only after declaring 'free'.  */
/* Applies to: functions.  Cannot be used on inline functions.  */
#if _GL_GNUC_PREREQ (11, 0)
# define _GL_ATTRIBUTE_DEALLOC(f, i) __attribute__ ((__malloc__ (f, i)))
#else
# define _GL_ATTRIBUTE_DEALLOC(f, i)
#endif
#define _GL_ATTRIBUTE_DEALLOC_FREE _GL_ATTRIBUTE_DEALLOC (free, 1)

/* _GL_ATTRIBUTE_DEPRECATED: Declares that an entity is deprecated.
   The compiler may warn if the entity is used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: namespace, class, template specialization.  */
#if _GL_HAS_C_ATTRIBUTE (deprecated)
# define _GL_ATTRIBUTE_DEPRECATED [[__deprecated__]]
#elif _GL_HAS_ATTRIBUTE (deprecated)
# define _GL_ATTRIBUTE_DEPRECATED __attribute__ ((__deprecated__))
#else
# define _GL_ATTRIBUTE_DEPRECATED
#endif

/* _GL_ATTRIBUTE_ERROR(msg) requests an error if a function is called and
   the function call is not optimized away.
   _GL_ATTRIBUTE_WARNING(msg) requests a warning if a function is called and
   the function call is not optimized away.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (error)
# define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__error__ (msg)))
# define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__warning__ (msg)))
#elif _GL_HAS_ATTRIBUTE (diagnose_if)
# define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__diagnose_if__ (1, msg, "error")))
# define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__diagnose_if__ (1, msg, "warning")))
#else
# define _GL_ATTRIBUTE_ERROR(msg)
# define _GL_ATTRIBUTE_WARNING(msg)
#endif

/* _GL_ATTRIBUTE_EXTERNALLY_VISIBLE declares that the entity should remain
   visible to debuggers etc., even with '-fwhole-program'.  */
/* Applies to: functions, variables.  */
#if _GL_HAS_ATTRIBUTE (externally_visible)
# define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE __attribute__ ((externally_visible))
#else
# define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE
#endif

/* _GL_ATTRIBUTE_FALLTHROUGH declares that it is not a programming mistake if
   the control flow falls through to the immediately following 'case' or
   'default' label.  The compiler should not warn in this case.  */
/* Applies to: Empty statement (;), inside a 'switch' statement.  */
/* Always expands to something.  */
#if _GL_HAS_C_ATTRIBUTE (fallthrough)
# define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]]
#elif _GL_HAS_ATTRIBUTE (fallthrough)
# define _GL_ATTRIBUTE_FALLTHROUGH __attribute__ ((__fallthrough__))
#else
# define _GL_ATTRIBUTE_FALLTHROUGH ((void) 0)
#endif

/* _GL_ATTRIBUTE_FORMAT ((ARCHETYPE, STRING-INDEX, FIRST-TO-CHECK))
   declares that the STRING-INDEXth function argument is a format string of
   style ARCHETYPE, which is one of:
     printf, gnu_printf
     scanf, gnu_scanf,
     strftime, gnu_strftime,
     strfmon,
   or the same thing prefixed and suffixed with '__'.
   If FIRST-TO-CHECK is not 0, arguments starting at FIRST-TO_CHECK
   are suitable for the format string.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (format)
# define _GL_ATTRIBUTE_FORMAT(spec) __attribute__ ((__format__ spec))
#else
# define _GL_ATTRIBUTE_FORMAT(spec)
#endif

/* _GL_ATTRIBUTE_LEAF declares that if the function is called from some other
   compilation unit, it executes code from that unit only by return or by
   exception handling.  This declaration lets the compiler optimize that unit
   more aggressively.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (leaf)
# define _GL_ATTRIBUTE_LEAF __attribute__ ((__leaf__))
#else
# define _GL_ATTRIBUTE_LEAF
#endif

/* _GL_ATTRIBUTE_MALLOC declares that the function returns a pointer to freshly
   allocated memory.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (malloc)
# define _GL_ATTRIBUTE_MALLOC __attribute__ ((__malloc__))
#else
# define _GL_ATTRIBUTE_MALLOC
#endif

/* _GL_ATTRIBUTE_MAY_ALIAS declares that pointers to the type may point to the
   same storage as pointers to other types.  Thus this declaration disables
   strict aliasing optimization.  */
/* Applies to: types.  */
/* Oracle Studio 12.6 mishandles may_alias despite __has_attribute OK.  */
#if _GL_HAS_ATTRIBUTE (may_alias) && !defined __SUNPRO_C
# define _GL_ATTRIBUTE_MAY_ALIAS __attribute__ ((__may_alias__))
#else
# define _GL_ATTRIBUTE_MAY_ALIAS
#endif

/* _GL_ATTRIBUTE_MAYBE_UNUSED declares that it is not a programming mistake if
   the entity is not used.  The compiler should not warn if the entity is not
   used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: class.  */
/* In C++ and C2x, this is spelled [[__maybe_unused__]].
   GCC's syntax is __attribute__ ((__unused__)).
   clang supports both syntaxes.  */
#if _GL_HAS_C_ATTRIBUTE (maybe_unused)
# define _GL_ATTRIBUTE_MAYBE_UNUSED [[__maybe_unused__]]
#else
# define _GL_ATTRIBUTE_MAYBE_UNUSED _GL_ATTRIBUTE_UNUSED
#endif
/* Alternative spelling of this macro, for convenience.  */
#define _GL_UNUSED _GL_ATTRIBUTE_MAYBE_UNUSED
/* Earlier spellings of this macro.  */
#define _UNUSED_PARAMETER_ _GL_ATTRIBUTE_MAYBE_UNUSED

/* _GL_ATTRIBUTE_NODISCARD declares that the caller of the function should not
   discard the return value.  The compiler may warn if the caller does not use
   the return value, unless the caller uses something like ignore_value.  */
/* Applies to: function, enumeration, class.  */
#if _GL_HAS_C_ATTRIBUTE (nodiscard)
# define _GL_ATTRIBUTE_NODISCARD [[__nodiscard__]]
#elif _GL_HAS_ATTRIBUTE (warn_unused_result)
# define _GL_ATTRIBUTE_NODISCARD __attribute__ ((__warn_unused_result__))
#else
# define _GL_ATTRIBUTE_NODISCARD
#endif

/* _GL_ATTRIBUTE_NOINLINE tells that the compiler should not inline the
   function.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (noinline)
# define _GL_ATTRIBUTE_NOINLINE __attribute__ ((__noinline__))
#else
# define _GL_ATTRIBUTE_NOINLINE
#endif

/* _GL_ATTRIBUTE_NONNULL ((N1, N2,...)) declares that the arguments N1, N2,...
   must not be NULL.
   _GL_ATTRIBUTE_NONNULL () declares that all pointer arguments must not be
   null.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (nonnull)
# define _GL_ATTRIBUTE_NONNULL(args) __attribute__ ((__nonnull__ args))
#else
# define _GL_ATTRIBUTE_NONNULL(args)
#endif

/* _GL_ATTRIBUTE_NONSTRING declares that the contents of a character array is
   not meant to be NUL-terminated.  */
/* Applies to: struct/union members and variables that are arrays of element
   type '[[un]signed] char'.  */
#if _GL_HAS_ATTRIBUTE (nonstring)
# define _GL_ATTRIBUTE_NONSTRING __attribute__ ((__nonstring__))
#else
# define _GL_ATTRIBUTE_NONSTRING
#endif

/* There is no _GL_ATTRIBUTE_NORETURN; use _Noreturn instead.  */

/* _GL_ATTRIBUTE_NOTHROW declares that the function does not throw exceptions.
 */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (nothrow) && !defined __cplusplus
# define _GL_ATTRIBUTE_NOTHROW __attribute__ ((__nothrow__))
#else
# define _GL_ATTRIBUTE_NOTHROW
#endif

/* _GL_ATTRIBUTE_PACKED declares:
   For struct members: The member has the smallest possible alignment.
   For struct, union, class: All members have the smallest possible alignment,
   minimizing the memory required.  */
/* Applies to: struct members, struct, union,
   in C++ also: class.  */
#if _GL_HAS_ATTRIBUTE (packed)
# define _GL_ATTRIBUTE_PACKED __attribute__ ((__packed__))
#else
# define _GL_ATTRIBUTE_PACKED
#endif

/* _GL_ATTRIBUTE_PURE declares that It is OK for a compiler to omit duplicate
   calls to the function with the same arguments if observable state is not
   changed between calls.
   This attribute is safe for a function that does not affect
   observable state, and always returns exactly once.
   (This attribute is looser than _GL_ATTRIBUTE_CONST.)  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (pure)
# define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
#else
# define _GL_ATTRIBUTE_PURE
#endif

/* _GL_ATTRIBUTE_RETURNS_NONNULL declares that the function's return value is
   a non-NULL pointer.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (returns_nonnull)
# define _GL_ATTRIBUTE_RETURNS_NONNULL __attribute__ ((__returns_nonnull__))
#else
# define _GL_ATTRIBUTE_RETURNS_NONNULL
#endif

/* _GL_ATTRIBUTE_SENTINEL(pos) declares that the variadic function expects a
   trailing NULL argument.
   _GL_ATTRIBUTE_SENTINEL () - The last argument is NULL (requires C99).
   _GL_ATTRIBUTE_SENTINEL ((N)) - The (N+1)st argument from the end is NULL.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (sentinel)
# define _GL_ATTRIBUTE_SENTINEL(pos) __attribute__ ((__sentinel__ pos))
#else
# define _GL_ATTRIBUTE_SENTINEL(pos)
#endif

/* A helper macro.  Don't use it directly.  */
#if _GL_HAS_ATTRIBUTE (unused)
# define _GL_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
#else
# define _GL_ATTRIBUTE_UNUSED
#endif

]dnl There is no _GL_ATTRIBUTE_VISIBILITY; see m4/visibility.m4 instead.
[
/* _GL_UNUSED_LABEL; declares that it is not a programming mistake if the
   immediately preceding label is not used.  The compiler should not warn
   if the label is not used.  */
/* Applies to: label (both in C and C++).  */
/* Note that g++ < 4.5 does not support the '__attribute__ ((__unused__)) ;'
   syntax.  But clang does.  */
#if !(defined __cplusplus && !_GL_GNUC_PREREQ (4, 5)) || defined __clang__
# define _GL_UNUSED_LABEL _GL_ATTRIBUTE_UNUSED
#else
# define _GL_UNUSED_LABEL
#endif
])
  AH_VERBATIM([async_safe],
[/* The _GL_ASYNC_SAFE marker should be attached to functions that are
   signal handlers (for signals other than SIGABRT, SIGPIPE) or can be
   invoked from such signal handlers.  Such functions have some restrictions:
     * All functions that it calls should be marked _GL_ASYNC_SAFE as well,
       or should be listed as async-signal-safe in POSIX
       <https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html#tag_15_04>
       section 2.4.3.  Note that malloc(), sprintf(), and fwrite(), in
       particular, are NOT async-signal-safe.
     * All memory locations (variables and struct fields) that these functions
       access must be marked 'volatile'.  This holds for both read and write
       accesses.  Otherwise the compiler might optimize away stores to and
       reads from such locations that occur in the program, depending on its
       data flow analysis.  For example, when the program contains a loop
       that is intended to inspect a variable set from within a signal handler
           while (!signal_occurred)
             ;
       the compiler is allowed to transform this into an endless loop if the
       variable 'signal_occurred' is not declared 'volatile'.
   Additionally, recall that:
     * A signal handler should not modify errno (except if it is a handler
       for a fatal signal and ends by raising the same signal again, thus
       provoking the termination of the process).  If it invokes a function
       that may clobber errno, it needs to save and restore the value of
       errno.  */
#define _GL_ASYNC_SAFE
])
  AH_VERBATIM([micro_optimizations],
[/* _GL_CMP (n1, n2) performs a three-valued comparison on n1 vs. n2, where
   n1 and n2 are expressions without side effects, that evaluate to real
   numbers (excluding NaN).
   It returns
     1  if n1 > n2
     0  if n1 == n2
     -1 if n1 < n2
   The naïve code   (n1 > n2 ? 1 : n1 < n2 ? -1 : 0)  produces a conditional
   jump with nearly all GCC versions up to GCC 10.
   This variant     (n1 < n2 ? -1 : n1 > n2)  produces a conditional with many
   GCC versions up to GCC 9.
   The better code  (n1 > n2) - (n1 < n2)  from Hacker's Delight § 2-9
   avoids conditional jumps in all GCC versions >= 3.4.  */
#define _GL_CMP(n1, n2) (((n1) > (n2)) - ((n1) < (n2)))
])
  dnl Hint which direction to take regarding cross-compilation guesses:
  dnl When a user installs a program on a platform they are not intimately
  dnl familiar with, --enable-cross-guesses=conservative is the appropriate
  dnl choice.  It implements the "If we don't know, assume the worst" principle.
  dnl However, when an operating system developer (on a platform which is not
  dnl yet known to gnulib) builds packages for their platform, they want to
  dnl expose, not hide, possible platform bugs; in this case,
  dnl --enable-cross-guesses=risky is the appropriate choice.
  dnl Sets the variables
  dnl gl_cross_guess_normal    (to be used when 'yes' is good and 'no' is bad),
  dnl gl_cross_guess_inverted  (to be used when 'no' is good and 'yes' is bad).
  AC_ARG_ENABLE([cross-guesses],
    [AS_HELP_STRING([--enable-cross-guesses={conservative|risky}],
       [specify policy for cross-compilation guesses])],
    [if test "x$enableval" != xconservative && test "x$enableval" != xrisky; then
       AC_MSG_WARN([invalid argument supplied to --enable-cross-guesses])
       enableval=conservative
     fi
     gl_cross_guesses="$enableval"],
    [gl_cross_guesses=conservative])
  if test $gl_cross_guesses = risky; then
    gl_cross_guess_normal="guessing yes"
    gl_cross_guess_inverted="guessing no"
  else
    gl_cross_guess_normal="guessing no"
    gl_cross_guess_inverted="guessing yes"
  fi
  dnl Preparation for running test programs:
  dnl Tell glibc to write diagnostics from -D_FORTIFY_SOURCE=2 to stderr, not
  dnl to /dev/tty, so they can be redirected to log files.  Such diagnostics
  dnl arise e.g., in the macros gl_PRINTF_DIRECTIVE_N, gl_SNPRINTF_DIRECTIVE_N.
  LIBC_FATAL_STDERR_=1
  export LIBC_FATAL_STDERR_
])
m4trace:m4/gnulib-common.m4:511: -1- AC_DEFUN([gl_MODULE_INDICATOR_INIT_VARIABLE], [
  GL_MODULE_INDICATOR_PREFIX[]_[$1]=m4_if([$2], , [0], [$2])
  AC_SUBST(GL_MODULE_INDICATOR_PREFIX[]_[$1])
])
m4trace:m4/gnulib-common.m4:526: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE], [
  gl_MODULE_INDICATOR_SET_VARIABLE_AUX(
    [GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[$1]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])],
    [gl_MODULE_INDICATOR_CONDITION])
])
m4trace:m4/gnulib-common.m4:539: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX], [
  m4_if(m4_defn([gl_MODULE_INDICATOR_CONDITION]), [1],
    [
     dnl Simplify the expression VALUE || 1 to 1.
     $1=1
    ],
    [gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([$1],
                                             [gl_MODULE_INDICATOR_CONDITION])])
])
m4trace:m4/gnulib-common.m4:553: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR], [
  dnl Simplify the expression 1 || CONDITION to 1.
  if test "$[]$1" != 1; then
    dnl Simplify the expression 0 || CONDITION to CONDITION.
    if test "$[]$1" = 0; then
      $1=$2
    else
      $1="($[]$1 || $2)"
    fi
  fi
])
m4trace:m4/gnulib-common.m4:578: -1- AC_DEFUN([gl_MODULE_INDICATOR], [
  AC_DEFINE_UNQUOTED([GNULIB_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]),
    [gl_MODULE_INDICATOR_CONDITION],
    [Define to a C preprocessor expression that evaluates to 1 or 0,
     depending whether the gnulib module $1 shall be considered present.])
])
m4trace:m4/gnulib-common.m4:601: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [
  AC_DEFINE([GNULIB_TEST_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]), [1],
    [Define to 1 when the gnulib module $1 should be tested.])
])
m4trace:m4/gnulib-common.m4:613: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_POSIXCHECK], [
  dnl Override gl_WARN_ON_USE_PREPARE.
  dnl But hide this definition from 'aclocal'.
  AC_DEFUN([gl_W][ARN_ON_USE_PREPARE], [])
])
m4trace:m4/gnulib-common.m4:624: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS], [
  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
])
m4trace:m4/gnulib-common.m4:632: -1- AC_DEFUN([gl_FEATURES_H], [
  AC_CHECK_HEADERS_ONCE([features.h])
  if test $ac_cv_header_features_h = yes; then
    HAVE_FEATURES_H=1
  else
    HAVE_FEATURES_H=0
  fi
  AC_SUBST([HAVE_FEATURES_H])
])
m4trace:m4/gnulib-common.m4:646: -1- AC_DEFUN([gl_PROG_CC_C99], [
  dnl Just use AC_PROG_CC_C99.
  dnl When AC_PROG_CC_C99 and AC_PROG_CC_STDC are used together, the substituted
  dnl value of CC will contain the C99 enabling options twice. But this is only
  dnl a cosmetic problem.
  dnl With Autoconf >= 2.70, use AC_PROG_CC since it implies AC_PROG_CC_C99;
  dnl this avoids a "warning: The macro `AC_PROG_CC_C99' is obsolete."
  m4_version_prereq([2.70],
    [AC_REQUIRE([AC_PROG_CC])],
    [AC_REQUIRE([AC_PROG_CC_C99])])
])
m4trace:m4/gnulib-common.m4:663: -1- AC_DEFUN([gl_PROG_AR_RANLIB], [
  dnl Minix 3 comes with two toolchains: The Amsterdam Compiler Kit compiler
  dnl as "cc", and GCC as "gcc". They have different object file formats and
  dnl library formats. In particular, the GNU binutils programs ar and ranlib
  dnl produce libraries that work only with gcc, not with cc.
  AC_REQUIRE([AC_PROG_CC])
  dnl The '' hides this use from 'aclocal'.
  AC_BEFORE([$0], [A][M_PROG_AR])
  AC_CACHE_CHECK([for Minix Amsterdam compiler], [gl_cv_c_amsterdam_compiler],
    [
      AC_EGREP_CPP([Amsterdam],
        [
#ifdef __ACK__
Amsterdam
#endif
        ],
        [gl_cv_c_amsterdam_compiler=yes],
        [gl_cv_c_amsterdam_compiler=no])
    ])

  dnl Don't compete with AM_PROG_AR's decision about AR/ARFLAGS if we are not
  dnl building with __ACK__.
  if test $gl_cv_c_amsterdam_compiler = yes; then
    if test -z "$AR"; then
      AR='cc -c.a'
    fi
    if test -z "$ARFLAGS"; then
      ARFLAGS='-o'
    fi
  else
    dnl AM_PROG_AR was added in automake v1.11.2.  AM_PROG_AR does not AC_SUBST
    dnl ARFLAGS variable (it is filed into Makefile.in directly by automake
    dnl script on-demand, if not specified by ./configure of course).
    dnl Don't AC_REQUIRE the AM_PROG_AR otherwise the code for __ACK__ above
    dnl will be ignored.  Also, pay attention to call AM_PROG_AR in else block
    dnl because AM_PROG_AR is written so it could re-set AR variable even for
    dnl __ACK__.  It may seem like its easier to avoid calling the macro here,
    dnl but we need to AC_SUBST both AR/ARFLAGS (thus those must have some good
    dnl default value and automake should usually know them).
    dnl
    dnl The '' hides this use from 'aclocal'.
    m4_ifdef([A][M_PROG_AR], [A][M_PROG_AR], [:])
  fi

  dnl In case the code above has not helped with setting AR/ARFLAGS, use
  dnl Automake-documented default values for AR and ARFLAGS, but prefer
  dnl ${host}-ar over ar (useful for cross-compiling).
  AC_CHECK_TOOL([AR], [ar], [ar])
  if test -z "$ARFLAGS"; then
    ARFLAGS='cr'
  fi

  AC_SUBST([AR])
  AC_SUBST([ARFLAGS])
  if test -z "$RANLIB"; then
    if test $gl_cv_c_amsterdam_compiler = yes; then
      RANLIB=':'
    else
      dnl Use the ranlib program if it is available.
      AC_PROG_RANLIB
    fi
  fi
  AC_SUBST([RANLIB])
])
m4trace:m4/gnulib-common.m4:783: -1- AC_DEFUN([gl_BIGENDIAN], [
  AC_C_BIGENDIAN
])
m4trace:m4/gnulib-common.m4:797: -1- AC_DEFUN([gl_SILENT], [
  exec GL_TMP_FD>&AS_MESSAGE_FD AS_MESSAGE_FD>/dev/null
  $1
  exec AS_MESSAGE_FD>&GL_TMP_FD GL_TMP_FD>&-
])
m4trace:m4/gnulib-common.m4:809: -1- AC_DEFUN([gl_CACHE_VAL_SILENT], [
  gl_SILENT([
    AC_CACHE_VAL([$1], [$2])
  ])
])
m4trace:m4/gnulib-common.m4:821: -1- AC_DEFUN([gl_CC_ALLOW_WARNINGS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for C compiler option to allow warnings],
    [gl_cv_cc_wallow],
    [rm -f conftest*
     echo 'int dummy;' > conftest.c
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -c conftest.c 2>conftest1.err]) >/dev/null
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -Wno-error -c conftest.c 2>conftest2.err]) >/dev/null
     dnl Test the number of error output lines, because AIX xlc accepts the
     dnl option '-Wno-error', just to produce a warning
     dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
     dnl afterwards.
     if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
       gl_cv_cc_wallow='-Wno-error'
     else
       gl_cv_cc_wallow=none
     fi
     rm -f conftest*
    ])
  case "$gl_cv_cc_wallow" in
    none) GL_CFLAG_ALLOW_WARNINGS='' ;;
    *)    GL_CFLAG_ALLOW_WARNINGS="$gl_cv_cc_wallow" ;;
  esac
  AC_SUBST([GL_CFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:851: -1- AC_DEFUN([gl_CXX_ALLOW_WARNINGS], [
  dnl Requires AC_PROG_CXX or gl_PROG_ANSI_CXX.
  if test -n "$CXX" && test "$CXX" != no; then
    AC_CACHE_CHECK([for C++ compiler option to allow warnings],
      [gl_cv_cxx_wallow],
      [rm -f conftest*
       echo 'int dummy;' > conftest.cc
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -c conftest.cc 2>conftest1.err]) >/dev/null
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -Wno-error -c conftest.cc 2>conftest2.err]) >/dev/null
       dnl Test the number of error output lines, because AIX xlC accepts the
       dnl option '-Wno-error', just to produce a warning
       dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
       dnl afterwards.
       if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
         gl_cv_cxx_wallow='-Wno-error'
       else
         gl_cv_cxx_wallow=none
       fi
       rm -f conftest*
      ])
    case "$gl_cv_cxx_wallow" in
      none) GL_CXXFLAG_ALLOW_WARNINGS='' ;;
      *)    GL_CXXFLAG_ALLOW_WARNINGS="$gl_cv_cxx_wallow" ;;
    esac
  else
    GL_CXXFLAG_ALLOW_WARNINGS=''
  fi
  AC_SUBST([GL_CXXFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:891: -1- AC_DEFUN([GL_MDA_DEFINES], [
AC_REQUIRE([_GL_MDA_DEFINES])
[$gl_mda_defines]
])
m4trace:m4/gnulib-common.m4:895: -1- AC_DEFUN([_GL_MDA_DEFINES], [gl_mda_defines='
#if defined _WIN32 && !defined __CYGWIN__
#define access    _access
#define chdir     _chdir
#define chmod     _chmod
#define close     _close
#define creat     _creat
#define dup       _dup
#define dup2      _dup2
#define ecvt      _ecvt
#define execl     _execl
#define execle    _execle
#define execlp    _execlp
#define execv     _execv
#define execve    _execve
#define execvp    _execvp
#define execvpe   _execvpe
#define fcloseall _fcloseall
#define fcvt      _fcvt
#define fdopen    _fdopen
#define fileno    _fileno
#define gcvt      _gcvt
#define getcwd    _getcwd
#define getpid    _getpid
#define getw      _getw
#define isatty    _isatty
#define j0        _j0
#define j1        _j1
#define jn        _jn
#define lfind     _lfind
#define lsearch   _lsearch
#define lseek     _lseek
#define memccpy   _memccpy
#define mkdir     _mkdir
#define mktemp    _mktemp
#define open      _open
#define putenv    _putenv
#define putw      _putw
#define read      _read
#define rmdir     _rmdir
#define strdup    _strdup
#define swab      _swab
#define tempnam   _tempnam
#define tzset     _tzset
#define umask     _umask
#define unlink    _unlink
#define utime     _utime
#define wcsdup    _wcsdup
#define write     _write
#define y0        _y0
#define y1        _y1
#define yn        _yn
#endif
'
])
m4trace:m4/gnulib-comp.m4:34: -1- AC_DEFUN([gl_EARLY], [
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  # Code from module absolute-header:
  # Code from module alloca:
  # Code from module alloca-opt:
  # Code from module attribute:
  # Code from module c99:
  # Code from module calloc-gnu:
  # Code from module calloc-posix:
  # Code from module clock-time:
  # Code from module dtotimespec:
  # Code from module dup2:
  # Code from module errno:
  # Code from module extensions:
  # Code from module extern-inline:
  # Code from module fcntl-h:
  # Code from module fd-hook:
  # Code from module filename:
  # Code from module float:
  # Code from module fpieee:
  AC_REQUIRE([gl_FP_IEEE])
  # Code from module fprintf-posix:
  # Code from module fpucw:
  # Code from module free-posix:
  # Code from module frexp-nolibm:
  # Code from module frexpl-nolibm:
  # Code from module fseterr:
  # Code from module fstat:
  # Code from module gettime:
  # Code from module gettimeofday:
  # Code from module gitlog-to-changelog:
  # Code from module ialloc:
  # Code from module idx:
  # Code from module include_next:
  # Code from module intprops:
  # Code from module inttypes:
  # Code from module inttypes-incomplete:
  # Code from module isnand-nolibm:
  # Code from module isnanf-nolibm:
  # Code from module isnanl-nolibm:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  AC_REQUIRE([gl_YEAR2038_EARLY])
  # Code from module limits-h:
  # Code from module lstat:
  # Code from module malloc-gnu:
  # Code from module malloc-posix:
  # Code from module malloca:
  # Code from module math:
  # Code from module memchr:
  # Code from module minmax:
  # Code from module msvc-inval:
  # Code from module msvc-nothrow:
  # Code from module multiarch:
  # Code from module nanosleep:
  # Code from module nocrash:
  # Code from module pathmax:
  # Code from module printf-frexp:
  # Code from module printf-frexpl:
  # Code from module printf-safe:
  # Code from module pthread:
  # Code from module pthread-cond:
  # Code from module pthread-h:
  gl_ANYTHREADLIB_EARLY
  # Code from module pthread-mutex:
  # Code from module pthread-once:
  # Code from module pthread-rwlock:
  # Code from module pthread-spin:
  # Code from module pthread-thread:
  # Code from module pthread-tss:
  # Code from module pthread_mutex_timedlock:
  # Code from module raise:
  # Code from module realloc-gnu:
  # Code from module realloc-posix:
  # Code from module reallocarray:
  # Code from module sched:
  # Code from module select:
  # Code from module sigaction:
  # Code from module signal-h:
  # Code from module signbit:
  # Code from module sigprocmask:
  # Code from module size_max:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module socketlib:
  # Code from module sockets:
  # Code from module socklen:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-time:
  # Code from module std-gnu11:
  # Code from module stdalign:
  # Code from module stdbool:
  # Code from module stddef:
  # Code from module stdint:
  # Code from module stdio:
  # Code from module stdlib:
  # Code from module string:
  # Code from module sys_select:
  # Code from module sys_socket:
  # Code from module sys_stat:
  # Code from module sys_time:
  # Code from module sys_types:
  # Code from module sys_uio:
  # Code from module time:
  # Code from module timespec:
  # Code from module timespec-add:
  # Code from module timespec-sub:
  # Code from module unistd:
  # Code from module utime:
  # Code from module utime-h:
  # Code from module utimens:
  # Code from module vasnprintf:
  # Code from module verify:
  # Code from module warnings:
  # Code from module wchar:
  # Code from module windows-cond:
  # Code from module windows-once:
  # Code from module windows-spin:
  # Code from module windows-thread:
  # Code from module windows-timedmutex:
  # Code from module windows-timedrecmutex:
  # Code from module windows-timedrwlock:
  # Code from module windows-tls:
  # Code from module xalloc:
  # Code from module xalloc-oversized:
  # Code from module xsize:
])
m4trace:m4/gnulib-comp.m4:176: -1- AC_DEFUN([gl_INIT], [
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='lib'
  gl_FUNC_ALLOCA
  gl_FUNC_CALLOC_GNU
  if test $REPLACE_CALLOC = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_FUNC_CALLOC_POSIX
  if test $REPLACE_CALLOC = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-posix])
  gl_CLOCK_TIME
  gl_FUNC_DUP2
  if test $REPLACE_DUP2 = 1; then
    AC_LIBOBJ([dup2])
    gl_PREREQ_DUP2
  fi
  gl_UNISTD_MODULE_INDICATOR([dup2])
  gl_HEADER_ERRNO_H
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FCNTL_H
  gl_FCNTL_H_REQUIRE_DEFAULTS
  gl_FLOAT_H
  if test $REPLACE_FLOAT_LDBL = 1; then
    AC_LIBOBJ([float])
  fi
  if test $REPLACE_ITOLD = 1; then
    AC_LIBOBJ([itold])
  fi
  gl_FUNC_FPRINTF_POSIX
  gl_STDIO_MODULE_INDICATOR([fprintf-posix])
  gl_FUNC_FREE
  if test $REPLACE_FREE = 1; then
    AC_LIBOBJ([free])
    gl_PREREQ_FREE
  fi
  gl_STDLIB_MODULE_INDICATOR([free-posix])
  gl_FUNC_FREXP_NO_LIBM
  if test $gl_func_frexp_no_libm != yes; then
    AC_LIBOBJ([frexp])
  fi
  gl_MATH_MODULE_INDICATOR([frexp])
  gl_FUNC_FREXPL_NO_LIBM
  if test $HAVE_DECL_FREXPL = 0 || test $gl_func_frexpl_no_libm = no; then
    AC_LIBOBJ([frexpl])
  fi
  gl_MATH_MODULE_INDICATOR([frexpl])
  gl_FUNC_FSETERR
  if test $ac_cv_func___fseterr = no; then
    AC_LIBOBJ([fseterr])
  fi
  gl_FUNC_FSTAT
  if test $REPLACE_FSTAT = 1; then
    AC_LIBOBJ([fstat])
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_FSTAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([fstat])
  gl_GETTIME
  gl_FUNC_GETTIMEOFDAY
  if test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1; then
    AC_LIBOBJ([gettimeofday])
    gl_PREREQ_GETTIMEOFDAY
  fi
  gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
  gl_INTTYPES_H
  gl_INTTYPES_INCOMPLETE
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  gl_FUNC_ISNAND_NO_LIBM
  if test $gl_func_isnand_no_libm != yes; then
    AC_LIBOBJ([isnand])
    gl_PREREQ_ISNAND
  fi
  gl_FUNC_ISNANF_NO_LIBM
  if test $gl_func_isnanf_no_libm != yes; then
    AC_LIBOBJ([isnanf])
    gl_PREREQ_ISNANF
  fi
  gl_FUNC_ISNANL_NO_LIBM
  if test $gl_func_isnanl_no_libm != yes; then
    AC_LIBOBJ([isnanl])
    gl_PREREQ_ISNANL
  fi
  AC_REQUIRE([gl_LARGEFILE])
  gl_LIMITS_H
  gl_FUNC_LSTAT
  if test $REPLACE_LSTAT = 1; then
    AC_LIBOBJ([lstat])
    gl_PREREQ_LSTAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([lstat])
  gl_FUNC_MALLOC_GNU
  if test $REPLACE_MALLOC = 1; then
    AC_LIBOBJ([malloc])
  fi
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-posix])
  gl_MALLOCA
  gl_MATH_H
  gl_MATH_H_REQUIRE_DEFAULTS
  gl_FUNC_MEMCHR
  if test $REPLACE_MEMCHR = 1; then
    AC_LIBOBJ([memchr])
    gl_PREREQ_MEMCHR
  fi
  gl_STRING_MODULE_INDICATOR([memchr])
  gl_MINMAX
  AC_REQUIRE([gl_MSVC_INVAL])
  if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
    AC_LIBOBJ([msvc-inval])
  fi
  AC_REQUIRE([gl_MSVC_NOTHROW])
  if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
    AC_LIBOBJ([msvc-nothrow])
  fi
  gl_MODULE_INDICATOR([msvc-nothrow])
  gl_MULTIARCH
  gl_FUNC_NANOSLEEP
  if test $HAVE_NANOSLEEP = 0 || test $REPLACE_NANOSLEEP = 1; then
    AC_LIBOBJ([nanosleep])
    gl_PREREQ_NANOSLEEP
  fi
  gl_TIME_MODULE_INDICATOR([nanosleep])
  gl_PATHMAX
  gl_FUNC_PRINTF_FREXP
  gl_FUNC_PRINTF_FREXPL
  m4_divert_text([INIT_PREPARE], [gl_printf_safe=yes])
  gl_PTHREAD_COND
  if test $HAVE_PTHREAD_COND_INIT = 0 || test $REPLACE_PTHREAD_COND_INIT = 1; then
    AC_LIBOBJ([pthread-cond])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-cond])
  gl_PTHREAD_H
  gl_PTHREAD_H_REQUIRE_DEFAULTS
  gl_PTHREAD_MUTEX
  if test $HAVE_PTHREAD_MUTEX_INIT = 0 || test $REPLACE_PTHREAD_MUTEX_INIT = 1 \
     || test $HAVE_PTHREAD_MUTEXATTR_GETROBUST = 0 || test $REPLACE_PTHREAD_MUTEXATTR_GETROBUST = 1; then
    AC_LIBOBJ([pthread-mutex])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-mutex])
  gl_PTHREAD_ONCE
  if test $HAVE_PTHREAD_ONCE = 0 || test $REPLACE_PTHREAD_ONCE = 1; then
    AC_LIBOBJ([pthread-once])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-once])
  gl_PTHREAD_RWLOCK
  if test $HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK = 0 || test $REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK = 1; then
    AC_LIBOBJ([pthread-rwlock])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-rwlock])
  gl_PTHREAD_SPIN
  if test $HAVE_PTHREAD_SPIN_INIT = 0 || test $REPLACE_PTHREAD_SPIN_INIT = 1; then
    AC_LIBOBJ([pthread-spin])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-spin])
  gl_PTHREAD_THREAD
  if test $HAVE_PTHREAD_CREATE = 0 || test $REPLACE_PTHREAD_CREATE = 1; then
    AC_LIBOBJ([pthread-thread])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-thread])
  gl_PTHREAD_TSS
  if test $HAVE_PTHREAD_KEY_CREATE = 0 || test $REPLACE_PTHREAD_KEY_CREATE = 1; then
    AC_LIBOBJ([pthread-tss])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread-tss])
  gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK
  if test $HAVE_PTHREAD_T = 1 && test $HAVE_PTHREAD_MUTEX_TIMEDLOCK = 0; then
    AC_LIBOBJ([pthread_mutex_timedlock])
  fi
  gl_PTHREAD_MODULE_INDICATOR([pthread_mutex_timedlock])
  gl_FUNC_RAISE
  if test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1; then
    AC_LIBOBJ([raise])
    gl_PREREQ_RAISE
  fi
  gl_SIGNAL_MODULE_INDICATOR([raise])
  gl_FUNC_REALLOC_GNU
  if test $REPLACE_REALLOC = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_FUNC_REALLOC_POSIX
  if test $REPLACE_REALLOC = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-posix])
  gl_FUNC_REALLOCARRAY
  if test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1; then
    AC_LIBOBJ([reallocarray])
    gl_PREREQ_REALLOCARRAY
  fi
  gl_MODULE_INDICATOR([reallocarray])
  gl_STDLIB_MODULE_INDICATOR([reallocarray])
  gl_SCHED_H
  gl_SCHED_H_REQUIRE_DEFAULTS
  gl_FUNC_SELECT
  if test $REPLACE_SELECT = 1; then
    AC_LIBOBJ([select])
  fi
  gl_SYS_SELECT_MODULE_INDICATOR([select])
  gl_SIGACTION
  if test $HAVE_SIGACTION = 0; then
    AC_LIBOBJ([sigaction])
    gl_PREREQ_SIGACTION
  fi
  gl_SIGNAL_MODULE_INDICATOR([sigaction])
  gl_SIGNAL_H
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  gl_SIGNBIT
  if test $REPLACE_SIGNBIT = 1; then
    AC_LIBOBJ([signbitf])
    AC_LIBOBJ([signbitd])
    AC_LIBOBJ([signbitl])
  fi
  gl_MATH_MODULE_INDICATOR([signbit])
  gl_SIGNALBLOCKING
  if test $HAVE_POSIX_SIGNALBLOCKING = 0; then
    AC_LIBOBJ([sigprocmask])
    gl_PREREQ_SIGPROCMASK
  fi
  gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
  gl_SIZE_MAX
  AC_REQUIRE([gl_SOCKETLIB])
  AC_REQUIRE([gl_SOCKETS])
  gl_TYPE_SOCKLEN_T
  gt_TYPE_SSIZE_T
  gl_FUNC_STAT
  if test $REPLACE_STAT = 1; then
    AC_LIBOBJ([stat])
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_STAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([stat])
  gl_STAT_TIME
  gl_STAT_BIRTHTIME
  gl_STDALIGN_H
  AM_STDBOOL_H
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_STDINT_H
  gl_STDIO_H
  gl_STDIO_H_REQUIRE_DEFAULTS
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fscanf])
  gl_MODULE_INDICATOR([fscanf])
  gl_STDIO_MODULE_INDICATOR([scanf])
  gl_MODULE_INDICATOR([scanf])
  gl_STDIO_MODULE_INDICATOR([fgetc])
  gl_STDIO_MODULE_INDICATOR([getc])
  gl_STDIO_MODULE_INDICATOR([getchar])
  gl_STDIO_MODULE_INDICATOR([fgets])
  gl_STDIO_MODULE_INDICATOR([fread])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fprintf])
  gl_STDIO_MODULE_INDICATOR([printf])
  gl_STDIO_MODULE_INDICATOR([vfprintf])
  gl_STDIO_MODULE_INDICATOR([vprintf])
  gl_STDIO_MODULE_INDICATOR([fputc])
  gl_STDIO_MODULE_INDICATOR([putc])
  gl_STDIO_MODULE_INDICATOR([putchar])
  gl_STDIO_MODULE_INDICATOR([fputs])
  gl_STDIO_MODULE_INDICATOR([puts])
  gl_STDIO_MODULE_INDICATOR([fwrite])
  gl_STDLIB_H
  gl_STDLIB_H_REQUIRE_DEFAULTS
  gl_STRING_H
  gl_STRING_H_REQUIRE_DEFAULTS
  gl_SYS_SELECT_H
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SOCKET_H
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_STAT_H
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TIME_H
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_UIO_H
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_TIME_H
  gl_TIME_H_REQUIRE_DEFAULTS
  gl_TIMESPEC
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  gl_FUNC_UTIME
  if test $HAVE_UTIME = 0 || test $REPLACE_UTIME = 1; then
    AC_LIBOBJ([utime])
    gl_PREREQ_UTIME
  fi
  gl_UTIME_MODULE_INDICATOR([utime])
  gl_UTIME_H
  gl_UTIME_H_REQUIRE_DEFAULTS
  gl_UTIMENS
  AC_REQUIRE([AC_C_RESTRICT])
  gl_FUNC_VASNPRINTF
  gl_WCHAR_H
  gl_WCHAR_H_REQUIRE_DEFAULTS
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-cond])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-once])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-spin])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-thread])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-timedmutex])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-timedrecmutex])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-timedrwlock])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-tls])
      ;;
  esac
  gl_XALLOC
  gl_MODULE_INDICATOR([xalloc])
  gl_XSIZE
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='tests'
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
  ])
  LIBGNU_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBGNU_LIBDEPS])
  LIBGNU_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBGNU_LTLIBDEPS])
])
m4trace:m4/gnulib-comp.m4:648: -1- AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:655: -1- AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:664: -1- AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [lib])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:675: -1- AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:682: -1- AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:691: -1- AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:702: -1- AC_DEFUN([gl_FILE_LIST], [
  build-aux/gitlog-to-changelog
  lib/_Noreturn.h
  lib/alloca.c
  lib/alloca.in.h
  lib/arg-nonnull.h
  lib/asnprintf.c
  lib/attribute.h
  lib/c++defs.h
  lib/calloc.c
  lib/dtotimespec.c
  lib/dup2.c
  lib/errno.in.h
  lib/fcntl.in.h
  lib/fd-hook.c
  lib/fd-hook.h
  lib/filename.h
  lib/float+.h
  lib/float.c
  lib/float.in.h
  lib/fprintf.c
  lib/fpucw.h
  lib/free.c
  lib/frexp.c
  lib/frexpl.c
  lib/fseterr.c
  lib/fseterr.h
  lib/fstat.c
  lib/gettime.c
  lib/gettimeofday.c
  lib/ialloc.c
  lib/ialloc.h
  lib/idx.h
  lib/intprops.h
  lib/inttypes.in.h
  lib/isnan.c
  lib/isnand-nolibm.h
  lib/isnand.c
  lib/isnanf-nolibm.h
  lib/isnanf.c
  lib/isnanl-nolibm.h
  lib/isnanl.c
  lib/itold.c
  lib/limits.in.h
  lib/lstat.c
  lib/malloc.c
  lib/malloca.c
  lib/malloca.h
  lib/math.c
  lib/math.in.h
  lib/memchr.c
  lib/memchr.valgrind
  lib/minmax.h
  lib/msvc-inval.c
  lib/msvc-inval.h
  lib/msvc-nothrow.c
  lib/msvc-nothrow.h
  lib/nanosleep.c
  lib/pathmax.h
  lib/printf-args.c
  lib/printf-args.h
  lib/printf-frexp.c
  lib/printf-frexp.h
  lib/printf-frexpl.c
  lib/printf-frexpl.h
  lib/printf-parse.c
  lib/printf-parse.h
  lib/pthread-cond.c
  lib/pthread-mutex.c
  lib/pthread-once.c
  lib/pthread-rwlock.c
  lib/pthread-spin.c
  lib/pthread-thread.c
  lib/pthread-tss.c
  lib/pthread.in.h
  lib/pthread_mutex_timedlock.c
  lib/raise.c
  lib/realloc.c
  lib/reallocarray.c
  lib/sched.in.h
  lib/select.c
  lib/sig-handler.c
  lib/sig-handler.h
  lib/sigaction.c
  lib/signal.in.h
  lib/signbitd.c
  lib/signbitf.c
  lib/signbitl.c
  lib/sigprocmask.c
  lib/size_max.h
  lib/sockets.c
  lib/sockets.h
  lib/stat-time.c
  lib/stat-time.h
  lib/stat-w32.c
  lib/stat-w32.h
  lib/stat.c
  lib/stdalign.in.h
  lib/stdbool.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio-impl.h
  lib/stdio.in.h
  lib/stdlib.in.h
  lib/string.in.h
  lib/sys_select.in.h
  lib/sys_socket.c
  lib/sys_socket.in.h
  lib/sys_stat.in.h
  lib/sys_time.in.h
  lib/sys_types.in.h
  lib/sys_uio.in.h
  lib/time.in.h
  lib/timespec-add.c
  lib/timespec-sub.c
  lib/timespec.c
  lib/timespec.h
  lib/unistd.c
  lib/unistd.in.h
  lib/utime.c
  lib/utime.in.h
  lib/utimens.c
  lib/utimens.h
  lib/vasnprintf.c
  lib/vasnprintf.h
  lib/verify.h
  lib/w32sock.h
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/windows-cond.c
  lib/windows-cond.h
  lib/windows-initguard.h
  lib/windows-once.c
  lib/windows-once.h
  lib/windows-spin.c
  lib/windows-spin.h
  lib/windows-thread.c
  lib/windows-thread.h
  lib/windows-timedmutex.c
  lib/windows-timedmutex.h
  lib/windows-timedrecmutex.c
  lib/windows-timedrecmutex.h
  lib/windows-timedrwlock.c
  lib/windows-timedrwlock.h
  lib/windows-tls.c
  lib/windows-tls.h
  lib/xalloc-oversized.h
  lib/xalloc.h
  lib/xmalloc.c
  lib/xsize.c
  lib/xsize.h
  m4/00gnulib.m4
  m4/absolute-header.m4
  m4/alloca.m4
  m4/calloc.m4
  m4/clock_time.m4
  m4/dup2.m4
  m4/eealloc.m4
  m4/errno_h.m4
  m4/exponentd.m4
  m4/exponentf.m4
  m4/exponentl.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/fcntl-o.m4
  m4/fcntl_h.m4
  m4/float_h.m4
  m4/fpieee.m4
  m4/fprintf-posix.m4
  m4/free.m4
  m4/frexp.m4
  m4/frexpl.m4
  m4/fseterr.m4
  m4/fstat.m4
  m4/gettime.m4
  m4/gettimeofday.m4
  m4/gnulib-common.m4
  m4/include_next.m4
  m4/intmax_t.m4
  m4/inttypes.m4
  m4/inttypes_h.m4
  m4/isnand.m4
  m4/isnanf.m4
  m4/isnanl.m4
  m4/largefile.m4
  m4/ldexpl.m4
  m4/limits-h.m4
  m4/lstat.m4
  m4/malloc.m4
  m4/malloca.m4
  m4/math_h.m4
  m4/memchr.m4
  m4/minmax.m4
  m4/mmap-anon.m4
  m4/msvc-inval.m4
  m4/msvc-nothrow.m4
  m4/multiarch.m4
  m4/nanosleep.m4
  m4/nocrash.m4
  m4/off_t.m4
  m4/pathmax.m4
  m4/pid_t.m4
  m4/printf-frexp.m4
  m4/printf-frexpl.m4
  m4/printf.m4
  m4/pthread-cond.m4
  m4/pthread-mutex.m4
  m4/pthread-once.m4
  m4/pthread-rwlock.m4
  m4/pthread-spin.m4
  m4/pthread-thread.m4
  m4/pthread-tss.m4
  m4/pthread_h.m4
  m4/pthread_mutex_timedlock.m4
  m4/raise.m4
  m4/realloc.m4
  m4/reallocarray.m4
  m4/sched_h.m4
  m4/select.m4
  m4/sigaction.m4
  m4/signal_h.m4
  m4/signalblocking.m4
  m4/signbit.m4
  m4/size_max.m4
  m4/socketlib.m4
  m4/sockets.m4
  m4/socklen.m4
  m4/sockpfaf.m4
  m4/ssize_t.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/std-gnu11.m4
  m4/stdalign.m4
  m4/stdbool.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdint_h.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/string_h.m4
  m4/sys_select_h.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_time_h.m4
  m4/sys_types_h.m4
  m4/sys_uio_h.m4
  m4/threadlib.m4
  m4/time_h.m4
  m4/timespec.m4
  m4/unistd_h.m4
  m4/utime.m4
  m4/utime_h.m4
  m4/utimens.m4
  m4/utimes.m4
  m4/vasnprintf.m4
  m4/warn-on-use.m4
  m4/warnings.m4
  m4/wchar_h.m4
  m4/wchar_t.m4
  m4/wint_t.m4
  m4/xalloc.m4
  m4/xsize.m4
  m4/year2038.m4
  m4/zzgnulib.m4
])
m4trace:m4/include_next.m4:36: -1- AC_DEFUN([gl_INCLUDE_NEXT], [
  AC_LANG_PREPROC_REQUIRE()
  AC_CACHE_CHECK([whether the preprocessor supports include_next],
    [gl_cv_have_include_next],
    [rm -rf conftestd1a conftestd1b conftestd2
     mkdir conftestd1a conftestd1b conftestd2
     dnl IBM C 9.0, 10.1 (original versions, prior to the 2009-01 updates) on
     dnl AIX 6.1 support include_next when used as first preprocessor directive
     dnl in a file, but not when preceded by another include directive. Check
     dnl for this bug by including <stdio.h>.
     dnl Additionally, with this same compiler, include_next is a no-op when
     dnl used in a header file that was included by specifying its absolute
     dnl file name. Despite these two bugs, include_next is used in the
     dnl compiler's <math.h>. By virtue of the second bug, we need to use
     dnl include_next as well in this case.
     cat <<EOF > conftestd1a/conftest.h
#define DEFINED_IN_CONFTESTD1
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd1b/conftest.h
#define DEFINED_IN_CONFTESTD1
#include <stdio.h>
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd2/conftest.h
#ifndef DEFINED_IN_CONFTESTD1
#error "include_next test doesn't work"
#endif
#define DEFINED_IN_CONFTESTD2
EOF
     gl_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1b -Iconftestd2"
dnl We intentionally avoid using AC_LANG_SOURCE here.
     AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
       [gl_cv_have_include_next=yes],
       [CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1a -Iconftestd2"
        AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
          [gl_cv_have_include_next=buggy],
          [gl_cv_have_include_next=no])
       ])
     CPPFLAGS="$gl_save_CPPFLAGS"
     rm -rf conftestd1a conftestd1b conftestd2
    ])
  PRAGMA_SYSTEM_HEADER=
  if test $gl_cv_have_include_next = yes; then
    INCLUDE_NEXT=include_next
    INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    if test -n "$GCC"; then
      PRAGMA_SYSTEM_HEADER='#pragma GCC system_header'
    fi
  else
    if test $gl_cv_have_include_next = buggy; then
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    else
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include
    fi
  fi
  AC_SUBST([INCLUDE_NEXT])
  AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
  AC_SUBST([PRAGMA_SYSTEM_HEADER])

  dnl HP NonStop systems, which define __TANDEM, limit the line length
  dnl after including some system header files.
  AC_CACHE_CHECK([whether source code line length is unlimited],
    [gl_cv_source_line_length_unlimited],
    [AC_EGREP_CPP([choke me],
       [
#ifdef __TANDEM
choke me
#endif
       ],
       [gl_cv_source_line_length_unlimited=no],
       [gl_cv_source_line_length_unlimited=yes])
    ])
  if test $gl_cv_source_line_length_unlimited = no; then
    PRAGMA_COLUMNS="#pragma COLUMNS 10000"
  else
    PRAGMA_COLUMNS=
  fi
  AC_SUBST([PRAGMA_COLUMNS])
])
m4trace:m4/include_next.m4:156: -1- AC_DEFUN([gl_CHECK_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [check])
])
m4trace:m4/include_next.m4:166: -1- AC_DEFUN([gl_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [assume])
])
m4trace:m4/include_next.m4:172: -1- AC_DEFUN([gl_NEXT_HEADERS_INTERNAL], [
  AC_REQUIRE([gl_INCLUDE_NEXT])
  AC_REQUIRE([AC_CANONICAL_HOST])

  m4_if([$2], [check],
    [AC_CHECK_HEADERS_ONCE([$1])
    ])

  m4_foreach_w([gl_HEADER_NAME], [$1],
    [AS_VAR_PUSHDEF([gl_next_header],
                    [gl_cv_next_]m4_defn([gl_HEADER_NAME]))
     if test $gl_cv_have_include_next = yes; then
       AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
     else
       AC_CACHE_CHECK(
         [absolute name of <]m4_defn([gl_HEADER_NAME])[>],
         [gl_next_header],
         [m4_if([$2], [check],
            [AS_VAR_PUSHDEF([gl_header_exists],
                            [ac_cv_header_]m4_defn([gl_HEADER_NAME]))
             if test AS_VAR_GET([gl_header_exists]) = yes; then
             AS_VAR_POPDEF([gl_header_exists])
            ])
           gl_ABSOLUTE_HEADER_ONE(gl_HEADER_NAME)
           AS_VAR_COPY([gl_header], [gl_cv_absolute_]AS_TR_SH(gl_HEADER_NAME))
           AS_VAR_SET([gl_next_header], ['"'$gl_header'"'])
          m4_if([$2], [check],
            [else
               AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
             fi
            ])
         ])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_]m4_defn([gl_HEADER_NAME])),
       [AS_VAR_GET([gl_next_header])])
     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'
       gl_next_as_first_directive='<'gl_HEADER_NAME'>'
     else
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'
       gl_next_as_first_directive=AS_VAR_GET([gl_next_header])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_AS_FIRST_DIRECTIVE_]m4_defn([gl_HEADER_NAME])),
       [$gl_next_as_first_directive])
     AS_VAR_POPDEF([gl_next_header])])
])
m4trace:m4/intmax_t.m4:15: -1- AC_DEFUN([gl_AC_TYPE_INTMAX_T], [
  dnl For simplicity, we assume that a header file defines 'intmax_t' if and
  dnl only if it defines 'uintmax_t'.
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  if test $gl_cv_header_inttypes_h = no && test $gl_cv_header_stdint_h = no; then
    AC_DEFINE_UNQUOTED([intmax_t], [long long],
     [Define to long or long long if <inttypes.h> and <stdint.h> don't define.])
  else
    AC_DEFINE([HAVE_INTMAX_T], [1],
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  fi
])
m4trace:m4/intmax_t.m4:32: -1- AC_DEFUN([gt_AC_TYPE_INTMAX_T], [
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  AC_CACHE_CHECK([for intmax_t], [gt_cv_c_intmax_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[
#include <stddef.h>
#include <stdlib.h>
#if HAVE_STDINT_H_WITH_UINTMAX
#include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
#include <inttypes.h>
#endif
          ]],
          [[intmax_t x = -1; return !x;]])],
       [gt_cv_c_intmax_t=yes],
       [gt_cv_c_intmax_t=no])])
  if test $gt_cv_c_intmax_t = yes; then
    AC_DEFINE([HAVE_INTMAX_T], [1],
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  else
    AC_DEFINE_UNQUOTED([intmax_t], [long long],
     [Define to long or long long if <stdint.h> and <inttypes.h> don't define.])
  fi
])
m4trace:m4/inttypes.m4:10: -1- AC_DEFUN_ONCE([gl_INTTYPES_H], [
  AC_REQUIRE([gl_INTTYPES_INCOMPLETE])
  gl_INTTYPES_PRI_SCN
])
m4trace:m4/inttypes.m4:16: -1- AC_DEFUN_ONCE([gl_INTTYPES_INCOMPLETE], [
  AC_REQUIRE([gl_STDINT_H])
  AC_CHECK_HEADERS_ONCE([inttypes.h])

  dnl Override <inttypes.h> always, so that the portability warnings work.
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([inttypes.h])

  AC_REQUIRE([gl_MULTIARCH])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/inttypes.m4:36: -1- AC_DEFUN([gl_INTTYPES_PRI_SCN], [
  PRIPTR_PREFIX=
  if test -n "$STDINT_H"; then
    dnl Using the gnulib <stdint.h>. It defines intptr_t to 'long' or
    dnl 'long long', depending on _WIN64.
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM([[
         #ifdef _WIN64
         LLP64
         #endif
         ]])
      ],
      [PRIPTR_PREFIX='"l"'],
      [PRIPTR_PREFIX='"ll"'])
  else
    dnl Using the system's <stdint.h>.
    for glpfx in '' l ll I64; do
      case $glpfx in
        '')  gltype1='int';;
        l)   gltype1='long int';;
        ll)  gltype1='long long int';;
        I64) gltype1='__int64';;
      esac
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[#include <stdint.h>
           extern intptr_t foo;
           extern $gltype1 foo;]])],
        [PRIPTR_PREFIX='"'$glpfx'"'])
      test -n "$PRIPTR_PREFIX" && break
    done
  fi
  AC_SUBST([PRIPTR_PREFIX])

  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [INT32_MAX_LT_INTMAX_MAX],
    [defined INT32_MAX && defined INTMAX_MAX],
    [INT32_MAX < INTMAX_MAX],
    [sizeof (int) < sizeof (long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [INT64_MAX_EQ_LONG_MAX],
      [defined INT64_MAX],
      [INT64_MAX == LONG_MAX],
      [sizeof (long long int) == sizeof (long int)])
  else
    INT64_MAX_EQ_LONG_MAX=-1
  fi
  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [UINT32_MAX_LT_UINTMAX_MAX],
    [defined UINT32_MAX && defined UINTMAX_MAX],
    [UINT32_MAX < UINTMAX_MAX],
    [sizeof (unsigned int) < sizeof (unsigned long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [UINT64_MAX_EQ_ULONG_MAX],
      [defined UINT64_MAX],
      [UINT64_MAX == ULONG_MAX],
      [sizeof (unsigned long long int) == sizeof (unsigned long int)])
  else
    UINT64_MAX_EQ_ULONG_MAX=-1
  fi
])
m4trace:m4/inttypes.m4:106: -1- AC_DEFUN([gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION], [
  AC_CACHE_CHECK([whether $3],
    [gl_cv_test_$1],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* Work also in C++ mode.  */
            #define __STDC_LIMIT_MACROS 1

            /* Work if build is not clean.  */
            #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H

            #include <limits.h>
            #if HAVE_STDINT_H
             #include <stdint.h>
            #endif

            #if $2
             #define CONDITION ($3)
            #else
             #define CONDITION ($4)
            #endif
            int test[CONDITION ? 1 : -1];]])],
       [gl_cv_test_$1=yes],
       [gl_cv_test_$1=no])])
  if test $gl_cv_test_$1 = yes; then
    $1=1;
  else
    $1=0;
  fi
  AC_SUBST([$1])
])
m4trace:m4/inttypes.m4:143: -1- AC_DEFUN([gl_INTTYPES_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/inttypes.m4:153: -1- AC_DEFUN([gl_INTTYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
])
m4trace:m4/inttypes.m4:165: -1- AC_DEFUN([gl_INTTYPES_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_IMAXABS=1;   AC_SUBST([HAVE_DECL_IMAXABS])
  HAVE_DECL_IMAXDIV=1;   AC_SUBST([HAVE_DECL_IMAXDIV])
  HAVE_DECL_STRTOIMAX=1; AC_SUBST([HAVE_DECL_STRTOIMAX])
  HAVE_DECL_STRTOUMAX=1; AC_SUBST([HAVE_DECL_STRTOUMAX])
  HAVE_IMAXDIV_T=1;      AC_SUBST([HAVE_IMAXDIV_T])
  REPLACE_STRTOIMAX=0;   AC_SUBST([REPLACE_STRTOIMAX])
  REPLACE_STRTOUMAX=0;   AC_SUBST([REPLACE_STRTOUMAX])
  INT32_MAX_LT_INTMAX_MAX=1;  AC_SUBST([INT32_MAX_LT_INTMAX_MAX])
  INT64_MAX_EQ_LONG_MAX='defined _LP64';  AC_SUBST([INT64_MAX_EQ_LONG_MAX])
  PRIPTR_PREFIX=__PRIPTR_PREFIX;  AC_SUBST([PRIPTR_PREFIX])
  UINT32_MAX_LT_UINTMAX_MAX=1;  AC_SUBST([UINT32_MAX_LT_UINTMAX_MAX])
  UINT64_MAX_EQ_ULONG_MAX='defined _LP64';  AC_SUBST([UINT64_MAX_EQ_ULONG_MAX])
])
m4trace:m4/inttypes_h.m4:12: -1- AC_DEFUN([gl_AC_HEADER_INTTYPES_H], [
  AC_CACHE_CHECK([for inttypes.h], [gl_cv_header_inttypes_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[
#include <sys/types.h>
#include <inttypes.h>
          ]],
          [[uintmax_t i = (uintmax_t) -1; return !i;]])],
       [gl_cv_header_inttypes_h=yes],
       [gl_cv_header_inttypes_h=no])])
  if test $gl_cv_header_inttypes_h = yes; then
    AC_DEFINE_UNQUOTED([HAVE_INTTYPES_H_WITH_UINTMAX], [1],
      [Define if <inttypes.h> exists, doesn't clash with <sys/types.h>,
       and declares uintmax_t. ])
  fi
])
m4trace:m4/isnand.m4:9: -1- AC_DEFUN([gl_FUNC_ISNAND], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNAND_LIBM=
  gl_HAVE_ISNAND_NO_LIBM
  if test $gl_cv_func_isnand_no_libm = no; then
    gl_HAVE_ISNAND_IN_LIBM
    if test $gl_cv_func_isnand_in_libm = yes; then
      ISNAND_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnand set here is used by isnan.m4.
  if test $gl_cv_func_isnand_no_libm = yes \
     || test $gl_cv_func_isnand_in_libm = yes; then
    gl_func_isnand=yes
  else
    gl_func_isnand=no
    HAVE_ISNAND=0
  fi
  AC_SUBST([ISNAND_LIBM])
])
m4trace:m4/isnand.m4:33: -1- AC_DEFUN([gl_FUNC_ISNAND_NO_LIBM], [
  gl_HAVE_ISNAND_NO_LIBM
  gl_func_isnand_no_libm=$gl_cv_func_isnand_no_libm
  if test $gl_cv_func_isnand_no_libm = yes; then
    AC_DEFINE([HAVE_ISNAND_IN_LIBC], [1],
      [Define if the isnan(double) function is available in libc.])
  fi
])
m4trace:m4/isnand.m4:44: -1- AC_DEFUN([gl_PREREQ_ISNAND], [
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
])
m4trace:m4/isnand.m4:51: -1- AC_DEFUN([gl_HAVE_ISNAND_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(double) can be used with libm],
    [gl_cv_func_isnand_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnand
             # define isnand(x) __builtin_isnan ((double)(x))
             #elif defined isnan
             # undef isnand
             # define isnand(x) isnan ((double)(x))
             #endif
             double x;]],
           [[return isnand (x);]])],
        [gl_cv_func_isnand_in_libm=yes],
        [gl_cv_func_isnand_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnand.m4:76: -1- AC_DEFUN([gl_HAVE_ISNAND_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(double) can be used without linking with libm],
    [gl_cv_func_isnand_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnand
             # define isnand(x) __builtin_isnan ((double)(x))
             #else
             # undef isnand
             # define isnand(x) isnan ((double)(x))
             #endif
             double x;]],
           [[return isnand (x);]])],
        [gl_cv_func_isnand_no_libm=yes],
        [gl_cv_func_isnand_no_libm=no])
    ])
])
m4trace:m4/isnanf.m4:9: -1- AC_DEFUN([gl_FUNC_ISNANF], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNANF_LIBM=
  gl_HAVE_ISNANF_NO_LIBM
  if test $gl_cv_func_isnanf_no_libm = no; then
    gl_HAVE_ISNANF_IN_LIBM
    if test $gl_cv_func_isnanf_in_libm = yes; then
      ISNANF_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnanf set here is used by isnan.m4.
  if test $gl_cv_func_isnanf_no_libm = yes \
     || test $gl_cv_func_isnanf_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $ISNANF_LIBM"
    gl_ISNANF_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_isnanf_works" in
      *yes) gl_func_isnanf=yes ;;
      *)    gl_func_isnanf=no; ISNANF_LIBM= ;;
    esac
  else
    gl_func_isnanf=no
  fi
  if test $gl_func_isnanf != yes; then
    HAVE_ISNANF=0
  fi
  AC_SUBST([ISNANF_LIBM])
])
m4trace:m4/isnanf.m4:42: -1- AC_DEFUN([gl_FUNC_ISNANF_NO_LIBM], [
  gl_HAVE_ISNANF_NO_LIBM
  if test $gl_cv_func_isnanf_no_libm = yes; then
    gl_ISNANF_WORKS
  fi
  if test $gl_cv_func_isnanf_no_libm = yes \
     && { case "$gl_cv_func_isnanf_works" in
            *yes) true;;
            *) false;;
          esac
        }; then
    gl_func_isnanf_no_libm=yes
    AC_DEFINE([HAVE_ISNANF_IN_LIBC], [1],
      [Define if the isnan(float) function is available in libc.])
  else
    gl_func_isnanf_no_libm=no
  fi
])
m4trace:m4/isnanf.m4:63: -1- AC_DEFUN([gl_PREREQ_ISNANF], [
  gl_FLOAT_EXPONENT_LOCATION
])
m4trace:m4/isnanf.m4:69: -1- AC_DEFUN([gl_HAVE_ISNANF_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(float) can be used without linking with libm],
    [gl_cv_func_isnanf_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanf
             # define isnanf(x) __builtin_isnan ((float)(x))
             #elif defined isnan
             # undef isnanf
             # define isnanf(x) isnan ((float)(x))
             #endif
             float x;]],
           [[return isnanf (x);]])],
        [gl_cv_func_isnanf_no_libm=yes],
        [gl_cv_func_isnanf_no_libm=no])
    ])
])
m4trace:m4/isnanf.m4:92: -1- AC_DEFUN([gl_HAVE_ISNANF_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(float) can be used with libm],
    [gl_cv_func_isnanf_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanf
             # define isnanf(x) __builtin_isnan ((float)(x))
             #elif defined isnan
             # undef isnanf
             # define isnanf(x) isnan ((float)(x))
             #endif
             float x;]],
           [[return isnanf (x);]])],
        [gl_cv_func_isnanf_in_libm=yes],
        [gl_cv_func_isnanf_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnanf.m4:120: -1- AC_DEFUN([gl_ISNANF_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_FLOAT_EXPONENT_LOCATION])
  AC_CACHE_CHECK([whether isnan(float) works], [gl_cv_func_isnanf_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <math.h>
#if (__GNUC__ >= 4) || (__clang_major__ >= 4)
# undef isnanf
# define isnanf(x) __builtin_isnan ((float)(x))
#elif defined isnan
# undef isnanf
# define isnanf(x) isnan ((float)(x))
#endif
/* The Compaq (ex-DEC) C 6.4 compiler chokes on the expression 0.0 / 0.0.  */
#ifdef __DECC
static float
NaN ()
{
  static float zero = 0.0f;
  return zero / zero;
}
#else
# define NaN() (0.0f / 0.0f)
#endif
#define NWORDS \
  ((sizeof (float) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { unsigned int word[NWORDS]; float value; } memory_float;
int main()
{
  int result = 0;

  if (isnanf (1.0f / 0.0f))
    result |= 1;

  if (!isnanf (NaN ()))
    result |= 2;

#if defined FLT_EXPBIT0_WORD && defined FLT_EXPBIT0_BIT
  /* The isnanf function should be immune against changes in the sign bit and
     in the mantissa bits.  The xor operation twiddles a bit that can only be
     a sign bit or a mantissa bit.  */
  if (FLT_EXPBIT0_WORD == 0 && FLT_EXPBIT0_BIT > 0)
    {
      memory_float m;

      m.value = NaN ();
      /* Set the bits below the exponent to 01111...111.  */
      m.word[0] &= -1U << FLT_EXPBIT0_BIT;
      m.word[0] |= (1U << (FLT_EXPBIT0_BIT - 1)) - 1;
      if (!isnanf (m.value))
        result |= 4;
    }
#endif

  return result;
}]])],
        [gl_cv_func_isnanf_works=yes],
        [gl_cv_func_isnanf_works=no],
        [case "$host_os" in
           irix* | solaris*) gl_cv_func_isnanf_works="guessing no" ;;
           mingw*) # Guess yes on mingw, no on MSVC.
             AC_EGREP_CPP([Known], [
#ifdef __MINGW32__
 Known
#endif
               ],
               [gl_cv_func_isnanf_works="guessing yes"],
               [gl_cv_func_isnanf_works="guessing no"])
             ;;
           *) gl_cv_func_isnanf_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/isnanl.m4:7: -1- AC_DEFUN([gl_FUNC_ISNANL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNANL_LIBM=
  gl_HAVE_ISNANL_NO_LIBM
  if test $gl_cv_func_isnanl_no_libm = no; then
    gl_HAVE_ISNANL_IN_LIBM
    if test $gl_cv_func_isnanl_in_libm = yes; then
      ISNANL_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnanl set here is used by isnan.m4.
  if test $gl_cv_func_isnanl_no_libm = yes \
     || test $gl_cv_func_isnanl_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $ISNANL_LIBM"
    gl_FUNC_ISNANL_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_isnanl_works" in
      *yes) gl_func_isnanl=yes ;;
      *)    gl_func_isnanl=no; ISNANL_LIBM= ;;
    esac
  else
    gl_func_isnanl=no
  fi
  if test $gl_func_isnanl != yes; then
    HAVE_ISNANL=0
  fi
  AC_SUBST([ISNANL_LIBM])
])
m4trace:m4/isnanl.m4:38: -1- AC_DEFUN([gl_FUNC_ISNANL_NO_LIBM], [
  gl_HAVE_ISNANL_NO_LIBM
  gl_func_isnanl_no_libm=$gl_cv_func_isnanl_no_libm
  if test $gl_func_isnanl_no_libm = yes; then
    gl_FUNC_ISNANL_WORKS
    case "$gl_cv_func_isnanl_works" in
      *yes) ;;
      *)    gl_func_isnanl_no_libm=no ;;
    esac
  fi
  if test $gl_func_isnanl_no_libm = yes; then
    AC_DEFINE([HAVE_ISNANL_IN_LIBC], [1],
      [Define if the isnan(long double) function is available in libc.])
  fi
])
m4trace:m4/isnanl.m4:56: -1- AC_DEFUN([gl_PREREQ_ISNANL], [
  gl_LONG_DOUBLE_EXPONENT_LOCATION
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
])
m4trace:m4/isnanl.m4:63: -1- AC_DEFUN([gl_HAVE_ISNANL_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(long double) can be used without linking with libm],
    [gl_cv_func_isnanl_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanl
             # define isnanl(x) __builtin_isnan ((long double)(x))
             #elif defined isnan
             # undef isnanl
             # define isnanl(x) isnan ((long double)(x))
             #endif
             long double x;]],
           [[return isnanl (x);]])],
        [gl_cv_func_isnanl_no_libm=yes],
        [gl_cv_func_isnanl_no_libm=no])
    ])
])
m4trace:m4/isnanl.m4:86: -1- AC_DEFUN([gl_HAVE_ISNANL_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(long double) can be used with libm],
    [gl_cv_func_isnanl_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanl
             # define isnanl(x) __builtin_isnan ((long double)(x))
             #elif defined isnan
             # undef isnanl
             # define isnanl(x) isnan ((long double)(x))
             #endif
             long double x;]],
           [[return isnanl (x);]])],
        [gl_cv_func_isnanl_in_libm=yes],
        [gl_cv_func_isnanl_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnanl.m4:113: -1- AC_DEFUN([gl_FUNC_ISNANL_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether isnanl works], [gl_cv_func_isnanl_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <limits.h>
#include <math.h>
#if (__GNUC__ >= 4) || (__clang_major__ >= 4)
# undef isnanl
# define isnanl(x) __builtin_isnan ((long double)(x))
#elif defined isnan
# undef isnanl
# define isnanl(x) isnan ((long double)(x))
#endif
#define NWORDS \
  ((sizeof (long double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { unsigned int word[NWORDS]; long double value; }
        memory_long_double;
/* On Irix 6.5, gcc 3.4.3 can't compute compile-time NaN, and needs the
   runtime type conversion.  */
#ifdef __sgi
static long double NaNl ()
{
  double zero = 0.0;
  return zero / zero;
}
#else
# define NaNl() (0.0L / 0.0L)
#endif
int main ()
{
  int result = 0;

  if (!isnanl (NaNl ()))
    result |= 1;

  {
    memory_long_double m;
    unsigned int i;

    /* The isnanl function should be immune against changes in the sign bit and
       in the mantissa bits.  The xor operation twiddles a bit that can only be
       a sign bit or a mantissa bit (since the exponent never extends to
       bit 31).  */
    m.value = NaNl ();
    m.word[NWORDS / 2] ^= (unsigned int) 1 << (sizeof (unsigned int) * CHAR_BIT - 1);
    for (i = 0; i < NWORDS; i++)
      m.word[i] |= 1;
    if (!isnanl (m.value))
      result |= 1;
  }

#if ((defined __ia64 && LDBL_MANT_DIG == 64) || (defined __x86_64__ || defined __amd64__) || (defined __i386 || defined __i386__ || defined _I386 || defined _M_IX86 || defined _X86_)) && !HAVE_SAME_LONG_DOUBLE_AS_DOUBLE
/* Representation of an 80-bit 'long double' as an initializer for a sequence
   of 'unsigned int' words.  */
# ifdef WORDS_BIGENDIAN
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { ((unsigned int) (exponent) << 16) | ((unsigned int) (manthi) >> 16), \
       ((unsigned int) (manthi) << 16) | ((unsigned int) (mantlo) >> 16),   \
       (unsigned int) (mantlo) << 16                                        \
     }
# else
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { mantlo, manthi, exponent }
# endif
  { /* Quiet NaN.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0xC3333333, 0x00000000) };
    if (!isnanl (x.value))
      result |= 2;
  }
  {
    /* Signalling NaN.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0x83333333, 0x00000000) };
    if (!isnanl (x.value))
      result |= 2;
  }
  /* isnanl should return something even for noncanonical values.  */
  { /* Pseudo-NaN.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0x40000001, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 4;
  }
  { /* Pseudo-Infinity.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0x00000000, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 8;
  }
  { /* Pseudo-Zero.  */
    static memory_long_double x =
      { LDBL80_WORDS (0x4004, 0x00000000, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 16;
  }
  { /* Unnormalized number.  */
    static memory_long_double x =
      { LDBL80_WORDS (0x4000, 0x63333333, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 32;
  }
  { /* Pseudo-Denormal.  */
    static memory_long_double x =
      { LDBL80_WORDS (0x0000, 0x83333333, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 64;
  }
#endif

  return result;
}]])],
        [gl_cv_func_isnanl_works=yes],
        [gl_cv_func_isnanl_works=no],
        [case "$host_os" in
           mingw*) # Guess yes on mingw, no on MSVC.
             AC_EGREP_CPP([Known], [
#ifdef __MINGW32__
 Known
#endif
               ],
               [gl_cv_func_isnanl_works="guessing yes"],
               [gl_cv_func_isnanl_works="guessing no"])
             ;;
           *) gl_cv_func_isnanl_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/largefile.m4:13: -1- AC_DEFUN([gl_SET_LARGEFILE_SOURCE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_FUNC_FSEEKO
  case "$host_os" in
    hpux*)
      AC_DEFINE([_LARGEFILE_SOURCE], [1],
        [Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2).])
      ;;
  esac
])
m4trace:m4/largefile.m4:83: -1- AC_DEFUN([AC_SYS_LARGEFILE], [AC_ARG_ENABLE(largefile,
               [  --disable-largefile     omit support for large files])
AS_IF([test "$enable_largefile" != no],
 [AC_CACHE_CHECK([for special C compiler options needed for large files],
    ac_cv_sys_largefile_CC,
    [ac_cv_sys_largefile_CC=no
     if test "$GCC" != yes; then
       ac_save_CC=$CC
       while :; do
         # IRIX 6.2 and later do not support large files by default,
         # so use the C compiler's -n32 option if that helps.
         AC_LANG_CONFTEST([AC_LANG_PROGRAM([_AC_SYS_LARGEFILE_TEST_INCLUDES])])
         AC_COMPILE_IFELSE([], [break])
         CC="$CC -n32"
         AC_COMPILE_IFELSE([], [ac_cv_sys_largefile_CC=' -n32'; break])
         break
       done
       CC=$ac_save_CC
       rm -f conftest.$ac_ext
    fi])
  if test "$ac_cv_sys_largefile_CC" != no; then
    CC=$CC$ac_cv_sys_largefile_CC
  fi

  _AC_SYS_LARGEFILE_MACRO_VALUE(_FILE_OFFSET_BITS, 64,
    ac_cv_sys_file_offset_bits,
    [Number of bits in a file offset, on hosts where this is settable.],
    [_AC_SYS_LARGEFILE_TEST_INCLUDES])
  AS_CASE([$ac_cv_sys_file_offset_bits],
    [unknown],
      [_AC_SYS_LARGEFILE_MACRO_VALUE([_LARGE_FILES], [1],
         [ac_cv_sys_large_files],
         [Define for large files, on AIX-style hosts.],
         [_AC_SYS_LARGEFILE_TEST_INCLUDES])],
    [64],
      [gl_YEAR2038_BODY([])])])
])
m4trace:m4/largefile.m4:126: -1- AC_DEFUN([gl_LARGEFILE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      dnl Native Windows.
      dnl mingw64 defines off_t to a 64-bit type already, if
      dnl _FILE_OFFSET_BITS=64, which is ensured by AC_SYS_LARGEFILE.
      AC_CACHE_CHECK([for 64-bit off_t], [gl_cv_type_off_t_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                int verify_off_t_size[sizeof (off_t) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_type_off_t_64=yes], [gl_cv_type_off_t_64=no])
        ])
      if test $gl_cv_type_off_t_64 = no; then
        WINDOWS_64_BIT_OFF_T=1
      else
        WINDOWS_64_BIT_OFF_T=0
      fi
      dnl Some mingw versions define, if _FILE_OFFSET_BITS=64, 'struct stat'
      dnl to 'struct _stat32i64' or 'struct _stat64' (depending on
      dnl _USE_32BIT_TIME_T), which has a 32-bit st_size member.
      AC_CACHE_CHECK([for 64-bit st_size], [gl_cv_member_st_size_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                struct stat buf;
                int verify_st_size_size[sizeof (buf.st_size) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_member_st_size_64=yes], [gl_cv_member_st_size_64=no])
        ])
      if test $gl_cv_member_st_size_64 = no; then
        WINDOWS_64_BIT_ST_SIZE=1
      else
        WINDOWS_64_BIT_ST_SIZE=0
      fi
      ;;
    *)
      dnl Nothing to do on gnulib's side.
      dnl A 64-bit off_t is
      dnl   - already the default on Mac OS X, FreeBSD, NetBSD, OpenBSD, IRIX,
      dnl     OSF/1, Cygwin,
      dnl   - enabled by _FILE_OFFSET_BITS=64 (ensured by AC_SYS_LARGEFILE) on
      dnl     glibc, HP-UX, Solaris,
      dnl   - enabled by _LARGE_FILES=1 (ensured by AC_SYS_LARGEFILE) on AIX,
      dnl   - impossible to achieve on Minix 3.1.8.
      WINDOWS_64_BIT_OFF_T=0
      WINDOWS_64_BIT_ST_SIZE=0
      ;;
  esac
])
m4trace:m4/ldexpl.m4:7: -1- AC_DEFUN([gl_FUNC_LDEXPL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([gl_FUNC_ISNANL]) dnl for ISNANL_LIBM

  dnl Persuade glibc <math.h> to declare ldexpl().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Check whether it's declared.
  dnl Mac OS X 10.3 has ldexpl() in libc but doesn't declare it in <math.h>.
  AC_CHECK_DECL([ldexpl], , [HAVE_DECL_LDEXPL=0], [[#include <math.h>]])

  LDEXPL_LIBM=
  if test $HAVE_DECL_LDEXPL = 1; then
    gl_CHECK_LDEXPL_NO_LIBM
    if test $gl_cv_func_ldexpl_no_libm = no; then
      AC_CACHE_CHECK([whether ldexpl() can be used with libm],
        [gl_cv_func_ldexpl_in_libm],
        [
          save_LIBS="$LIBS"
          LIBS="$LIBS -lm"
          AC_LINK_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <math.h>
                 long double x;]],
               [[return ldexpl (x, -1) > 0;]])],
            [gl_cv_func_ldexpl_in_libm=yes],
            [gl_cv_func_ldexpl_in_libm=no])
          LIBS="$save_LIBS"
        ])
      if test $gl_cv_func_ldexpl_in_libm = yes; then
        LDEXPL_LIBM=-lm
      fi
    fi
    if test $gl_cv_func_ldexpl_no_libm = yes \
       || test $gl_cv_func_ldexpl_in_libm = yes; then
      save_LIBS="$LIBS"
      LIBS="$LIBS $LDEXPL_LIBM"
      gl_FUNC_LDEXPL_WORKS
      LIBS="$save_LIBS"
      case "$gl_cv_func_ldexpl_works" in
        *yes) gl_func_ldexpl=yes ;;
        *)    gl_func_ldexpl=no; REPLACE_LDEXPL=1 ;;
      esac
    else
      gl_func_ldexpl=no
    fi
    if test $gl_func_ldexpl = yes; then
      AC_DEFINE([HAVE_LDEXPL], [1],
        [Define if the ldexpl() function is available.])
    fi
  fi
  if test $HAVE_DECL_LDEXPL = 0 || test $gl_func_ldexpl = no; then
    dnl Find libraries needed to link lib/ldexpl.c.
    if test $HAVE_SAME_LONG_DOUBLE_AS_DOUBLE = 1; then
      AC_REQUIRE([gl_FUNC_LDEXP])
      LDEXPL_LIBM="$LDEXP_LIBM"
    else
      LDEXPL_LIBM="$ISNANL_LIBM"
    fi
  fi
  AC_SUBST([LDEXPL_LIBM])
])
m4trace:m4/ldexpl.m4:74: -1- AC_DEFUN([gl_CHECK_LDEXPL_NO_LIBM], [
  AC_CACHE_CHECK([whether ldexpl() can be used without linking with libm],
    [gl_cv_func_ldexpl_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             long double x;]],
           [[return ldexpl (x, -1) > 0;]])],
        [gl_cv_func_ldexpl_no_libm=yes],
        [gl_cv_func_ldexpl_no_libm=no])
    ])
])
m4trace:m4/ldexpl.m4:91: -1- AC_DEFUN([gl_FUNC_LDEXPL_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether ldexpl works], [gl_cv_func_ldexpl_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <math.h>
extern
#ifdef __cplusplus
"C"
#endif
long double ldexpl (long double, int);
int main()
{
  int result = 0;
  {
    volatile long double x = 1.0;
    volatile long double y = ldexpl (x, -1);
    if (y != 0.5L)
      result |= 1;
  }
  {
    volatile long double x = 1.73205L;
    volatile long double y = ldexpl (x, 0);
    if (y != x)
      result |= 2;
  }
  return result;
}]])],
        [gl_cv_func_ldexpl_works=yes],
        [gl_cv_func_ldexpl_works=no],
        [
changequote(,)dnl
         case "$host_os" in
           aix | aix[3-6]*) gl_cv_func_ldexpl_works="guessing no" ;;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_ldexpl_works="guessing yes" ;;
           *)               gl_cv_func_ldexpl_works="guessing yes" ;;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/limits-h.m4:10: -1- AC_DEFUN_ONCE([gl_LIMITS_H], [
  gl_CHECK_NEXT_HEADERS([limits.h])

  AC_CACHE_CHECK([whether limits.h has WORD_BIT, BOOL_WIDTH etc.],
    [gl_cv_header_limits_width],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
             #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
            #endif
            #include <limits.h>
            long long llm = LLONG_MAX;
            int wb = WORD_BIT;
            int ullw = ULLONG_WIDTH;
            int bw = BOOL_WIDTH;
          ]])],
       [gl_cv_header_limits_width=yes],
       [gl_cv_header_limits_width=no])])
  if test "$gl_cv_header_limits_width" = yes; then
    LIMITS_H=
  else
    LIMITS_H=limits.h
  fi
  AC_SUBST([LIMITS_H])
  AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
])
m4trace:m4/limits-h.m4:39: -1- AC_DEFUN([gl_REPLACE_LIMITS_H], [
  AC_REQUIRE([gl_LIMITS_H])
  LIMITS_H='limits.h'
  AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
])
m4trace:m4/lstat.m4:11: -1- AC_DEFUN([gl_FUNC_LSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  dnl If lstat does not exist, the replacement <sys/stat.h> does
  dnl "#define lstat stat", and lstat.c is a no-op.
  AC_CHECK_FUNCS_ONCE([lstat])
  if test $ac_cv_func_lstat = yes; then
    AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
    case $host_os,$gl_cv_func_lstat_dereferences_slashed_symlink in
      solaris* | *no)
        REPLACE_LSTAT=1
        ;;
    esac
  else
    HAVE_LSTAT=0
  fi
])
m4trace:m4/lstat.m4:31: -1- AC_DEFUN([gl_PREREQ_LSTAT], [:])
m4trace:m4/lstat.m4:33: -1- AC_DEFUN([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK], [
  dnl We don't use AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK any more, because it
  dnl is no longer maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether lstat correctly handles trailing slash],
    [gl_cv_func_lstat_dereferences_slashed_symlink],
    [rm -f conftest.sym conftest.file
     echo >conftest.file
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT],
          [[struct stat sbuf;
            if (symlink ("conftest.file", "conftest.sym") != 0)
              return 1;
            /* Linux will dereference the symlink and fail, as required by
               POSIX.  That is better in the sense that it means we will not
               have to compile and use the lstat wrapper.  */
            return lstat ("conftest.sym/", &sbuf) == 0;
          ]])],
       [gl_cv_func_lstat_dereferences_slashed_symlink=yes],
       [gl_cv_func_lstat_dereferences_slashed_symlink=no],
       [case "$host_os" in
          linux-* | linux)
            # Guess yes on Linux systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          *-gnu* | gnu*)
            # Guess yes on glibc systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          mingw*)
            # Guess no on native Windows.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing no" ;;
          *)
            # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_lstat_dereferences_slashed_symlink="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.sym conftest.file
    ])
  case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
    *yes)
      AC_DEFINE_UNQUOTED([LSTAT_FOLLOWS_SLASHED_SYMLINK], [1],
        [Define to 1 if 'lstat' dereferences a symlink specified
         with a trailing slash.])
      ;;
  esac
])
m4trace:m4/malloc.m4:9: -1- AC_DEFUN([_AC_FUNC_MALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether malloc (0) returns nonnull],
    [ac_cv_func_malloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = malloc (0);
            int result = !p;
            free (p);
            return result;]])
       ],
       [ac_cv_func_malloc_0_nonnull=yes],
       [ac_cv_func_malloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | msys* )
            ac_cv_func_malloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_malloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_malloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/malloc.m4:42: -1- AC_DEFUN([gl_FUNC_MALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 0; then
    _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC=1])
  fi
])
m4trace:m4/malloc.m4:55: -1- AC_DEFUN([gl_FUNC_MALLOC_PTRDIFF], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  test "$gl_cv_malloc_ptrdiff" = yes || REPLACE_MALLOC=1
])
m4trace:m4/malloc.m4:65: -1- AC_DEFUN([gl_CHECK_MALLOC_PTRDIFF], [
  AC_CACHE_CHECK([whether malloc is ptrdiff_t safe],
    [gl_cv_malloc_ptrdiff],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
          ]],
          [[/* 64-bit ptrdiff_t is so wide that no practical platform
               can exceed it.  */
            #define WIDE_PTRDIFF (PTRDIFF_MAX >> 31 >> 31 != 0)

            /* On rare machines where size_t fits in ptrdiff_t there
               is no problem.  */
            #define NARROW_SIZE (SIZE_MAX <= PTRDIFF_MAX)

            /* glibc 2.30 and later malloc refuses to exceed ptrdiff_t
               bounds even on 32-bit platforms.  We don't know which
               non-glibc systems are safe.  */
            #define KNOWN_SAFE (2 < __GLIBC__ + (30 <= __GLIBC_MINOR__))

            #if WIDE_PTRDIFF || NARROW_SIZE || KNOWN_SAFE
              return 0;
            #else
              #error "malloc might not be ptrdiff_t safe"
              syntax error
            #endif
          ]])],
       [gl_cv_malloc_ptrdiff=yes],
       [gl_cv_malloc_ptrdiff=no])
    ])
])
m4trace:m4/malloc.m4:103: -1- AC_DEFUN([gl_FUNC_MALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_PTRDIFF])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test "$gl_cv_func_malloc_posix" = yes; then
    AC_DEFINE([HAVE_MALLOC_POSIX], [1],
      [Define if malloc, realloc, and calloc set errno on allocation failure.])
  else
    REPLACE_MALLOC=1
  fi
])
m4trace:m4/malloc.m4:118: -1- AC_DEFUN([gl_CHECK_MALLOC_POSIX], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether malloc, realloc, calloc set errno on failure],
    [gl_cv_func_malloc_posix],
    [
      dnl It is too dangerous to try to allocate a large amount of memory:
      dnl some systems go to their knees when you do that. So assume that
      dnl all Unix implementations of the function set errno on failure,
      dnl except on those platforms where we have seen 'test-malloc-gnu',
      dnl 'test-realloc-gnu', 'test-calloc-gnu' fail.
      case "$host_os" in
        mingw*)
          gl_cv_func_malloc_posix=no ;;
        irix* | solaris*)
          dnl On IRIX 6.5, the three functions return NULL with errno unset
          dnl when the argument is larger than PTRDIFF_MAX.
          dnl On Solaris 11.3, the three functions return NULL with errno set
          dnl to EAGAIN, not ENOMEM, when the argument is larger than
          dnl PTRDIFF_MAX.
          dnl Here is a test program:
m4_divert_push([KILL])
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#define ptrdiff_t long
#ifndef PTRDIFF_MAX
# define PTRDIFF_MAX ((ptrdiff_t) ((1UL << (8 * sizeof (ptrdiff_t) - 1)) - 1))
#endif

int main ()
{
  void *p;

  fprintf (stderr, "PTRDIFF_MAX = %lu\n", (unsigned long) PTRDIFF_MAX);

  errno = 0;
  p = malloc ((unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = calloc (PTRDIFF_MAX / 2 + 1, 2);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = realloc (NULL, (unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  return 0;
}
m4_divert_pop([KILL])
          gl_cv_func_malloc_posix=no ;;
        *)
          gl_cv_func_malloc_posix=yes ;;
      esac
    ])
])
m4trace:m4/malloca.m4:8: -1- AC_DEFUN([gl_MALLOCA], [
  dnl Use the autoconf tests for alloca(), but not the AC_SUBSTed variables
  dnl @ALLOCA@ and @LTALLOCA@.
  dnl gl_FUNC_ALLOCA   dnl Already brought in by the module dependencies.
  AC_REQUIRE([gl_EEMALLOC])
])
m4trace:m4/math_h.m4:7: -1- AC_DEFUN_ONCE([gl_MATH_H], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([math.h])

  AC_CACHE_CHECK([whether NAN macro works], [gl_cv_header_math_nan_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
      [[/* Solaris 10 has a broken definition of NAN.  Other platforms
        fail to provide NAN, or provide it only in C99 mode; this
        test only needs to fail when NAN is provided but wrong.  */
         float f = 1.0f;
#ifdef NAN
         f = NAN;
#endif
         return f == 0;]])],
      [gl_cv_header_math_nan_works=yes],
      [gl_cv_header_math_nan_works=no])])
  if test $gl_cv_header_math_nan_works = no; then
    REPLACE_NAN=1
  fi
  AC_CACHE_CHECK([whether HUGE_VAL works], [gl_cv_header_math_huge_val_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
      [[/* Solaris 10 has a broken definition of HUGE_VAL.  */
         double d = HUGE_VAL;
         return d == 0;]])],
      [gl_cv_header_math_huge_val_works=yes],
      [gl_cv_header_math_huge_val_works=no])])
  if test $gl_cv_header_math_huge_val_works = no; then
    REPLACE_HUGE_VAL=1
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <math.h>]],
    [acosf acosl asinf asinl atanf atanl
     cbrt cbrtf cbrtl ceilf ceill copysign copysignf copysignl cosf cosl coshf
     expf expl exp2 exp2f exp2l expm1 expm1f expm1l
     fabsf fabsl floorf floorl fma fmaf fmal
     fmod fmodf fmodl frexpf frexpl hypotf hypotl
     ilogb ilogbf ilogbl
     ldexpf ldexpl
     log logf logl log10 log10f log10l log1p log1pf log1pl log2 log2f log2l
     logb logbf logbl
     modf modff modfl powf
     remainder remainderf remainderl
     rint rintf rintl round roundf roundl sinf sinl sinhf sqrtf sqrtl
     tanf tanl tanhf trunc truncf truncl])
])
m4trace:m4/math_h.m4:60: -1- AC_DEFUN([gl_MATH_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_MATH_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/math_h.m4:72: -1- AC_DEFUN([gl_MATH_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_MATH_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATAN2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEIL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOOR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMA])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISFINITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1P])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POWF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNBIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCL])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J0], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J1], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_JN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y0], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y1], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_YN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_MATH_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
])
m4trace:m4/math_h.m4:182: -1- AC_DEFUN([gl_MATH_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ACOSF=1;                     AC_SUBST([HAVE_ACOSF])
  HAVE_ACOSL=1;                     AC_SUBST([HAVE_ACOSL])
  HAVE_ASINF=1;                     AC_SUBST([HAVE_ASINF])
  HAVE_ASINL=1;                     AC_SUBST([HAVE_ASINL])
  HAVE_ATANF=1;                     AC_SUBST([HAVE_ATANF])
  HAVE_ATANL=1;                     AC_SUBST([HAVE_ATANL])
  HAVE_ATAN2F=1;                    AC_SUBST([HAVE_ATAN2F])
  HAVE_CBRT=1;                      AC_SUBST([HAVE_CBRT])
  HAVE_CBRTF=1;                     AC_SUBST([HAVE_CBRTF])
  HAVE_CBRTL=1;                     AC_SUBST([HAVE_CBRTL])
  HAVE_COPYSIGN=1;                  AC_SUBST([HAVE_COPYSIGN])
  HAVE_COPYSIGNL=1;                 AC_SUBST([HAVE_COPYSIGNL])
  HAVE_COSF=1;                      AC_SUBST([HAVE_COSF])
  HAVE_COSL=1;                      AC_SUBST([HAVE_COSL])
  HAVE_COSHF=1;                     AC_SUBST([HAVE_COSHF])
  HAVE_EXPF=1;                      AC_SUBST([HAVE_EXPF])
  HAVE_EXPL=1;                      AC_SUBST([HAVE_EXPL])
  HAVE_EXPM1=1;                     AC_SUBST([HAVE_EXPM1])
  HAVE_EXPM1F=1;                    AC_SUBST([HAVE_EXPM1F])
  HAVE_FABSF=1;                     AC_SUBST([HAVE_FABSF])
  HAVE_FABSL=1;                     AC_SUBST([HAVE_FABSL])
  HAVE_FMA=1;                       AC_SUBST([HAVE_FMA])
  HAVE_FMAF=1;                      AC_SUBST([HAVE_FMAF])
  HAVE_FMAL=1;                      AC_SUBST([HAVE_FMAL])
  HAVE_FMODF=1;                     AC_SUBST([HAVE_FMODF])
  HAVE_FMODL=1;                     AC_SUBST([HAVE_FMODL])
  HAVE_FREXPF=1;                    AC_SUBST([HAVE_FREXPF])
  HAVE_HYPOTF=1;                    AC_SUBST([HAVE_HYPOTF])
  HAVE_HYPOTL=1;                    AC_SUBST([HAVE_HYPOTL])
  HAVE_ILOGB=1;                     AC_SUBST([HAVE_ILOGB])
  HAVE_ILOGBF=1;                    AC_SUBST([HAVE_ILOGBF])
  HAVE_ILOGBL=1;                    AC_SUBST([HAVE_ILOGBL])
  HAVE_ISNANF=1;                    AC_SUBST([HAVE_ISNANF])
  HAVE_ISNAND=1;                    AC_SUBST([HAVE_ISNAND])
  HAVE_ISNANL=1;                    AC_SUBST([HAVE_ISNANL])
  HAVE_LDEXPF=1;                    AC_SUBST([HAVE_LDEXPF])
  HAVE_LOGF=1;                      AC_SUBST([HAVE_LOGF])
  HAVE_LOGL=1;                      AC_SUBST([HAVE_LOGL])
  HAVE_LOG10F=1;                    AC_SUBST([HAVE_LOG10F])
  HAVE_LOG10L=1;                    AC_SUBST([HAVE_LOG10L])
  HAVE_LOG1P=1;                     AC_SUBST([HAVE_LOG1P])
  HAVE_LOG1PF=1;                    AC_SUBST([HAVE_LOG1PF])
  HAVE_LOG1PL=1;                    AC_SUBST([HAVE_LOG1PL])
  HAVE_LOGBF=1;                     AC_SUBST([HAVE_LOGBF])
  HAVE_LOGBL=1;                     AC_SUBST([HAVE_LOGBL])
  HAVE_MODFF=1;                     AC_SUBST([HAVE_MODFF])
  HAVE_MODFL=1;                     AC_SUBST([HAVE_MODFL])
  HAVE_POWF=1;                      AC_SUBST([HAVE_POWF])
  HAVE_REMAINDER=1;                 AC_SUBST([HAVE_REMAINDER])
  HAVE_REMAINDERF=1;                AC_SUBST([HAVE_REMAINDERF])
  HAVE_RINT=1;                      AC_SUBST([HAVE_RINT])
  HAVE_RINTL=1;                     AC_SUBST([HAVE_RINTL])
  HAVE_SINF=1;                      AC_SUBST([HAVE_SINF])
  HAVE_SINL=1;                      AC_SUBST([HAVE_SINL])
  HAVE_SINHF=1;                     AC_SUBST([HAVE_SINHF])
  HAVE_SQRTF=1;                     AC_SUBST([HAVE_SQRTF])
  HAVE_SQRTL=1;                     AC_SUBST([HAVE_SQRTL])
  HAVE_TANF=1;                      AC_SUBST([HAVE_TANF])
  HAVE_TANL=1;                      AC_SUBST([HAVE_TANL])
  HAVE_TANHF=1;                     AC_SUBST([HAVE_TANHF])
  HAVE_DECL_ACOSL=1;                AC_SUBST([HAVE_DECL_ACOSL])
  HAVE_DECL_ASINL=1;                AC_SUBST([HAVE_DECL_ASINL])
  HAVE_DECL_ATANL=1;                AC_SUBST([HAVE_DECL_ATANL])
  HAVE_DECL_CBRTF=1;                AC_SUBST([HAVE_DECL_CBRTF])
  HAVE_DECL_CBRTL=1;                AC_SUBST([HAVE_DECL_CBRTL])
  HAVE_DECL_CEILF=1;                AC_SUBST([HAVE_DECL_CEILF])
  HAVE_DECL_CEILL=1;                AC_SUBST([HAVE_DECL_CEILL])
  HAVE_DECL_COPYSIGNF=1;            AC_SUBST([HAVE_DECL_COPYSIGNF])
  HAVE_DECL_COSL=1;                 AC_SUBST([HAVE_DECL_COSL])
  HAVE_DECL_EXPL=1;                 AC_SUBST([HAVE_DECL_EXPL])
  HAVE_DECL_EXP2=1;                 AC_SUBST([HAVE_DECL_EXP2])
  HAVE_DECL_EXP2F=1;                AC_SUBST([HAVE_DECL_EXP2F])
  HAVE_DECL_EXP2L=1;                AC_SUBST([HAVE_DECL_EXP2L])
  HAVE_DECL_EXPM1L=1;               AC_SUBST([HAVE_DECL_EXPM1L])
  HAVE_DECL_FLOORF=1;               AC_SUBST([HAVE_DECL_FLOORF])
  HAVE_DECL_FLOORL=1;               AC_SUBST([HAVE_DECL_FLOORL])
  HAVE_DECL_FREXPL=1;               AC_SUBST([HAVE_DECL_FREXPL])
  HAVE_DECL_LDEXPL=1;               AC_SUBST([HAVE_DECL_LDEXPL])
  HAVE_DECL_LOGL=1;                 AC_SUBST([HAVE_DECL_LOGL])
  HAVE_DECL_LOG10L=1;               AC_SUBST([HAVE_DECL_LOG10L])
  HAVE_DECL_LOG2=1;                 AC_SUBST([HAVE_DECL_LOG2])
  HAVE_DECL_LOG2F=1;                AC_SUBST([HAVE_DECL_LOG2F])
  HAVE_DECL_LOG2L=1;                AC_SUBST([HAVE_DECL_LOG2L])
  HAVE_DECL_LOGB=1;                 AC_SUBST([HAVE_DECL_LOGB])
  HAVE_DECL_REMAINDER=1;            AC_SUBST([HAVE_DECL_REMAINDER])
  HAVE_DECL_REMAINDERL=1;           AC_SUBST([HAVE_DECL_REMAINDERL])
  HAVE_DECL_RINTF=1;                AC_SUBST([HAVE_DECL_RINTF])
  HAVE_DECL_ROUND=1;                AC_SUBST([HAVE_DECL_ROUND])
  HAVE_DECL_ROUNDF=1;               AC_SUBST([HAVE_DECL_ROUNDF])
  HAVE_DECL_ROUNDL=1;               AC_SUBST([HAVE_DECL_ROUNDL])
  HAVE_DECL_SINL=1;                 AC_SUBST([HAVE_DECL_SINL])
  HAVE_DECL_SQRTL=1;                AC_SUBST([HAVE_DECL_SQRTL])
  HAVE_DECL_TANL=1;                 AC_SUBST([HAVE_DECL_TANL])
  HAVE_DECL_TRUNC=1;                AC_SUBST([HAVE_DECL_TRUNC])
  HAVE_DECL_TRUNCF=1;               AC_SUBST([HAVE_DECL_TRUNCF])
  HAVE_DECL_TRUNCL=1;               AC_SUBST([HAVE_DECL_TRUNCL])
  REPLACE_ACOSF=0;                  AC_SUBST([REPLACE_ACOSF])
  REPLACE_ASINF=0;                  AC_SUBST([REPLACE_ASINF])
  REPLACE_ATANF=0;                  AC_SUBST([REPLACE_ATANF])
  REPLACE_ATAN2F=0;                 AC_SUBST([REPLACE_ATAN2F])
  REPLACE_CBRTF=0;                  AC_SUBST([REPLACE_CBRTF])
  REPLACE_CBRTL=0;                  AC_SUBST([REPLACE_CBRTL])
  REPLACE_CEIL=0;                   AC_SUBST([REPLACE_CEIL])
  REPLACE_CEILF=0;                  AC_SUBST([REPLACE_CEILF])
  REPLACE_CEILL=0;                  AC_SUBST([REPLACE_CEILL])
  REPLACE_COSF=0;                   AC_SUBST([REPLACE_COSF])
  REPLACE_COSHF=0;                  AC_SUBST([REPLACE_COSHF])
  REPLACE_EXPF=0;                   AC_SUBST([REPLACE_EXPF])
  REPLACE_EXPL=0;                   AC_SUBST([REPLACE_EXPL])
  REPLACE_EXPM1=0;                  AC_SUBST([REPLACE_EXPM1])
  REPLACE_EXPM1F=0;                 AC_SUBST([REPLACE_EXPM1F])
  REPLACE_EXPM1L=0;                 AC_SUBST([REPLACE_EXPM1L])
  REPLACE_EXP2=0;                   AC_SUBST([REPLACE_EXP2])
  REPLACE_EXP2L=0;                  AC_SUBST([REPLACE_EXP2L])
  REPLACE_FABSL=0;                  AC_SUBST([REPLACE_FABSL])
  REPLACE_FLOOR=0;                  AC_SUBST([REPLACE_FLOOR])
  REPLACE_FLOORF=0;                 AC_SUBST([REPLACE_FLOORF])
  REPLACE_FLOORL=0;                 AC_SUBST([REPLACE_FLOORL])
  REPLACE_FMA=0;                    AC_SUBST([REPLACE_FMA])
  REPLACE_FMAF=0;                   AC_SUBST([REPLACE_FMAF])
  REPLACE_FMAL=0;                   AC_SUBST([REPLACE_FMAL])
  REPLACE_FMOD=0;                   AC_SUBST([REPLACE_FMOD])
  REPLACE_FMODF=0;                  AC_SUBST([REPLACE_FMODF])
  REPLACE_FMODL=0;                  AC_SUBST([REPLACE_FMODL])
  REPLACE_FREXPF=0;                 AC_SUBST([REPLACE_FREXPF])
  REPLACE_FREXP=0;                  AC_SUBST([REPLACE_FREXP])
  REPLACE_FREXPL=0;                 AC_SUBST([REPLACE_FREXPL])
  REPLACE_HUGE_VAL=0;               AC_SUBST([REPLACE_HUGE_VAL])
  REPLACE_HYPOT=0;                  AC_SUBST([REPLACE_HYPOT])
  REPLACE_HYPOTF=0;                 AC_SUBST([REPLACE_HYPOTF])
  REPLACE_HYPOTL=0;                 AC_SUBST([REPLACE_HYPOTL])
  REPLACE_ILOGB=0;                  AC_SUBST([REPLACE_ILOGB])
  REPLACE_ILOGBF=0;                 AC_SUBST([REPLACE_ILOGBF])
  REPLACE_ILOGBL=0;                 AC_SUBST([REPLACE_ILOGBL])
  REPLACE_ISFINITE=0;               AC_SUBST([REPLACE_ISFINITE])
  REPLACE_ISINF=0;                  AC_SUBST([REPLACE_ISINF])
  REPLACE_ISNAN=0;                  AC_SUBST([REPLACE_ISNAN])
  REPLACE_LDEXPL=0;                 AC_SUBST([REPLACE_LDEXPL])
  REPLACE_LOG=0;                    AC_SUBST([REPLACE_LOG])
  REPLACE_LOGF=0;                   AC_SUBST([REPLACE_LOGF])
  REPLACE_LOGL=0;                   AC_SUBST([REPLACE_LOGL])
  REPLACE_LOG10=0;                  AC_SUBST([REPLACE_LOG10])
  REPLACE_LOG10F=0;                 AC_SUBST([REPLACE_LOG10F])
  REPLACE_LOG10L=0;                 AC_SUBST([REPLACE_LOG10L])
  REPLACE_LOG1P=0;                  AC_SUBST([REPLACE_LOG1P])
  REPLACE_LOG1PF=0;                 AC_SUBST([REPLACE_LOG1PF])
  REPLACE_LOG1PL=0;                 AC_SUBST([REPLACE_LOG1PL])
  REPLACE_LOG2=0;                   AC_SUBST([REPLACE_LOG2])
  REPLACE_LOG2F=0;                  AC_SUBST([REPLACE_LOG2F])
  REPLACE_LOG2L=0;                  AC_SUBST([REPLACE_LOG2L])
  REPLACE_LOGB=0;                   AC_SUBST([REPLACE_LOGB])
  REPLACE_LOGBF=0;                  AC_SUBST([REPLACE_LOGBF])
  REPLACE_LOGBL=0;                  AC_SUBST([REPLACE_LOGBL])
  REPLACE_MODF=0;                   AC_SUBST([REPLACE_MODF])
  REPLACE_MODFF=0;                  AC_SUBST([REPLACE_MODFF])
  REPLACE_MODFL=0;                  AC_SUBST([REPLACE_MODFL])
  REPLACE_NAN=0;                    AC_SUBST([REPLACE_NAN])
  REPLACE_REMAINDER=0;              AC_SUBST([REPLACE_REMAINDER])
  REPLACE_REMAINDERF=0;             AC_SUBST([REPLACE_REMAINDERF])
  REPLACE_REMAINDERL=0;             AC_SUBST([REPLACE_REMAINDERL])
  REPLACE_RINTL=0;                  AC_SUBST([REPLACE_RINTL])
  REPLACE_ROUND=0;                  AC_SUBST([REPLACE_ROUND])
  REPLACE_ROUNDF=0;                 AC_SUBST([REPLACE_ROUNDF])
  REPLACE_ROUNDL=0;                 AC_SUBST([REPLACE_ROUNDL])
  REPLACE_SIGNBIT=0;                AC_SUBST([REPLACE_SIGNBIT])
  REPLACE_SIGNBIT_USING_BUILTINS=0; AC_SUBST([REPLACE_SIGNBIT_USING_BUILTINS])
  REPLACE_SINF=0;                   AC_SUBST([REPLACE_SINF])
  REPLACE_SINHF=0;                  AC_SUBST([REPLACE_SINHF])
  REPLACE_SQRTF=0;                  AC_SUBST([REPLACE_SQRTF])
  REPLACE_SQRTL=0;                  AC_SUBST([REPLACE_SQRTL])
  REPLACE_TANF=0;                   AC_SUBST([REPLACE_TANF])
  REPLACE_TANHF=0;                  AC_SUBST([REPLACE_TANHF])
  REPLACE_TRUNC=0;                  AC_SUBST([REPLACE_TRUNC])
  REPLACE_TRUNCF=0;                 AC_SUBST([REPLACE_TRUNCF])
  REPLACE_TRUNCL=0;                 AC_SUBST([REPLACE_TRUNCL])
])
m4trace:m4/math_h.m4:368: -1- AC_DEFUN([gl_LONG_DOUBLE_VS_DOUBLE], [
  AC_CACHE_CHECK([whether long double and double are the same],
    [gl_cv_long_double_equals_double],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <float.h>]],
          [[typedef int check[sizeof (long double) == sizeof (double)
                              && LDBL_MANT_DIG == DBL_MANT_DIG
                              && LDBL_MAX_EXP == DBL_MAX_EXP
                              && LDBL_MIN_EXP == DBL_MIN_EXP
                              ? 1 : -1];
          ]])],
       [gl_cv_long_double_equals_double=yes],
       [gl_cv_long_double_equals_double=no])
    ])
  if test $gl_cv_long_double_equals_double = yes; then
    AC_DEFINE([HAVE_SAME_LONG_DOUBLE_AS_DOUBLE], [1],
      [Define to 1 if 'long double' and 'double' have the same representation.])
    HAVE_SAME_LONG_DOUBLE_AS_DOUBLE=1
  else
    HAVE_SAME_LONG_DOUBLE_AS_DOUBLE=0
  fi
  AC_SUBST([HAVE_SAME_LONG_DOUBLE_AS_DOUBLE])
])
m4trace:m4/memchr.m4:7: -1- AC_DEFUN_ONCE([gl_FUNC_MEMCHR], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  # Detect platform-specific bugs in some versions of glibc:
  # memchr should not dereference anything with length 0
  #   https://bugzilla.redhat.com/show_bug.cgi?id=499689
  # memchr should not dereference overestimated length after a match
  #   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=521737
  #   https://sourceware.org/bugzilla/show_bug.cgi?id=10162
  # memchr should cast the second argument to 'unsigned char'.
  #   This bug exists in Android 4.3.
  # Assume that memchr works on platforms that lack mprotect.
  AC_CACHE_CHECK([whether memchr works], [gl_cv_func_memchr_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <string.h>
#if HAVE_SYS_MMAN_H
# include <fcntl.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/mman.h>
# ifndef MAP_FILE
#  define MAP_FILE 0
# endif
#endif
]], [[
  int result = 0;
  char *fence = NULL;
#if HAVE_SYS_MMAN_H && HAVE_MPROTECT
# if HAVE_MAP_ANONYMOUS
  const int flags = MAP_ANONYMOUS | MAP_PRIVATE;
  const int fd = -1;
# else /* !HAVE_MAP_ANONYMOUS */
  const int flags = MAP_FILE | MAP_PRIVATE;
  int fd = open ("/dev/zero", O_RDONLY, 0666);
  if (fd >= 0)
# endif
    {
      int pagesize = getpagesize ();
      char *two_pages =
        (char *) mmap (NULL, 2 * pagesize, PROT_READ | PROT_WRITE,
                       flags, fd, 0);
      if (two_pages != (char *)(-1)
          && mprotect (two_pages + pagesize, pagesize, PROT_NONE) == 0)
        fence = two_pages + pagesize;
    }
#endif
  if (fence)
    {
      /* Test against bugs on glibc systems.  */
      if (memchr (fence, 0, 0))
        result |= 1;
      strcpy (fence - 9, "12345678");
      if (memchr (fence - 9, 0, 79) != fence - 1)
        result |= 2;
      if (memchr (fence - 1, 0, 3) != fence - 1)
        result |= 4;
      /* Test against bug on AIX 7.2.  */
      if (memchr (fence - 4, '6', 16) != fence - 4)
        result |= 8;
    }
  /* Test against bug on Android 4.3.  */
  {
    char input[3];
    input[0] = 'a';
    input[1] = 'b';
    input[2] = 'c';
    if (memchr (input, 0x789abc00 | 'b', 3) != input + 1)
      result |= 16;
  }
  return result;
]])],
       [gl_cv_func_memchr_works=yes],
       [gl_cv_func_memchr_works=no],
       [case "$host_os" in
                           # Guess no on Android.
          linux*-android*) gl_cv_func_memchr_works="guessing no" ;;
                           # Guess yes on native Windows.
          mingw*)          gl_cv_func_memchr_works="guessing yes" ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_memchr_works="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  case "$gl_cv_func_memchr_works" in
    *yes) ;;
    *) REPLACE_MEMCHR=1 ;;
  esac
])
m4trace:m4/memchr.m4:104: -1- AC_DEFUN([gl_PREREQ_MEMCHR], [
  AC_CHECK_HEADERS([bp-sym.h])
])
m4trace:m4/minmax.m4:9: -1- AC_DEFUN([gl_MINMAX], [
  AC_REQUIRE([gl_PREREQ_MINMAX])
])
m4trace:m4/minmax.m4:15: -1- AC_DEFUN([gl_PREREQ_MINMAX], [
  gl_MINMAX_IN_HEADER([limits.h])
  gl_MINMAX_IN_HEADER([sys/param.h])
])
m4trace:m4/minmax.m4:25: -1- AC_DEFUN([gl_MINMAX_IN_HEADER], [
  m4_pushdef([header], AS_TR_SH([$1]))
  m4_pushdef([HEADER], AS_TR_CPP([$1]))
  AC_CACHE_CHECK([whether <$1> defines MIN and MAX],
    [gl_cv_minmax_in_]header,
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <$1>
            int x = MIN (42, 17);]],
          [[]])],
       [gl_cv_minmax_in_]header[=yes],
       [gl_cv_minmax_in_]header[=no])])
  if test $gl_cv_minmax_in_[]header = yes; then
    AC_DEFINE([HAVE_MINMAX_IN_]HEADER, 1,
      [Define to 1 if <$1> defines the MIN and MAX macros.])
  fi
  m4_popdef([HEADER])
  m4_popdef([header])
])
m4trace:m4/mmap-anon.m4:16: -1- AC_DEFUN_ONCE([gl_FUNC_MMAP_ANON], [
  dnl Persuade glibc <sys/mman.h> to define MAP_ANONYMOUS.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Check for mmap(). Don't use AC_FUNC_MMAP, because it checks too much: it
  # fails on HP-UX 11, because MAP_FIXED mappings do not work. But this is
  # irrelevant for anonymous mappings.
  AC_CHECK_FUNC([mmap], [gl_have_mmap=yes], [gl_have_mmap=no])

  # Try to allow MAP_ANONYMOUS.
  gl_have_mmap_anonymous=no
  if test $gl_have_mmap = yes; then
    AC_MSG_CHECKING([for MAP_ANONYMOUS])
    AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANONYMOUS
    I cannot identify this map
#endif
],
      [gl_have_mmap_anonymous=yes])
    if test $gl_have_mmap_anonymous != yes; then
      AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANON
    I cannot identify this map
#endif
],
        [AC_DEFINE([MAP_ANONYMOUS], [MAP_ANON],
          [Define to a substitute value for mmap()'s MAP_ANONYMOUS flag.])
         gl_have_mmap_anonymous=yes])
    fi
    AC_MSG_RESULT([$gl_have_mmap_anonymous])
    if test $gl_have_mmap_anonymous = yes; then
      AC_DEFINE([HAVE_MAP_ANONYMOUS], [1],
        [Define to 1 if mmap()'s MAP_ANONYMOUS flag is available after including
         config.h and <sys/mman.h>.])
    fi
  fi
])
m4trace:m4/msvc-inval.m4:7: -1- AC_DEFUN([gl_MSVC_INVAL], [
  AC_CHECK_FUNCS_ONCE([_set_invalid_parameter_handler])
  if test $ac_cv_func__set_invalid_parameter_handler = yes; then
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=1
    AC_DEFINE([HAVE_MSVC_INVALID_PARAMETER_HANDLER], [1],
      [Define to 1 on MSVC platforms that have the "invalid parameter handler"
       concept.])
  else
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=0
  fi
  AC_SUBST([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
])
m4trace:m4/msvc-nothrow.m4:7: -1- AC_DEFUN([gl_MSVC_NOTHROW], [
  AC_REQUIRE([gl_MSVC_INVAL])
])
m4trace:m4/multiarch.m4:21: -1- AC_DEFUN_ONCE([gl_MULTIARCH], [
  dnl Code similar to autoconf-2.63 AC_C_BIGENDIAN.
  AC_CACHE_CHECK([whether the compiler produces multi-arch binaries],
    [gl_cv_c_multiarch],
    [gl_cv_c_multiarch=no
     AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE(
         [[#ifndef __APPLE_CC__
            not a universal capable compiler
           #endif
           typedef int dummy;
         ]])],
       [
        dnl Check for potential -arch flags.  It is not universal unless
        dnl there are at least two -arch flags with different values.
        arch=
        prev=
        for word in ${CC} ${CFLAGS} ${CPPFLAGS} ${LDFLAGS}; do
          if test -n "$prev"; then
            case $word in
              i?86 | x86_64 | ppc | ppc64 | arm | arm64)
                if test -z "$arch" || test "$arch" = "$word"; then
                  arch="$word"
                else
                  gl_cv_c_multiarch=yes
                fi
                ;;
            esac
            prev=
          else
            if test "x$word" = "x-arch"; then
              prev=arch
            fi
          fi
        done
       ])
    ])
  if test $gl_cv_c_multiarch = yes; then
    APPLE_UNIVERSAL_BUILD=1
  else
    APPLE_UNIVERSAL_BUILD=0
  fi
  AC_SUBST([APPLE_UNIVERSAL_BUILD])
])
m4trace:m4/nanosleep.m4:14: -1- AC_DEFUN([gl_FUNC_NANOSLEEP], [
 AC_REQUIRE([gl_TIME_H_DEFAULTS])
 AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

 dnl Persuade glibc and Solaris <time.h> to declare nanosleep.
 AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

 AC_CHECK_HEADERS_ONCE([sys/time.h])
 AC_REQUIRE([gl_FUNC_SELECT])

 AC_CHECK_DECLS_ONCE([alarm])

 nanosleep_save_libs=$LIBS

 # Solaris 2.5.1 needs -lposix4 to get the nanosleep function.
 # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.
 LIB_NANOSLEEP=
 AC_SUBST([LIB_NANOSLEEP])
 AC_SEARCH_LIBS([nanosleep], [rt posix4],
                [test "$ac_cv_search_nanosleep" = "none required" ||
                 LIB_NANOSLEEP=$ac_cv_search_nanosleep])
 if test "x$ac_cv_search_nanosleep" != xno; then
   dnl The system has a nanosleep function.

   AC_REQUIRE([gl_MULTIARCH])
   if test $APPLE_UNIVERSAL_BUILD = 1; then
     # A universal build on Apple Mac OS X platforms.
     # The test result would be 'no (mishandles large arguments)' in 64-bit
     # mode but 'yes' in 32-bit mode. But we need a configuration result that
     # is valid in both modes.
     gl_cv_func_nanosleep='no (mishandles large arguments)'
   fi

   AC_CACHE_CHECK([for working nanosleep],
    [gl_cv_func_nanosleep],
    [
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
          #include <errno.h>
          #include <limits.h>
          #include <signal.h>
          #if HAVE_SYS_TIME_H
           #include <sys/time.h>
          #endif
          #include <time.h>
          #include <unistd.h>
          #define TYPE_SIGNED(t) (! ((t) 0 < (t) -1))
          #define TYPE_MAXIMUM(t) \
            ((t) (! TYPE_SIGNED (t) \
                  ? (t) -1 \
                  : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))

          #if HAVE_DECL_ALARM
          static void
          check_for_SIGALRM (int sig)
          {
            if (sig != SIGALRM)
              _exit (1);
          }
          #endif

          int
          main ()
          {
            static struct timespec ts_sleep;
            static struct timespec ts_remaining;
            /* Test for major problems first.  */
            if (! nanosleep)
              return 2;
            ts_sleep.tv_sec = 0;
            ts_sleep.tv_nsec = 1;
            #if HAVE_DECL_ALARM
            {
              static struct sigaction act;
              act.sa_handler = check_for_SIGALRM;
              sigemptyset (&act.sa_mask);
              sigaction (SIGALRM, &act, NULL);
              alarm (1);
              if (nanosleep (&ts_sleep, NULL) != 0)
                return 3;
              /* Test for a minor problem: the handling of large arguments.  */
              ts_sleep.tv_sec = TYPE_MAXIMUM (time_t);
              ts_sleep.tv_nsec = 999999999;
              alarm (1);
              if (nanosleep (&ts_sleep, &ts_remaining) != -1)
                return 4;
              if (errno != EINTR)
                return 5;
              if (ts_remaining.tv_sec <= TYPE_MAXIMUM (time_t) - 10)
                return 6;
            }
            #else /* A simpler test for native Windows.  */
            if (nanosleep (&ts_sleep, &ts_remaining) < 0)
              return 3;
            #endif
            return 0;
          }]])],
       [gl_cv_func_nanosleep=yes],
       [case $? in dnl (
        4|5|6) gl_cv_func_nanosleep='no (mishandles large arguments)';; dnl (
        *)   gl_cv_func_nanosleep=no;;
        esac],
       [case "$host_os" in dnl ((
          linux*) # Guess it halfway works when the kernel is Linux.
            gl_cv_func_nanosleep='guessing no (mishandles large arguments)' ;;
          mingw*) # Guess no on native Windows.
            gl_cv_func_nanosleep='guessing no' ;;
          *)      # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_nanosleep="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
   case "$gl_cv_func_nanosleep" in
     *yes)
       REPLACE_NANOSLEEP=0
       ;;
     *)
       REPLACE_NANOSLEEP=1
       case "$gl_cv_func_nanosleep" in
         *"mishandles large arguments"*)
           AC_DEFINE([HAVE_BUG_BIG_NANOSLEEP], [1],
             [Define to 1 if nanosleep mishandles large arguments.])
           ;;
         *)
           # The replacement uses select(). Add $LIBSOCKET to $LIB_NANOSLEEP.
           for ac_lib in $LIBSOCKET; do
             case " $LIB_NANOSLEEP " in
               *" $ac_lib "*) ;;
               *) LIB_NANOSLEEP="$LIB_NANOSLEEP $ac_lib";;
             esac
           done
           ;;
       esac
       ;;
   esac
 else
   HAVE_NANOSLEEP=0
 fi
 LIBS=$nanosleep_save_libs
])
m4trace:m4/nanosleep.m4:157: -1- AC_DEFUN([gl_PREREQ_NANOSLEEP], [
  AC_CHECK_HEADERS_ONCE([sys/select.h])
  gl_PREREQ_SIG_HANDLER_H
])
m4trace:m4/nocrash.m4:18: -1- AC_DEFUN([GL_NOCRASH], [[
#include <stdlib.h>
#if defined __MACH__ && defined __APPLE__
/* Avoid a crash on Mac OS X.  */
#include <mach/mach.h>
#include <mach/mach_error.h>
#include <mach/thread_status.h>
#include <mach/exception.h>
#include <mach/task.h>
#include <pthread.h>
/* The exception port on which our thread listens.  */
static mach_port_t our_exception_port;
/* The main function of the thread listening for exceptions of type
   EXC_BAD_ACCESS.  */
static void *
mach_exception_thread (void *arg)
{
  /* Buffer for a message to be received.  */
  struct {
    mach_msg_header_t head;
    mach_msg_body_t msgh_body;
    char data[1024];
  } msg;
  mach_msg_return_t retval;
  /* Wait for a message on the exception port.  */
  retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
                     our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
  if (retval != MACH_MSG_SUCCESS)
    abort ();
  exit (1);
}
static void
nocrash_init (void)
{
  mach_port_t self = mach_task_self ();
  /* Allocate a port on which the thread shall listen for exceptions.  */
  if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
      == KERN_SUCCESS) {
    /* See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
    if (mach_port_insert_right (self, our_exception_port, our_exception_port,
                                MACH_MSG_TYPE_MAKE_SEND)
        == KERN_SUCCESS) {
      /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
         for us.  */
      exception_mask_t mask = EXC_MASK_BAD_ACCESS;
      /* Create the thread listening on the exception port.  */
      pthread_attr_t attr;
      pthread_t thread;
      if (pthread_attr_init (&attr) == 0
          && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
          && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
        pthread_attr_destroy (&attr);
        /* Replace the exception port info for these exceptions with our own.
           Note that we replace the exception port for the entire task, not only
           for a particular thread.  This has the effect that when our exception
           port gets the message, the thread specific exception port has already
           been asked, and we don't need to bother about it.
           See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
        task_set_exception_ports (self, mask, our_exception_port,
                                  EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
      }
    }
  }
}
#elif defined _WIN32 && ! defined __CYGWIN__
/* Avoid a crash on native Windows.  */
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <winerror.h>
static LONG WINAPI
exception_filter (EXCEPTION_POINTERS *ExceptionInfo)
{
  switch (ExceptionInfo->ExceptionRecord->ExceptionCode)
    {
    case EXCEPTION_ACCESS_VIOLATION:
    case EXCEPTION_IN_PAGE_ERROR:
    case EXCEPTION_STACK_OVERFLOW:
    case EXCEPTION_GUARD_PAGE:
    case EXCEPTION_PRIV_INSTRUCTION:
    case EXCEPTION_ILLEGAL_INSTRUCTION:
    case EXCEPTION_DATATYPE_MISALIGNMENT:
    case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:
    case EXCEPTION_NONCONTINUABLE_EXCEPTION:
      exit (1);
    }
  return EXCEPTION_CONTINUE_SEARCH;
}
static void
nocrash_init (void)
{
  SetUnhandledExceptionFilter ((LPTOP_LEVEL_EXCEPTION_FILTER) exception_filter);
}
#else
/* Avoid a crash on POSIX systems.  */
#include <signal.h>
#include <unistd.h>
/* A POSIX signal handler.  */
static void
exception_handler (int sig)
{
  _exit (1);
}
static void
nocrash_init (void)
{
#ifdef SIGSEGV
  signal (SIGSEGV, exception_handler);
#endif
#ifdef SIGBUS
  signal (SIGBUS, exception_handler);
#endif
}
#endif
]])
m4trace:m4/off_t.m4:10: -1- AC_DEFUN([gl_TYPE_OFF_T], [
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_OFF_T=0
  ])
  AC_SUBST([WINDOWS_64_BIT_OFF_T])
])
m4trace:m4/pathmax.m4:8: -1- AC_DEFUN([gl_PATHMAX], [
  dnl Prerequisites of lib/pathmax.h.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/pathmax.m4:16: -1- AC_DEFUN([gl_PATHMAX_SNIPPET], [[
/* Arrange to define PATH_MAX, like "pathmax.h" does. */
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
#include <limits.h>
#if defined HAVE_SYS_PARAM_H && !defined PATH_MAX && !defined MAXPATHLEN
# include <sys/param.h>
#endif
#if !defined PATH_MAX && defined MAXPATHLEN
# define PATH_MAX MAXPATHLEN
#endif
#ifdef __hpux
# undef PATH_MAX
# define PATH_MAX 1024
#endif
#if defined _WIN32 && ! defined __CYGWIN__
# undef PATH_MAX
# define PATH_MAX 260
#endif
]])
m4trace:m4/pathmax.m4:39: -1- AC_DEFUN([gl_PATHMAX_SNIPPET_PREREQ], [
  AC_CHECK_HEADERS_ONCE([unistd.h sys/param.h])
])
m4trace:m4/printf-frexp.m4:9: -1- AC_DEFUN([gl_FUNC_PRINTF_FREXP], [
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  if test $gl_cv_func_frexp_no_libm = yes; then
    gl_FUNC_FREXP_WORKS
    case "$gl_cv_func_frexp_works" in
      *yes)
        AC_DEFINE([HAVE_FREXP_IN_LIBC], [1],
          [Define if the frexp function is available in libc.])
        ;;
    esac
  fi

  AC_CACHE_CHECK([whether ldexp can be used without linking with libm],
    [gl_cv_func_ldexp_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             double x;
             int y;]],
           [[return ldexp (x, y) < 1;]])],
        [gl_cv_func_ldexp_no_libm=yes],
        [gl_cv_func_ldexp_no_libm=no])
    ])
  if test $gl_cv_func_ldexp_no_libm = yes; then
    AC_DEFINE([HAVE_LDEXP_IN_LIBC], [1],
      [Define if the ldexp function is available in libc.])
  fi
])
m4trace:m4/printf-frexpl.m4:9: -1- AC_DEFUN([gl_FUNC_PRINTF_FREXPL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])

  dnl Subset of gl_FUNC_FREXPL_NO_LIBM.
  gl_CHECK_FREXPL_NO_LIBM
  if test $gl_cv_func_frexpl_no_libm = yes; then
    gl_FUNC_FREXPL_WORKS
    case "$gl_cv_func_frexpl_works" in
      *yes) gl_func_frexpl_no_libm=yes ;;
      *)    gl_func_frexpl_no_libm=no; REPLACE_FREXPL=1 ;;
    esac
  else
    gl_func_frexpl_no_libm=no
    dnl Set REPLACE_FREXPL here because the system may have frexpl in libm.
    REPLACE_FREXPL=1
  fi
  if test $gl_func_frexpl_no_libm = yes; then
    AC_DEFINE([HAVE_FREXPL_IN_LIBC], [1],
      [Define if the frexpl function is available in libc.])
    dnl Also check whether it's declared.
    dnl Mac OS X 10.3 has frexpl() in libc but doesn't declare it in <math.h>.
    AC_CHECK_DECL([frexpl], , [HAVE_DECL_FREXPL=0], [[#include <math.h>]])
  fi

  gl_CHECK_LDEXPL_NO_LIBM
  if test $gl_cv_func_ldexpl_no_libm = yes; then
    gl_FUNC_LDEXPL_WORKS
    case "$gl_cv_func_ldexpl_works" in
      *yes)
        AC_DEFINE([HAVE_LDEXPL_IN_LIBC], [1],
          [Define if the ldexpl function is available in libc.])
        dnl Also check whether it's declared.
        dnl Mac OS X 10.3 has ldexpl() in libc but doesn't declare it in <math.h>.
        AC_CHECK_DECL([ldexpl], , [HAVE_DECL_LDEXPL=0], [[#include <math.h>]])
        ;;
    esac
  fi
])
m4trace:m4/printf.m4:11: -1- AC_DEFUN([gl_PRINTF_SIZES_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports size specifiers as in C99],
    [gl_cv_func_printf_sizes_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#if HAVE_STDINT_H_WITH_UINTMAX
# include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
# include <inttypes.h>
#endif
static char buf[100];
int main ()
{
  int result = 0;
#if HAVE_STDINT_H_WITH_UINTMAX || HAVE_INTTYPES_H_WITH_UINTMAX
  buf[0] = '\0';
  if (sprintf (buf, "%ju %d", (uintmax_t) 12345671, 33, 44, 55) < 0
      || strcmp (buf, "12345671 33") != 0)
    result |= 1;
#else
  result |= 1;
#endif
  buf[0] = '\0';
  if (sprintf (buf, "%zu %d", (size_t) 12345672, 33, 44, 55) < 0
      || strcmp (buf, "12345672 33") != 0)
    result |= 2;
  buf[0] = '\0';
  if (sprintf (buf, "%tu %d", (ptrdiff_t) 12345673, 33, 44, 55) < 0
      || strcmp (buf, "12345673 33") != 0)
    result |= 4;
  buf[0] = '\0';
  if (sprintf (buf, "%Lg %d", (long double) 1.5, 33, 44, 55) < 0
      || strcmp (buf, "1.5 33") != 0)
    result |= 8;
  return result;
}]])],
        [gl_cv_func_printf_sizes_c99=yes],
        [gl_cv_func_printf_sizes_c99=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_printf_sizes_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_sizes_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_sizes_c99="guessing no";;
           darwin*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_printf_sizes_c99="guessing no";;
           openbsd*)             gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_sizes_c99="guessing yes";;
           solaris*)             gl_cv_func_printf_sizes_c99="guessing no";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_printf_sizes_c99="guessing no";;
           netbsd*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_printf_sizes_c99="guessing yes";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_sizes_c99="guessing yes"],
                                   [gl_cv_func_printf_sizes_c99="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_sizes_c99="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:108: -1- AC_DEFUN([gl_PRINTF_LONG_DOUBLE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports 'long double' arguments],
    [gl_cv_func_printf_long_double],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[10000];
int main ()
{
  int result = 0;
  buf[0] = '\0';
  if (sprintf (buf, "%Lf %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.750000 33") != 0)
    result |= 1;
  buf[0] = '\0';
  if (sprintf (buf, "%Le %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.750000e+00 33") != 0)
    result |= 2;
  buf[0] = '\0';
  if (sprintf (buf, "%Lg %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.75 33") != 0)
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_long_double=yes],
        [gl_cv_func_printf_long_double=no],
        [case "$host_os" in
                            # Guess no on BeOS.
           beos*)           gl_cv_func_printf_long_double="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_long_double="guessing yes";;
                            # Guess yes on MSVC, no on mingw.
           mingw*)          AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                              ],
                              [gl_cv_func_printf_long_double="guessing yes"],
                              [gl_cv_func_printf_long_double="guessing no"])
                            ;;
           *)               gl_cv_func_printf_long_double="guessing yes";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:164: -1- AC_DEFUN([gl_PRINTF_INFINITE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports infinite 'double' arguments],
    [gl_cv_func_printf_infinite],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static int
strisnan (const char *string, size_t start_index, size_t end_index)
{
  if (start_index < end_index)
    {
      if (string[start_index] == '-')
        start_index++;
      if (start_index + 3 <= end_index
          && memcmp (string + start_index, "nan", 3) == 0)
        {
          start_index += 3;
          if (start_index == end_index
              || (string[start_index] == '(' && string[end_index - 1] == ')'))
            return 1;
        }
    }
  return 0;
}
static int
have_minus_zero ()
{
  static double plus_zero = 0.0;
  double minus_zero = - plus_zero;
  return memcmp (&plus_zero, &minus_zero, sizeof (double)) != 0;
}
static char buf[10000];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%f", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%f", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%f", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 2;
  if (sprintf (buf, "%e", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 4;
  if (sprintf (buf, "%e", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 4;
  if (sprintf (buf, "%e", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 8;
  if (sprintf (buf, "%g", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 16;
  if (sprintf (buf, "%g", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 16;
  if (sprintf (buf, "%g", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 32;
  /* This test fails on HP-UX 10.20.  */
  if (have_minus_zero ())
    if (sprintf (buf, "%g", - zero) < 0
        || strcmp (buf, "-0") != 0)
    result |= 64;
  return result;
}]])],
        [gl_cv_func_printf_infinite=yes],
        [gl_cv_func_printf_infinite=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on FreeBSD >= 6.
           freebsd[1-5].*)       gl_cv_func_printf_infinite="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_infinite="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_infinite="guessing no";;
           darwin*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on HP-UX >= 11.
           hpux[7-9]* | hpux10*) gl_cv_func_printf_infinite="guessing no";;
           hpux*)                gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_printf_infinite="guessing no";;
           netbsd*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)       gl_cv_func_printf_infinite="guessing no";;
           openbsd*)             gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_infinite="guessing no";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_infinite="guessing yes"],
                                   [gl_cv_func_printf_infinite="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_infinite="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:290: -1- AC_DEFUN([gl_PRINTF_INFINITE_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl The user can set or unset the variable gl_printf_safe to indicate
  dnl that he wishes a safe handling of non-IEEE-754 'long double' values.
  if test -n "$gl_printf_safe"; then
    AC_DEFINE([CHECK_PRINTF_SAFE], [1],
      [Define if you wish *printf() functions that have a safe handling of
       non-IEEE-754 'long double' values.])
  fi
  case "$gl_cv_func_printf_long_double" in
    *yes)
      AC_CACHE_CHECK([whether printf supports infinite 'long double' arguments],
        [gl_cv_func_printf_infinite_long_double],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
]GL_NOCRASH[
#include <float.h>
#include <stdio.h>
#include <string.h>
static int
strisnan (const char *string, size_t start_index, size_t end_index)
{
  if (start_index < end_index)
    {
      if (string[start_index] == '-')
        start_index++;
      if (start_index + 3 <= end_index
          && memcmp (string + start_index, "nan", 3) == 0)
        {
          start_index += 3;
          if (start_index == end_index
              || (string[start_index] == '(' && string[end_index - 1] == ')'))
            return 1;
        }
    }
  return 0;
}
static char buf[10000];
static long double zeroL = 0.0L;
int main ()
{
  int result = 0;
  nocrash_init();
  if (sprintf (buf, "%Lf", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lf", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lf", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
  if (sprintf (buf, "%Le", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Le", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Le", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
  if (sprintf (buf, "%Lg", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lg", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lg", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
#if CHECK_PRINTF_SAFE && ((defined __ia64 && LDBL_MANT_DIG == 64) || (defined __x86_64__ || defined __amd64__) || (defined __i386 || defined __i386__ || defined _I386 || defined _M_IX86 || defined _X86_)) && !HAVE_SAME_LONG_DOUBLE_AS_DOUBLE
/* Representation of an 80-bit 'long double' as an initializer for a sequence
   of 'unsigned int' words.  */
# ifdef WORDS_BIGENDIAN
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { ((unsigned int) (exponent) << 16) | ((unsigned int) (manthi) >> 16), \
       ((unsigned int) (manthi) << 16) | ((unsigned int) (mantlo) >> 16),   \
       (unsigned int) (mantlo) << 16                                        \
     }
# else
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { mantlo, manthi, exponent }
# endif
  { /* Quiet NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0xC3333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Le", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Lg", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
  }
  {
    /* Signalling NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x83333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Le", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Lg", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
  }
  { /* Pseudo-NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x40000001, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 4;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 4;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 4;
  }
  { /* Pseudo-Infinity.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x00000000, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 8;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 8;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 8;
  }
  { /* Pseudo-Zero.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x4004, 0x00000000, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 16;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 16;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 16;
  }
  { /* Unnormalized number.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x4000, 0x63333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 32;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 32;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 32;
  }
  { /* Pseudo-Denormal.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x0000, 0x83333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 64;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 64;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 64;
  }
#endif
  return result;
}]])],
            [gl_cv_func_printf_infinite_long_double=yes],
            [gl_cv_func_printf_infinite_long_double=no],
            [case "$host_cpu" in
                                     # Guess no on ia64, x86_64, i386.
               ia64 | x86_64 | i*86) gl_cv_func_printf_infinite_long_double="guessing no";;
               *)
                 case "$host_os" in
changequote(,)dnl
                                         # Guess yes on glibc systems.
                   *-gnu* | gnu*)        gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on musl systems.
                   *-musl*)              gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on FreeBSD >= 6.
                   freebsd[1-5].*)       gl_cv_func_printf_infinite_long_double="guessing no";;
                   freebsd* | kfreebsd*) gl_cv_func_printf_infinite_long_double="guessing yes";;
                   midnightbsd*)         gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on HP-UX >= 11.
                   hpux[7-9]* | hpux10*) gl_cv_func_printf_infinite_long_double="guessing no";;
                   hpux*)                gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on OpenBSD >= 6.0.
                   openbsd[1-5].*)       gl_cv_func_printf_infinite_long_double="guessing no";;
                   openbsd*)             gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess no on Android.
                   linux*-android*)      gl_cv_func_printf_infinite_long_double="guessing no";;
changequote([,])dnl
                                         # Guess yes on MSVC, no on mingw.
                   mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                           ],
                                           [gl_cv_func_printf_infinite_long_double="guessing yes"],
                                           [gl_cv_func_printf_infinite_long_double="guessing no"])
                                         ;;
                                         # If we don't know, obey --enable-cross-guesses.
                   *)                    gl_cv_func_printf_infinite_long_double="$gl_cross_guess_normal";;
                 esac
                 ;;
             esac
            ])
        ])
      ;;
    *)
      gl_cv_func_printf_infinite_long_double="irrelevant"
      ;;
  esac
])
m4trace:m4/printf.m4:512: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_A], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'a' and 'A' directives],
    [gl_cv_func_printf_directive_a],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%a %d", 3.1416015625, 33, 44, 55) < 0
      || (strcmp (buf, "0x1.922p+1 33") != 0
          && strcmp (buf, "0x3.244p+0 33") != 0
          && strcmp (buf, "0x6.488p-1 33") != 0
          && strcmp (buf, "0xc.91p-2 33") != 0))
    result |= 1;
  if (sprintf (buf, "%A %d", -3.1416015625, 33, 44, 55) < 0
      || (strcmp (buf, "-0X1.922P+1 33") != 0
          && strcmp (buf, "-0X3.244P+0 33") != 0
          && strcmp (buf, "-0X6.488P-1 33") != 0
          && strcmp (buf, "-0XC.91P-2 33") != 0))
    result |= 2;
  /* This catches a FreeBSD 13.0 bug: it doesn't round.  */
  if (sprintf (buf, "%.2a %d", 1.51, 33, 44, 55) < 0
      || (strcmp (buf, "0x1.83p+0 33") != 0
          && strcmp (buf, "0x3.05p-1 33") != 0
          && strcmp (buf, "0x6.0ap-2 33") != 0
          && strcmp (buf, "0xc.14p-3 33") != 0))
    result |= 4;
  /* This catches a Mac OS X 10.12.4 (Darwin 16.5) bug: it doesn't round.  */
  if (sprintf (buf, "%.0a %d", 1.51, 33, 44, 55) < 0
      || (strcmp (buf, "0x2p+0 33") != 0
          && strcmp (buf, "0x3p-1 33") != 0
          && strcmp (buf, "0x6p-2 33") != 0
          && strcmp (buf, "0xcp-3 33") != 0))
    result |= 4;
  /* This catches a FreeBSD 6.1 bug.  See
     <https://lists.gnu.org/r/bug-gnulib/2007-04/msg00107.html> */
  if (sprintf (buf, "%010a %d", 1.0 / zero, 33, 44, 55) < 0
      || buf[0] == '0')
    result |= 8;
  /* This catches a Mac OS X 10.3.9 (Darwin 7.9) bug.  */
  if (sprintf (buf, "%.1a", 1.999) < 0
      || (strcmp (buf, "0x1.0p+1") != 0
          && strcmp (buf, "0x2.0p+0") != 0
          && strcmp (buf, "0x4.0p-1") != 0
          && strcmp (buf, "0x8.0p-2") != 0))
    result |= 16;
  /* This catches the same Mac OS X 10.3.9 (Darwin 7.9) bug and also a
     glibc 2.4 bug <https://sourceware.org/bugzilla/show_bug.cgi?id=2908>.  */
  if (sprintf (buf, "%.1La", 1.999L) < 0
      || (strcmp (buf, "0x1.0p+1") != 0
          && strcmp (buf, "0x2.0p+0") != 0
          && strcmp (buf, "0x4.0p-1") != 0
          && strcmp (buf, "0x8.0p-2") != 0))
    result |= 32;
  return result;
}]])],
        [gl_cv_func_printf_directive_a=yes],
        [gl_cv_func_printf_directive_a=no],
        [
         case "$host_os" in
                                 # Guess yes on glibc >= 2.5 systems.
           *-gnu* | gnu*)
             AC_EGREP_CPP([BZ2908], [
               #include <features.h>
               #ifdef __GNU_LIBRARY__
                #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 5) || (__GLIBC__ > 2)) && !defined __UCLIBC__
                 BZ2908
                #endif
               #endif
               ],
               [gl_cv_func_printf_directive_a="guessing yes"],
               [gl_cv_func_printf_directive_a="guessing no"])
             ;;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_directive_a="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_directive_a="guessing no";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_printf_directive_a="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_directive_a="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:610: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_F], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'F' directive],
    [gl_cv_func_printf_directive_f],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%F %d", 1234567.0, 33, 44, 55) < 0
      || strcmp (buf, "1234567.000000 33") != 0)
    result |= 1;
  if (sprintf (buf, "%F", 1.0 / zero) < 0
      || (strcmp (buf, "INF") != 0 && strcmp (buf, "INFINITY") != 0))
    result |= 2;
  /* This catches a Cygwin 1.5.x bug.  */
  if (sprintf (buf, "%.F", 1234.0) < 0
      || strcmp (buf, "1234") != 0)
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_directive_f=yes],
        [gl_cv_func_printf_directive_f=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on FreeBSD >= 6.
           freebsd[1-5].*)       gl_cv_func_printf_directive_f="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_directive_f="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_directive_f="guessing no";;
           darwin*)              gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)       gl_cv_func_printf_directive_f="guessing no";;
           openbsd*)             gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_directive_f="guessing yes";;
           solaris*)             gl_cv_func_printf_directive_f="guessing no";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_directive_f="guessing no";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_directive_f="guessing yes"],
                                   [gl_cv_func_printf_directive_f="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_directive_f="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:683: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_N], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'n' directive],
    [gl_cv_func_printf_directive_n],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef _MSC_VER
#include <inttypes.h>
/* See page about "Parameter Validation" on msdn.microsoft.com.
   <https://docs.microsoft.com/en-us/cpp/c-runtime-library/parameter-validation>
   <https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/set-invalid-parameter-handler-set-thread-local-invalid-parameter-handler>  */
static void cdecl
invalid_parameter_handler (const wchar_t *expression,
                           const wchar_t *function,
                           const wchar_t *file, unsigned int line,
                           uintptr_t dummy)
{
  exit (1);
}
#endif
static char fmtstring[10];
static char buf[100];
int main ()
{
  int count = -1;
#ifdef _MSC_VER
  _set_invalid_parameter_handler (invalid_parameter_handler);
#endif
  /* Copy the format string.  Some systems (glibc with _FORTIFY_SOURCE=2)
     support %n in format strings in read-only memory but not in writable
     memory.  */
  strcpy (fmtstring, "%d %n");
  if (sprintf (buf, fmtstring, 123, &count, 33, 44, 55) < 0
      || strcmp (buf, "123 ") != 0
      || count != 4)
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_directive_n=yes],
        [gl_cv_func_printf_directive_n=no],
        [case "$host_os" in
                            # Guess no on glibc when _FORTIFY_SOURCE >= 2.
           *-gnu* | gnu*)   AC_COMPILE_IFELSE(
                              [AC_LANG_SOURCE(
                                 [[#if _FORTIFY_SOURCE >= 2
                                    error fail
                                   #endif
                                 ]])],
                              [gl_cv_func_printf_directive_n="guessing yes"],
                              [gl_cv_func_printf_directive_n="guessing no"])
                            ;;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_directive_n="guessing no";;
                            # Guess no on native Windows.
           mingw*)          gl_cv_func_printf_directive_n="guessing no";;
           *)               gl_cv_func_printf_directive_n="guessing yes";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:757: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_LS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'ls' directive],
    [gl_cv_func_printf_directive_ls],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <wchar.h>
#include <string.h>
int main ()
{
  int result = 0;
  char buf[100];
  /* Test whether %ls works at all.
     This test fails on OpenBSD 4.0, IRIX 6.5, Solaris 2.6, Haiku, but not on
     Cygwin 1.5.  */
  {
    static const wchar_t wstring[] = { 'a', 'b', 'c', 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%ls", wstring) < 0
        || strcmp (buf, "abc") != 0)
      result |= 1;
  }
  /* This test fails on IRIX 6.5, Solaris 2.6, Cygwin 1.5, Haiku (with an
     assertion failure inside libc), but not on OpenBSD 4.0.  */
  {
    static const wchar_t wstring[] = { 'a', 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%ls", wstring) < 0
        || strcmp (buf, "a") != 0)
      result |= 2;
  }
  /* Test whether precisions in %ls are supported as specified in ISO C 99
     section 7.19.6.1:
       "If a precision is specified, no more than that many bytes are written
        (including shift sequences, if any), and the array shall contain a
        null wide character if, to equal the multibyte character sequence
        length given by the precision, the function would need to access a
        wide character one past the end of the array."
     This test fails on Solaris 10.  */
  {
    static const wchar_t wstring[] = { 'a', 'b', (wchar_t) 0xfdfdfdfd, 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%.2ls", wstring) < 0
        || strcmp (buf, "ab") != 0)
      result |= 8;
  }
  return result;
}]])],
        [gl_cv_func_printf_directive_ls=yes],
        [gl_cv_func_printf_directive_ls=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)  gl_cv_func_printf_directive_ls="guessing no";;
           openbsd*)        gl_cv_func_printf_directive_ls="guessing yes";;
           irix*)           gl_cv_func_printf_directive_ls="guessing no";;
           solaris*)        gl_cv_func_printf_directive_ls="guessing no";;
           cygwin*)         gl_cv_func_printf_directive_ls="guessing no";;
           beos* | haiku*)  gl_cv_func_printf_directive_ls="guessing no";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_directive_ls="guessing no";;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_printf_directive_ls="guessing yes";;
           *)               gl_cv_func_printf_directive_ls="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:836: -1- AC_DEFUN([gl_PRINTF_POSITIONS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports POSIX/XSI format strings with positions],
    [gl_cv_func_printf_positions],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
/* The string "%2$d %1$d", with dollar characters protected from the shell's
   dollar expansion (possibly an autoconf bug).  */
static char format[] = { '%', '2', '$', 'd', ' ', '%', '1', '$', 'd', '\0' };
static char buf[100];
int main ()
{
  sprintf (buf, format, 33, 55);
  return (strcmp (buf, "55 33") != 0);
}]])],
        [gl_cv_func_printf_positions=yes],
        [gl_cv_func_printf_positions=no],
        [
changequote(,)dnl
         case "$host_os" in
           netbsd[1-3]* | netbsdelf[1-3]* | netbsdaout[1-3]* | netbsdcoff[1-3]*)
                            gl_cv_func_printf_positions="guessing no";;
           beos*)           gl_cv_func_printf_positions="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_positions="guessing yes";;
                            # Guess no on native Windows.
           mingw* | pw*)    gl_cv_func_printf_positions="guessing no";;
           *)               gl_cv_func_printf_positions="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:879: -1- AC_DEFUN([gl_PRINTF_FLAG_GROUPING], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the grouping flag],
    [gl_cv_func_printf_flag_grouping],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
int main ()
{
  if (sprintf (buf, "%'d %d", 1234567, 99) < 0
      || buf[strlen (buf) - 1] != '9')
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_grouping=yes],
        [gl_cv_func_printf_flag_grouping=no],
        [
changequote(,)dnl
         case "$host_os" in
           cygwin*)         gl_cv_func_printf_flag_grouping="guessing no";;
           netbsd*)         gl_cv_func_printf_flag_grouping="guessing no";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_flag_grouping="guessing no";;
                            # Guess no on native Windows.
           mingw* | pw*)    gl_cv_func_printf_flag_grouping="guessing no";;
           *)               gl_cv_func_printf_flag_grouping="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:921: -1- AC_DEFUN([gl_PRINTF_FLAG_LEFTADJUST], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the left-adjust flag correctly],
    [gl_cv_func_printf_flag_leftadjust],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
int main ()
{
  /* Check that a '-' flag is not annihilated by a negative width.  */
  if (sprintf (buf, "a%-*sc", -3, "b") < 0
      || strcmp (buf, "ab  c") != 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_leftadjust=yes],
        [gl_cv_func_printf_flag_leftadjust=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on HP-UX 11.
           hpux11*)         gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess no on HP-UX 10 and older.
           hpux*)           gl_cv_func_printf_flag_leftadjust="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess yes otherwise.
           *)               gl_cv_func_printf_flag_leftadjust="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:967: -1- AC_DEFUN([gl_PRINTF_FLAG_ZERO], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the zero flag correctly],
    [gl_cv_func_printf_flag_zero],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  if (sprintf (buf, "%010f", 1.0 / zero, 33, 44, 55) < 0
      || (strcmp (buf, "       inf") != 0
          && strcmp (buf, "  infinity") != 0))
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_zero=yes],
        [gl_cv_func_printf_flag_zero=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on glibc systems.
           *-gnu* | gnu*)   gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess yes on musl systems.
           *-musl*)         gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess yes on BeOS.
           beos*)           gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_flag_zero="guessing no";;
                            # Guess no on native Windows.
           mingw*)          gl_cv_func_printf_flag_zero="guessing no";;
                            # If we don't know, obey --enable-cross-guesses.
           *)               gl_cv_func_printf_flag_zero="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1020: -1- AC_DEFUN([gl_PRINTF_PRECISION], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports large precisions],
    [gl_cv_func_printf_precision],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[5000];
int main ()
{
  int result = 0;
#ifdef __BEOS__
  /* On BeOS, this would crash and show a dialog box.  Avoid the crash.  */
  return 1;
#endif
  if (sprintf (buf, "%.4000d %d", 1, 33, 44) < 4000 + 3)
    result |= 1;
  if (sprintf (buf, "%.4000f %d", 1.0, 33, 44) < 4000 + 5)
    result |= 2;
  if (sprintf (buf, "%.511f %d", 1.0, 33, 44) < 511 + 5
      || buf[0] != '1')
    result |= 4;
  if (sprintf (buf, "%.999f %d", 1.0, 33, 44) < 999 + 5
      || buf[0] != '1')
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_precision=yes],
        [gl_cv_func_printf_precision=no],
        [
changequote(,)dnl
         case "$host_os" in
           # Guess no only on Solaris, native Windows, and BeOS systems.
           solaris*)        gl_cv_func_printf_precision="guessing no" ;;
           mingw* | pw*)    gl_cv_func_printf_precision="guessing no" ;;
           beos*)           gl_cv_func_printf_precision="guessing no" ;;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_precision="guessing yes" ;;
           *)               gl_cv_func_printf_precision="guessing yes" ;;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1073: -1- AC_DEFUN([gl_PRINTF_ENOMEM], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_MULTIARCH])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf survives out-of-memory conditions],
    [gl_cv_func_printf_enomem],
    [
      gl_cv_func_printf_enomem="guessing no"
      if test "$cross_compiling" = no; then
        if test $APPLE_UNIVERSAL_BUILD = 0; then
          AC_LANG_CONFTEST([AC_LANG_SOURCE([[
]GL_NOCRASH[
#include <stdio.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <errno.h>
int main()
{
  struct rlimit limit;
  int ret;
  nocrash_init ();
  /* Some printf implementations allocate temporary space with malloc.  */
  /* On BSD systems, malloc() is limited by RLIMIT_DATA.  */
#ifdef RLIMIT_DATA
  if (getrlimit (RLIMIT_DATA, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_DATA, &limit) < 0)
    return 77;
#endif
  /* On Linux systems, malloc() is limited by RLIMIT_AS.  */
#ifdef RLIMIT_AS
  if (getrlimit (RLIMIT_AS, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_AS, &limit) < 0)
    return 77;
#endif
  /* Some printf implementations allocate temporary space on the stack.  */
#ifdef RLIMIT_STACK
  if (getrlimit (RLIMIT_STACK, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_STACK, &limit) < 0)
    return 77;
#endif
  ret = printf ("%.5000000f", 1.0);
  return !(ret == 5000002 || (ret < 0 && errno == ENOMEM));
}
          ]])])
          if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
            (./conftest 2>&AS_MESSAGE_LOG_FD
             result=$?
             _AS_ECHO_LOG([\$? = $result])
             if test $result != 0 && test $result != 77; then result=1; fi
             exit $result
            ) >/dev/null 2>/dev/null
            case $? in
              0) gl_cv_func_printf_enomem="yes" ;;
              77) gl_cv_func_printf_enomem="guessing no" ;;
              *) gl_cv_func_printf_enomem="no" ;;
            esac
          else
            gl_cv_func_printf_enomem="guessing no"
          fi
          rm -fr conftest*
        else
          dnl A universal build on Apple Mac OS X platforms.
          dnl The result would be 'no' in 32-bit mode and 'yes' in 64-bit mode.
          dnl But we need a configuration result that is valid in both modes.
          gl_cv_func_printf_enomem="guessing no"
        fi
      fi
      if test "$gl_cv_func_printf_enomem" = "guessing no"; then
changequote(,)dnl
        case "$host_os" in
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on Solaris.
          solaris*)        gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on AIX.
          aix*)            gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on HP-UX/hppa.
          hpux*)           case "$host_cpu" in
                             hppa*) gl_cv_func_printf_enomem="guessing yes";;
                             *)     gl_cv_func_printf_enomem="guessing no";;
                           esac
                           ;;
                           # Guess yes on IRIX.
          irix*)           gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on OSF/1.
          osf*)            gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on BeOS.
          beos*)           gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on Haiku.
          haiku*)          gl_cv_func_printf_enomem="guessing yes";;
                           # Guess no on Android.
          linux*-android*) gl_cv_func_printf_enomem="guessing no";;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_printf_enomem="$gl_cross_guess_normal";;
        esac
changequote([,])dnl
      fi
    ])
])
m4trace:m4/printf.m4:1190: -1- AC_DEFUN([gl_SNPRINTF_PRESENCE], [
  AC_CHECK_FUNCS_ONCE([snprintf])
])
m4trace:m4/printf.m4:1199: -1- AC_DEFUN_ONCE([gl_SNPRINTF_TRUNCATION_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf truncates the result as in C99],
    [gl_cv_func_snprintf_truncation_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char buf[100];
int main ()
{
  strcpy (buf, "ABCDEF");
  my_snprintf (buf, 3, "%d %d", 4567, 89);
  if (memcmp (buf, "45\0DEF", 6) != 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_snprintf_truncation_c99=yes],
        [gl_cv_func_snprintf_truncation_c99=no],
        [
changequote(,)dnl
         case "$host_os" in
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_truncation_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_truncation_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_truncation_c99="guessing no";;
           darwin*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           openbsd*)             gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           solaris*)             gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_truncation_c99="guessing no";;
           aix*)                 gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on HP-UX >= 11.
           hpux[7-9]* | hpux10*) gl_cv_func_snprintf_truncation_c99="guessing no";;
           hpux*)                gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on OSF/1 >= 5.
           osf[3-4]*)            gl_cv_func_snprintf_truncation_c99="guessing no";;
           osf*)                 gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           netbsd*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_snprintf_truncation_c99="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_truncation_c99="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1302: -1- AC_DEFUN_ONCE([gl_SNPRINTF_RETVAL_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf returns a byte count as in C99],
    [gl_cv_func_snprintf_retval_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char buf[100];
int main ()
{
  strcpy (buf, "ABCDEF");
  if (my_snprintf (buf, 3, "%d %d", 4567, 89) != 7)
    return 1;
  if (my_snprintf (buf, 0, "%d %d", 4567, 89) != 7)
    return 2;
  if (my_snprintf (NULL, 0, "%d %d", 4567, 89) != 7)
    return 3;
  return 0;
}]])],
        [gl_cv_func_snprintf_retval_c99=yes],
        [gl_cv_func_snprintf_retval_c99=no],
        [case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_retval_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_retval_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_retval_c99="guessing no";;
           darwin*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_snprintf_retval_c99="guessing no";;
           openbsd*)             gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_sizes_c99="guessing yes";;
           solaris*)             gl_cv_func_printf_sizes_c99="guessing no";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_retval_c99="guessing no";;
           aix*)                 gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_retval_c99="guessing no";;
           netbsd*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_snprintf_retval_c99="guessing yes";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_snprintf_retval_c99="guessing yes"],
                                   [gl_cv_func_snprintf_retval_c99="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_retval_c99="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1394: -1- AC_DEFUN([gl_SNPRINTF_DIRECTIVE_N], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf fully supports the 'n' directive],
    [gl_cv_func_snprintf_directive_n],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char fmtstring[10];
static char buf[100];
int main ()
{
  int count = -1;
  /* Copy the format string.  Some systems (glibc with _FORTIFY_SOURCE=2)
     support %n in format strings in read-only memory but not in writable
     memory.  */
  strcpy (fmtstring, "%d %n");
  my_snprintf (buf, 4, fmtstring, 12345, &count, 33, 44, 55);
  if (count != 6)
    return 1;
  return 0;
}]])],
        [gl_cv_func_snprintf_directive_n=yes],
        [gl_cv_func_snprintf_directive_n=no],
        [
         case "$host_os" in
                                 # Guess no on glibc when _FORTIFY_SOURCE >= 2.
           *-gnu* | gnu*)        AC_COMPILE_IFELSE(
                                   [AC_LANG_SOURCE(
                                      [[#if _FORTIFY_SOURCE >= 2
                                         error fail
                                        #endif
                                      ]])],
                                   [gl_cv_func_snprintf_directive_n="guessing yes"],
                                   [gl_cv_func_snprintf_directive_n="guessing no"])
                                 ;;
changequote(,)dnl
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_directive_n="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_directive_n="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_directive_n="guessing no";;
           darwin*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_snprintf_directive_n="guessing no";;
           solaris*)             gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_directive_n="guessing no";;
           aix*)                 gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on OSF/1 >= 5.
           osf[3-4]*)            gl_cv_func_snprintf_directive_n="guessing no";;
           osf*)                 gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_directive_n="guessing no";;
           netbsd*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_snprintf_directive_n="guessing no";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_snprintf_directive_n="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_directive_n="$gl_cross_guess_normal";;
changequote([,])dnl
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1493: -1- AC_DEFUN([gl_SNPRINTF_SIZE1], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf respects a size of 1],
    [gl_cv_func_snprintf_size1],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
int main()
{
  static char buf[8] = { 'D', 'E', 'A', 'D', 'B', 'E', 'E', 'F' };
  my_snprintf (buf, 1, "%d", 12345);
  return buf[1] != 'E';
}]])],
        [gl_cv_func_snprintf_size1=yes],
        [gl_cv_func_snprintf_size1=no],
        [case "$host_os" in
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_snprintf_size1="guessing yes" ;;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_snprintf_size1="guessing yes" ;;
           *)               gl_cv_func_snprintf_size1="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1573: -1- AC_DEFUN([gl_VSNPRINTF_ZEROSIZE_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether vsnprintf respects a zero size as in C99],
    [gl_cv_func_vsnprintf_zerosize_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdarg.h>
#include <stdio.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
int main()
{
  static char buf[8] = { 'D', 'E', 'A', 'D', 'B', 'E', 'E', 'F' };
  my_snprintf (buf, 0, "%d", 12345);
  return buf[0] != 'D';
}]])],
        [gl_cv_func_vsnprintf_zerosize_c99=yes],
        [gl_cv_func_vsnprintf_zerosize_c99=no],
        [
changequote(,)dnl
         case "$host_os" in
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           darwin*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Cygwin.
           cygwin*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           solaris*)             gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           aix*)                 gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           netbsd*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on native Windows.
           mingw* | pw*)         gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_vsnprintf_zerosize_c99="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/pthread-cond.m4:7: -1- AC_DEFUN([gl_PTHREAD_COND], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_COND_INIT=1
    REPLACE_PTHREAD_CONDATTR_INIT=1
    REPLACE_PTHREAD_CONDATTR_DESTROY=1
    REPLACE_PTHREAD_COND_WAIT=1
    REPLACE_PTHREAD_COND_TIMEDWAIT=1
    REPLACE_PTHREAD_COND_SIGNAL=1
    REPLACE_PTHREAD_COND_BROADCAST=1
    REPLACE_PTHREAD_COND_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_COND_INIT=0
      HAVE_PTHREAD_CONDATTR_INIT=0
      HAVE_PTHREAD_CONDATTR_DESTROY=0
      HAVE_PTHREAD_COND_WAIT=0
      HAVE_PTHREAD_COND_TIMEDWAIT=0
      HAVE_PTHREAD_COND_SIGNAL=0
      HAVE_PTHREAD_COND_BROADCAST=0
      HAVE_PTHREAD_COND_DESTROY=0
    fi
  fi
])
m4trace:m4/pthread-mutex.m4:7: -1- AC_DEFUN([gl_PTHREAD_MUTEX], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_MUTEX_INIT=1
    REPLACE_PTHREAD_MUTEXATTR_INIT=1
    REPLACE_PTHREAD_MUTEXATTR_GETTYPE=1
    REPLACE_PTHREAD_MUTEXATTR_SETTYPE=1
    REPLACE_PTHREAD_MUTEXATTR_GETROBUST=1
    REPLACE_PTHREAD_MUTEXATTR_SETROBUST=1
    REPLACE_PTHREAD_MUTEXATTR_DESTROY=1
    REPLACE_PTHREAD_MUTEX_LOCK=1
    REPLACE_PTHREAD_MUTEX_TRYLOCK=1
    REPLACE_PTHREAD_MUTEX_TIMEDLOCK=1
    REPLACE_PTHREAD_MUTEX_UNLOCK=1
    REPLACE_PTHREAD_MUTEX_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_MUTEX_INIT=0
      HAVE_PTHREAD_MUTEXATTR_INIT=0
      HAVE_PTHREAD_MUTEXATTR_GETTYPE=0
      HAVE_PTHREAD_MUTEXATTR_SETTYPE=0
      HAVE_PTHREAD_MUTEXATTR_GETROBUST=0
      HAVE_PTHREAD_MUTEXATTR_SETROBUST=0
      HAVE_PTHREAD_MUTEXATTR_DESTROY=0
      HAVE_PTHREAD_MUTEX_LOCK=0
      HAVE_PTHREAD_MUTEX_TRYLOCK=0
      dnl HAVE_PTHREAD_MUTEX_TIMEDLOCK is set in pthread_mutex_timedlock.m4.
      HAVE_PTHREAD_MUTEX_UNLOCK=0
      HAVE_PTHREAD_MUTEX_DESTROY=0
    else
      AC_CACHE_CHECK([for pthread_mutexattr_getrobust],
        [gl_cv_func_pthread_mutexattr_getrobust],
        [saved_LIBS="$LIBS"
         LIBS="$LIBS $LIBPMULTITHREAD"
         AC_LINK_IFELSE(
           [AC_LANG_SOURCE(
              [[extern
                #ifdef __cplusplus
                "C"
                #endif
                int pthread_mutexattr_getrobust (void);
                int main ()
                {
                  return pthread_mutexattr_getrobust ();
                }
              ]])],
           [gl_cv_func_pthread_mutexattr_getrobust=yes],
           [gl_cv_func_pthread_mutexattr_getrobust=no])
         LIBS="$saved_LIBS"
        ])
      if test $gl_cv_func_pthread_mutexattr_getrobust = no; then
        HAVE_PTHREAD_MUTEXATTR_GETROBUST=0
        HAVE_PTHREAD_MUTEXATTR_SETROBUST=0
        AC_DEFINE([PTHREAD_MUTEXATTR_ROBUST_UNIMPLEMENTED], [1],
          [Define if the 'robust' attribute of pthread_mutex* doesn't exist.])
      fi
    fi
  fi
])
m4trace:m4/pthread-once.m4:7: -1- AC_DEFUN([gl_PTHREAD_ONCE], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_ONCE=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_ONCE=0
    fi
  fi
])
m4trace:m4/pthread-rwlock.m4:7: -1- AC_DEFUN([gl_PTHREAD_RWLOCK], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_RWLOCK_INIT=1
    REPLACE_PTHREAD_RWLOCKATTR_INIT=1
    REPLACE_PTHREAD_RWLOCKATTR_DESTROY=1
    REPLACE_PTHREAD_RWLOCK_RDLOCK=1
    REPLACE_PTHREAD_RWLOCK_WRLOCK=1
    REPLACE_PTHREAD_RWLOCK_TRYRDLOCK=1
    REPLACE_PTHREAD_RWLOCK_TRYWRLOCK=1
    REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK=1
    REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK=1
    REPLACE_PTHREAD_RWLOCK_UNLOCK=1
    REPLACE_PTHREAD_RWLOCK_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_RWLOCK_INIT=0
      HAVE_PTHREAD_RWLOCKATTR_INIT=0
      HAVE_PTHREAD_RWLOCKATTR_DESTROY=0
      HAVE_PTHREAD_RWLOCK_RDLOCK=0
      HAVE_PTHREAD_RWLOCK_WRLOCK=0
      HAVE_PTHREAD_RWLOCK_TRYRDLOCK=0
      HAVE_PTHREAD_RWLOCK_TRYWRLOCK=0
      HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK=0
      HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK=0
      HAVE_PTHREAD_RWLOCK_UNLOCK=0
      HAVE_PTHREAD_RWLOCK_DESTROY=0
    else
      dnl On Android 4.3, the pthread_rwlock_* functions are declared in
      dnl <pthread.h> but don't exist in libc.
      AC_CACHE_CHECK([for pthread_rwlock_init],
        [gl_cv_func_pthread_rwlock_init],
        [saved_LIBS="$LIBS"
         LIBS="$LIBS $LIBPMULTITHREAD"
         AC_LINK_IFELSE(
           [AC_LANG_SOURCE(
              [[extern
                #ifdef __cplusplus
                "C"
                #endif
                int pthread_rwlock_init (void);
                int main ()
                {
                  return pthread_rwlock_init ();
                }
              ]])],
           [gl_cv_func_pthread_rwlock_init=yes],
           [gl_cv_func_pthread_rwlock_init=no])
         LIBS="$saved_LIBS"
        ])
      if test $gl_cv_func_pthread_rwlock_init = no; then
        REPLACE_PTHREAD_RWLOCK_INIT=1
        REPLACE_PTHREAD_RWLOCKATTR_INIT=1
        REPLACE_PTHREAD_RWLOCKATTR_DESTROY=1
        REPLACE_PTHREAD_RWLOCK_RDLOCK=1
        REPLACE_PTHREAD_RWLOCK_WRLOCK=1
        REPLACE_PTHREAD_RWLOCK_TRYRDLOCK=1
        REPLACE_PTHREAD_RWLOCK_TRYWRLOCK=1
        REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK=1
        REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK=1
        REPLACE_PTHREAD_RWLOCK_UNLOCK=1
        REPLACE_PTHREAD_RWLOCK_DESTROY=1
        AC_DEFINE([PTHREAD_RWLOCK_UNIMPLEMENTED], [1],
          [Define if all pthread_rwlock* functions don't exist.])
      else
        dnl On Mac OS X 10.5, FreeBSD 5.2.1, OpenBSD 3.8, AIX 5.1, HP-UX 11,
        dnl IRIX 6.5, Solaris 9, Cygwin, the pthread_rwlock_timed*lock functions
        dnl don't exist, although the other pthread_rwlock* functions exist.
        AC_CHECK_DECL([pthread_rwlock_timedrdlock], ,
          [HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK=0
           HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK=0
           AC_DEFINE([PTHREAD_RWLOCK_LACKS_TIMEOUT], [1],
             [Define if the functions pthread_rwlock_timedrdlock and pthread_rwlock_timedwrlock don't exist.])
          ],
          [[#include <pthread.h>]])
      fi
    fi
  fi
])
m4trace:m4/pthread-spin.m4:7: -1- AC_DEFUN([gl_PTHREAD_SPIN], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_SPIN_INIT=1
    REPLACE_PTHREAD_SPIN_LOCK=1
    REPLACE_PTHREAD_SPIN_TRYLOCK=1
    REPLACE_PTHREAD_SPIN_UNLOCK=1
    REPLACE_PTHREAD_SPIN_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0 || test $HAVE_PTHREAD_SPINLOCK_T = 0; then
      HAVE_PTHREAD_SPIN_INIT=0
      HAVE_PTHREAD_SPIN_LOCK=0
      HAVE_PTHREAD_SPIN_TRYLOCK=0
      HAVE_PTHREAD_SPIN_UNLOCK=0
      HAVE_PTHREAD_SPIN_DESTROY=0
    fi
  fi
])
m4trace:m4/pthread-thread.m4:7: -1- AC_DEFUN([gl_PTHREAD_THREAD], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_CREATE=1
    REPLACE_PTHREAD_ATTR_INIT=1
    REPLACE_PTHREAD_ATTR_GETDETACHSTATE=1
    REPLACE_PTHREAD_ATTR_SETDETACHSTATE=1
    REPLACE_PTHREAD_ATTR_DESTROY=1
    REPLACE_PTHREAD_SELF=1
    REPLACE_PTHREAD_EQUAL=1
    REPLACE_PTHREAD_DETACH=1
    REPLACE_PTHREAD_JOIN=1
    REPLACE_PTHREAD_EXIT=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_CREATE=0
      HAVE_PTHREAD_ATTR_INIT=0
      HAVE_PTHREAD_ATTR_GETDETACHSTATE=0
      HAVE_PTHREAD_ATTR_SETDETACHSTATE=0
      HAVE_PTHREAD_ATTR_DESTROY=0
      HAVE_PTHREAD_SELF=0
      HAVE_PTHREAD_EQUAL=0
      HAVE_PTHREAD_DETACH=0
      HAVE_PTHREAD_JOIN=0
      HAVE_PTHREAD_EXIT=0
    else
      dnl On HP-UX 11.11, pthread_create() and pthread_attr_init() are only
      dnl defined as inline functions.
      AC_CACHE_CHECK([whether pthread_create exists as a global function],
        [gl_cv_func_pthread_create],
        [saved_LIBS="$LIBS"
         LIBS="$LIBS $LIBPMULTITHREAD"
         AC_LINK_IFELSE(
           [AC_LANG_SOURCE(
              [[extern
                #ifdef __cplusplus
                "C"
                #endif
                int pthread_create (void);
                int main ()
                {
                  return pthread_create ();
                }
              ]])],
           [gl_cv_func_pthread_create=yes],
           [gl_cv_func_pthread_create=no])
         LIBS="$saved_LIBS"
        ])
      if test $gl_cv_func_pthread_create = no; then
        REPLACE_PTHREAD_CREATE=1
        REPLACE_PTHREAD_ATTR_INIT=1
        AC_DEFINE([PTHREAD_CREATE_IS_INLINE], [1],
          [Define if pthread_create is an inline function.])
      fi
    fi
  fi
])
m4trace:m4/pthread-tss.m4:7: -1- AC_DEFUN([gl_PTHREAD_TSS], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_KEY_CREATE=1
    REPLACE_PTHREAD_SETSPECIFIC=1
    REPLACE_PTHREAD_GETSPECIFIC=1
    REPLACE_PTHREAD_KEY_DELETE=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_KEY_CREATE=0
      HAVE_PTHREAD_SETSPECIFIC=0
      HAVE_PTHREAD_GETSPECIFIC=0
      HAVE_PTHREAD_KEY_DELETE=0
    fi
  fi
])
m4trace:m4/pthread_h.m4:7: -1- AC_DEFUN_ONCE([gl_PTHREAD_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PTHREADLIB])

  gl_CHECK_NEXT_HEADERS([pthread.h])
  if test $ac_cv_header_pthread_h = yes; then
    HAVE_PTHREAD_H=1
    dnl On mingw, if --enable-threads=windows or gl_AVOID_WINPTHREAD is used,
    dnl ignore the <pthread.h> from the mingw-w64 winpthreads library.
    m4_ifdef([gl_][THREADLIB], [
      AC_REQUIRE([gl_][THREADLIB])
      if { case "$host_os" in mingw*) true;; *) false;; esac; } \
         && test $gl_threads_api = windows; then
        HAVE_PTHREAD_H=0
      fi
    ])
  else
    HAVE_PTHREAD_H=0
  fi
  AC_SUBST([HAVE_PTHREAD_H])

  AC_CHECK_TYPES([pthread_t, pthread_spinlock_t], [], [],
    [AC_INCLUDES_DEFAULT[
     #if HAVE_PTHREAD_H
      #include <pthread.h>
     #endif]])
  if test $ac_cv_type_pthread_t != yes; then
    HAVE_PTHREAD_T=0
  fi
  if test $ac_cv_type_pthread_spinlock_t != yes; then
    HAVE_PTHREAD_SPINLOCK_T=0
  fi

  dnl Constants may be defined as C preprocessor macros or as enum items.

  AC_CACHE_CHECK([for PTHREAD_CREATE_DETACHED],
    [gl_cv_const_PTHREAD_CREATE_DETACHED],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_CREATE_DETACHED;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_CREATE_DETACHED=yes],
       [gl_cv_const_PTHREAD_CREATE_DETACHED=no])
    ])
  if test $gl_cv_const_PTHREAD_CREATE_DETACHED != yes; then
    HAVE_PTHREAD_CREATE_DETACHED=0
  fi

  AC_CACHE_CHECK([for PTHREAD_MUTEX_RECURSIVE],
    [gl_cv_const_PTHREAD_MUTEX_RECURSIVE],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_MUTEX_RECURSIVE;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_MUTEX_RECURSIVE=yes],
       [gl_cv_const_PTHREAD_MUTEX_RECURSIVE=no])
    ])
  if test $gl_cv_const_PTHREAD_MUTEX_RECURSIVE != yes; then
    HAVE_PTHREAD_MUTEX_RECURSIVE=0
  fi

  AC_CACHE_CHECK([for PTHREAD_MUTEX_ROBUST],
    [gl_cv_const_PTHREAD_MUTEX_ROBUST],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_MUTEX_ROBUST;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_MUTEX_ROBUST=yes],
       [gl_cv_const_PTHREAD_MUTEX_ROBUST=no])
    ])
  if test $gl_cv_const_PTHREAD_MUTEX_ROBUST != yes; then
    HAVE_PTHREAD_MUTEX_ROBUST=0
  fi

  AC_CACHE_CHECK([for PTHREAD_PROCESS_SHARED],
    [gl_cv_const_PTHREAD_PROCESS_SHARED],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_PROCESS_SHARED;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_PROCESS_SHARED=yes],
       [gl_cv_const_PTHREAD_PROCESS_SHARED=no])
    ])
  if test $gl_cv_const_PTHREAD_PROCESS_SHARED != yes; then
    HAVE_PTHREAD_PROCESS_SHARED=0
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <pthread.h>
    ]], [
    pthread_create pthread_attr_init pthread_attr_getdetachstate
    pthread_attr_setdetachstate pthread_attr_destroy pthread_self pthread_equal
    pthread_detach pthread_join pthread_exit
    pthread_once
    pthread_mutex_init pthread_mutexattr_init pthread_mutexattr_gettype
    pthread_mutexattr_settype pthread_mutexattr_getrobust
    pthread_mutexattr_setrobust pthread_mutexattr_destroy pthread_mutex_lock
    pthread_mutex_trylock pthread_mutex_timedlock pthread_mutex_unlock
    pthread_mutex_destroy
    pthread_rwlock_init pthread_rwlockattr_init pthread_rwlockattr_destroy
    pthread_rwlock_rdlock pthread_rwlock_wrlock pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock pthread_rwlock_unlock pthread_rwlock_destroy
    pthread_cond_init pthread_condattr_init pthread_condattr_destroy
    pthread_cond_wait pthread_cond_timedwait pthread_cond_signal
    pthread_cond_broadcast pthread_cond_destroy
    pthread_key_create pthread_setspecific pthread_getspecific
    pthread_key_delete
    pthread_spin_init pthread_spin_lock pthread_spin_trylock pthread_spin_unlock
    pthread_spin_destroy])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl For backward compatibility with gnulib versions <= 2019-07.
  LIB_PTHREAD="$LIBPMULTITHREAD"
  AC_SUBST([LIB_PTHREAD])
])
m4trace:m4/pthread_h.m4:144: -1- AC_DEFUN([gl_PTHREAD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_PTHREAD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/pthread_h.m4:156: -1- AC_DEFUN([gl_PTHREAD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_PTHREAD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_THREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_ONCE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_RWLOCK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_COND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_TSS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SPIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX_TIMEDLOCK])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_PTHREAD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])
])
m4trace:m4/pthread_h.m4:172: -1- AC_DEFUN([gl_PTHREAD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PTHREAD_T=1;                      AC_SUBST([HAVE_PTHREAD_T])
  HAVE_PTHREAD_SPINLOCK_T=1;             AC_SUBST([HAVE_PTHREAD_SPINLOCK_T])
  HAVE_PTHREAD_CREATE_DETACHED=1;        AC_SUBST([HAVE_PTHREAD_CREATE_DETACHED])
  HAVE_PTHREAD_MUTEX_RECURSIVE=1;        AC_SUBST([HAVE_PTHREAD_MUTEX_RECURSIVE])
  HAVE_PTHREAD_MUTEX_ROBUST=1;           AC_SUBST([HAVE_PTHREAD_MUTEX_ROBUST])
  HAVE_PTHREAD_PROCESS_SHARED=1;         AC_SUBST([HAVE_PTHREAD_PROCESS_SHARED])
  HAVE_PTHREAD_CREATE=1;                 AC_SUBST([HAVE_PTHREAD_CREATE])
  HAVE_PTHREAD_ATTR_INIT=1;              AC_SUBST([HAVE_PTHREAD_ATTR_INIT])
  HAVE_PTHREAD_ATTR_GETDETACHSTATE=1;    AC_SUBST([HAVE_PTHREAD_ATTR_GETDETACHSTATE])
  HAVE_PTHREAD_ATTR_SETDETACHSTATE=1;    AC_SUBST([HAVE_PTHREAD_ATTR_SETDETACHSTATE])
  HAVE_PTHREAD_ATTR_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_ATTR_DESTROY])
  HAVE_PTHREAD_SELF=1;                   AC_SUBST([HAVE_PTHREAD_SELF])
  HAVE_PTHREAD_EQUAL=1;                  AC_SUBST([HAVE_PTHREAD_EQUAL])
  HAVE_PTHREAD_DETACH=1;                 AC_SUBST([HAVE_PTHREAD_DETACH])
  HAVE_PTHREAD_JOIN=1;                   AC_SUBST([HAVE_PTHREAD_JOIN])
  HAVE_PTHREAD_EXIT=1;                   AC_SUBST([HAVE_PTHREAD_EXIT])
  HAVE_PTHREAD_ONCE=1;                   AC_SUBST([HAVE_PTHREAD_ONCE])
  HAVE_PTHREAD_MUTEX_INIT=1;             AC_SUBST([HAVE_PTHREAD_MUTEX_INIT])
  HAVE_PTHREAD_MUTEXATTR_INIT=1;         AC_SUBST([HAVE_PTHREAD_MUTEXATTR_INIT])
  HAVE_PTHREAD_MUTEXATTR_GETTYPE=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_GETTYPE])
  HAVE_PTHREAD_MUTEXATTR_SETTYPE=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_SETTYPE])
  HAVE_PTHREAD_MUTEXATTR_GETROBUST=1;    AC_SUBST([HAVE_PTHREAD_MUTEXATTR_GETROBUST])
  HAVE_PTHREAD_MUTEXATTR_SETROBUST=1;    AC_SUBST([HAVE_PTHREAD_MUTEXATTR_SETROBUST])
  HAVE_PTHREAD_MUTEXATTR_DESTROY=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_DESTROY])
  HAVE_PTHREAD_MUTEX_LOCK=1;             AC_SUBST([HAVE_PTHREAD_MUTEX_LOCK])
  HAVE_PTHREAD_MUTEX_TRYLOCK=1;          AC_SUBST([HAVE_PTHREAD_MUTEX_TRYLOCK])
  HAVE_PTHREAD_MUTEX_TIMEDLOCK=1;        AC_SUBST([HAVE_PTHREAD_MUTEX_TIMEDLOCK])
  HAVE_PTHREAD_MUTEX_UNLOCK=1;           AC_SUBST([HAVE_PTHREAD_MUTEX_UNLOCK])
  HAVE_PTHREAD_MUTEX_DESTROY=1;          AC_SUBST([HAVE_PTHREAD_MUTEX_DESTROY])
  HAVE_PTHREAD_RWLOCK_INIT=1;            AC_SUBST([HAVE_PTHREAD_RWLOCK_INIT])
  HAVE_PTHREAD_RWLOCKATTR_INIT=1;        AC_SUBST([HAVE_PTHREAD_RWLOCKATTR_INIT])
  HAVE_PTHREAD_RWLOCKATTR_DESTROY=1;     AC_SUBST([HAVE_PTHREAD_RWLOCKATTR_DESTROY])
  HAVE_PTHREAD_RWLOCK_RDLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_RDLOCK])
  HAVE_PTHREAD_RWLOCK_WRLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_WRLOCK])
  HAVE_PTHREAD_RWLOCK_TRYRDLOCK=1;       AC_SUBST([HAVE_PTHREAD_RWLOCK_TRYRDLOCK])
  HAVE_PTHREAD_RWLOCK_TRYWRLOCK=1;       AC_SUBST([HAVE_PTHREAD_RWLOCK_TRYWRLOCK])
  HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK=1;     AC_SUBST([HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK])
  HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK=1;     AC_SUBST([HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK])
  HAVE_PTHREAD_RWLOCK_UNLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_UNLOCK])
  HAVE_PTHREAD_RWLOCK_DESTROY=1;         AC_SUBST([HAVE_PTHREAD_RWLOCK_DESTROY])
  HAVE_PTHREAD_COND_INIT=1;              AC_SUBST([HAVE_PTHREAD_COND_INIT])
  HAVE_PTHREAD_CONDATTR_INIT=1;          AC_SUBST([HAVE_PTHREAD_CONDATTR_INIT])
  HAVE_PTHREAD_CONDATTR_DESTROY=1;       AC_SUBST([HAVE_PTHREAD_CONDATTR_DESTROY])
  HAVE_PTHREAD_COND_WAIT=1;              AC_SUBST([HAVE_PTHREAD_COND_WAIT])
  HAVE_PTHREAD_COND_TIMEDWAIT=1;         AC_SUBST([HAVE_PTHREAD_COND_TIMEDWAIT])
  HAVE_PTHREAD_COND_SIGNAL=1;            AC_SUBST([HAVE_PTHREAD_COND_SIGNAL])
  HAVE_PTHREAD_COND_BROADCAST=1;         AC_SUBST([HAVE_PTHREAD_COND_BROADCAST])
  HAVE_PTHREAD_COND_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_COND_DESTROY])
  HAVE_PTHREAD_KEY_CREATE=1;             AC_SUBST([HAVE_PTHREAD_KEY_CREATE])
  HAVE_PTHREAD_SETSPECIFIC=1;            AC_SUBST([HAVE_PTHREAD_SETSPECIFIC])
  HAVE_PTHREAD_GETSPECIFIC=1;            AC_SUBST([HAVE_PTHREAD_GETSPECIFIC])
  HAVE_PTHREAD_KEY_DELETE=1;             AC_SUBST([HAVE_PTHREAD_KEY_DELETE])
  HAVE_PTHREAD_SPIN_INIT=1;              AC_SUBST([HAVE_PTHREAD_SPIN_INIT])
  HAVE_PTHREAD_SPIN_LOCK=1;              AC_SUBST([HAVE_PTHREAD_SPIN_LOCK])
  HAVE_PTHREAD_SPIN_TRYLOCK=1;           AC_SUBST([HAVE_PTHREAD_SPIN_TRYLOCK])
  HAVE_PTHREAD_SPIN_UNLOCK=1;            AC_SUBST([HAVE_PTHREAD_SPIN_UNLOCK])
  HAVE_PTHREAD_SPIN_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_SPIN_DESTROY])
  REPLACE_PTHREAD_CREATE=0;              AC_SUBST([REPLACE_PTHREAD_CREATE])
  REPLACE_PTHREAD_ATTR_INIT=0;           AC_SUBST([REPLACE_PTHREAD_ATTR_INIT])
  REPLACE_PTHREAD_ATTR_GETDETACHSTATE=0; AC_SUBST([REPLACE_PTHREAD_ATTR_GETDETACHSTATE])
  REPLACE_PTHREAD_ATTR_SETDETACHSTATE=0; AC_SUBST([REPLACE_PTHREAD_ATTR_SETDETACHSTATE])
  REPLACE_PTHREAD_ATTR_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_ATTR_DESTROY])
  REPLACE_PTHREAD_SELF=0;                AC_SUBST([REPLACE_PTHREAD_SELF])
  REPLACE_PTHREAD_EQUAL=0;               AC_SUBST([REPLACE_PTHREAD_EQUAL])
  REPLACE_PTHREAD_DETACH=0;              AC_SUBST([REPLACE_PTHREAD_DETACH])
  REPLACE_PTHREAD_JOIN=0;                AC_SUBST([REPLACE_PTHREAD_JOIN])
  REPLACE_PTHREAD_EXIT=0;                AC_SUBST([REPLACE_PTHREAD_EXIT])
  REPLACE_PTHREAD_ONCE=0;                AC_SUBST([REPLACE_PTHREAD_ONCE])
  REPLACE_PTHREAD_MUTEX_INIT=0;          AC_SUBST([REPLACE_PTHREAD_MUTEX_INIT])
  REPLACE_PTHREAD_MUTEXATTR_INIT=0;      AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_INIT])
  REPLACE_PTHREAD_MUTEXATTR_GETTYPE=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_GETTYPE])
  REPLACE_PTHREAD_MUTEXATTR_SETTYPE=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_SETTYPE])
  REPLACE_PTHREAD_MUTEXATTR_GETROBUST=0; AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_GETROBUST])
  REPLACE_PTHREAD_MUTEXATTR_SETROBUST=0; AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_SETROBUST])
  REPLACE_PTHREAD_MUTEXATTR_DESTROY=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_DESTROY])
  REPLACE_PTHREAD_MUTEX_LOCK=0;          AC_SUBST([REPLACE_PTHREAD_MUTEX_LOCK])
  REPLACE_PTHREAD_MUTEX_TRYLOCK=0;       AC_SUBST([REPLACE_PTHREAD_MUTEX_TRYLOCK])
  REPLACE_PTHREAD_MUTEX_TIMEDLOCK=0;     AC_SUBST([REPLACE_PTHREAD_MUTEX_TIMEDLOCK])
  REPLACE_PTHREAD_MUTEX_UNLOCK=0;        AC_SUBST([REPLACE_PTHREAD_MUTEX_UNLOCK])
  REPLACE_PTHREAD_MUTEX_DESTROY=0;       AC_SUBST([REPLACE_PTHREAD_MUTEX_DESTROY])
  REPLACE_PTHREAD_RWLOCK_INIT=0;         AC_SUBST([REPLACE_PTHREAD_RWLOCK_INIT])
  REPLACE_PTHREAD_RWLOCKATTR_INIT=0;     AC_SUBST([REPLACE_PTHREAD_RWLOCKATTR_INIT])
  REPLACE_PTHREAD_RWLOCKATTR_DESTROY=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCKATTR_DESTROY])
  REPLACE_PTHREAD_RWLOCK_RDLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_RDLOCK])
  REPLACE_PTHREAD_RWLOCK_WRLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_WRLOCK])
  REPLACE_PTHREAD_RWLOCK_TRYRDLOCK=0;    AC_SUBST([REPLACE_PTHREAD_RWLOCK_TRYRDLOCK])
  REPLACE_PTHREAD_RWLOCK_TRYWRLOCK=0;    AC_SUBST([REPLACE_PTHREAD_RWLOCK_TRYWRLOCK])
  REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK])
  REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK])
  REPLACE_PTHREAD_RWLOCK_UNLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_UNLOCK])
  REPLACE_PTHREAD_RWLOCK_DESTROY=0;      AC_SUBST([REPLACE_PTHREAD_RWLOCK_DESTROY])
  REPLACE_PTHREAD_COND_INIT=0;           AC_SUBST([REPLACE_PTHREAD_COND_INIT])
  REPLACE_PTHREAD_CONDATTR_INIT=0;       AC_SUBST([REPLACE_PTHREAD_CONDATTR_INIT])
  REPLACE_PTHREAD_CONDATTR_DESTROY=0;    AC_SUBST([REPLACE_PTHREAD_CONDATTR_DESTROY])
  REPLACE_PTHREAD_COND_WAIT=0;           AC_SUBST([REPLACE_PTHREAD_COND_WAIT])
  REPLACE_PTHREAD_COND_TIMEDWAIT=0;      AC_SUBST([REPLACE_PTHREAD_COND_TIMEDWAIT])
  REPLACE_PTHREAD_COND_SIGNAL=0;         AC_SUBST([REPLACE_PTHREAD_COND_SIGNAL])
  REPLACE_PTHREAD_COND_BROADCAST=0;      AC_SUBST([REPLACE_PTHREAD_COND_BROADCAST])
  REPLACE_PTHREAD_COND_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_COND_DESTROY])
  REPLACE_PTHREAD_KEY_CREATE=0;          AC_SUBST([REPLACE_PTHREAD_KEY_CREATE])
  REPLACE_PTHREAD_SETSPECIFIC=0;         AC_SUBST([REPLACE_PTHREAD_SETSPECIFIC])
  REPLACE_PTHREAD_GETSPECIFIC=0;         AC_SUBST([REPLACE_PTHREAD_GETSPECIFIC])
  REPLACE_PTHREAD_KEY_DELETE=0;          AC_SUBST([REPLACE_PTHREAD_KEY_DELETE])
  REPLACE_PTHREAD_SPIN_INIT=0;           AC_SUBST([REPLACE_PTHREAD_SPIN_INIT])
  REPLACE_PTHREAD_SPIN_LOCK=0;           AC_SUBST([REPLACE_PTHREAD_SPIN_LOCK])
  REPLACE_PTHREAD_SPIN_TRYLOCK=0;        AC_SUBST([REPLACE_PTHREAD_SPIN_TRYLOCK])
  REPLACE_PTHREAD_SPIN_UNLOCK=0;         AC_SUBST([REPLACE_PTHREAD_SPIN_UNLOCK])
  REPLACE_PTHREAD_SPIN_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_SPIN_DESTROY])
])
m4trace:m4/pthread_mutex_timedlock.m4:7: -1- AC_DEFUN([gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK], [
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])

  AC_CHECK_DECL([pthread_mutex_timedlock], , [HAVE_PTHREAD_MUTEX_TIMEDLOCK=0],
    [[#include <pthread.h>]])
])
m4trace:m4/raise.m4:7: -1- AC_DEFUN([gl_FUNC_RAISE], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([raise])
  if test $ac_cv_func_raise = no; then
    HAVE_RAISE=0
  else
    m4_ifdef([gl_MSVC_INVAL], [
      AC_REQUIRE([gl_MSVC_INVAL])
      if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
        REPLACE_RAISE=1
      fi
    ])
    m4_ifdef([gl_SIGNALBLOCKING], [
      gl_SIGNALBLOCKING
      if test $HAVE_POSIX_SIGNALBLOCKING = 0; then
        m4_ifdef([gl_SIGNAL_SIGPIPE], [
          gl_SIGNAL_SIGPIPE
          if test $gl_cv_header_signal_h_SIGPIPE != yes; then
            REPLACE_RAISE=1
          fi
        ], [:])
      fi
    ])
  fi
])
m4trace:m4/raise.m4:36: -1- AC_DEFUN([gl_PREREQ_RAISE], [:])
m4trace:m4/realloc.m4:9: -1- AC_DEFUN([_AC_FUNC_REALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether realloc (0, 0) returns nonnull],
    [ac_cv_func_realloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = realloc (0, 0);
            int result = !p;
            free (p);
            return result;]])
       ],
       [ac_cv_func_realloc_0_nonnull=yes],
       [ac_cv_func_realloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | msys* )
            ac_cv_func_realloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_realloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_realloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/realloc.m4:42: -1- AC_DEFUN([gl_FUNC_REALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_REALLOC_POSIX])
  if test $REPLACE_REALLOC = 0; then
    _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC=1])
  fi
])
m4trace:m4/realloc.m4:56: -1- AC_DEFUN([gl_FUNC_REALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 1; then
    REPLACE_REALLOC=1
  fi
])
m4trace:m4/reallocarray.m4:7: -1- AC_DEFUN([gl_FUNC_REALLOCARRAY], [
  dnl Persuade glibc <stdlib.h> to declare reallocarray.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  AC_CHECK_FUNCS([reallocarray])
  if test "$ac_cv_func_reallocarray" = no; then
    HAVE_REALLOCARRAY=0
  elif test "$gl_cv_malloc_ptrdiff" = no; then
    REPLACE_REALLOCARRAY=1
  fi
])
m4trace:m4/reallocarray.m4:23: -1- AC_DEFUN([gl_PREREQ_REALLOCARRAY], [:])
m4trace:m4/sched_h.m4:9: -1- AC_DEFUN_ONCE([gl_SCHED_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_CHECK_HEADERS_ONCE([sys/cdefs.h])
  AC_CHECK_HEADERS([sched.h], [], [],
    [[#if HAVE_SYS_CDEFS_H
       #include <sys/cdefs.h>
      #endif
    ]])
  gl_NEXT_HEADERS([sched.h])

  if test "$ac_cv_header_sched_h" = yes; then
    HAVE_SCHED_H=1
  else
    HAVE_SCHED_H=0
  fi
  AC_SUBST([HAVE_SCHED_H])

  if test "$HAVE_SCHED_H" = 1; then
    AC_CHECK_TYPE([struct sched_param],
      [HAVE_STRUCT_SCHED_PARAM=1], [HAVE_STRUCT_SCHED_PARAM=0],
      [[#if HAVE_SYS_CDEFS_H
         #include <sys/cdefs.h>
        #endif
        #include <sched.h>
      ]])
  else
    HAVE_STRUCT_SCHED_PARAM=0
    case "$host_os" in
      os2*)
        dnl On OS/2 kLIBC, struct sched_param is in spawn.h.
        AC_CHECK_TYPE([struct sched_param],
          [HAVE_STRUCT_SCHED_PARAM=1], [],
          [#include <spawn.h>])
        ;;
      vms)
        dnl On OpenVMS 7.2 or newer, struct sched_param is in pthread.h.
        AC_CHECK_TYPE([struct sched_param],
          [HAVE_STRUCT_SCHED_PARAM=1], [],
          [#include <pthread.h>])
        ;;
    esac
  fi
  AC_SUBST([HAVE_STRUCT_SCHED_PARAM])

  if test "$ac_cv_header_sys_cdefs_h" = yes; then
    HAVE_SYS_CDEFS_H=1
  else
    HAVE_SYS_CDEFS_H=0
  fi
  AC_SUBST([HAVE_SYS_CDEFS_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <sched.h>
    ]], [sched_yield])
])
m4trace:m4/sched_h.m4:80: -1- AC_DEFUN([gl_SCHED_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SCHED_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sched_h.m4:92: -1- AC_DEFUN([gl_SCHED_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SCHED_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCHED_YIELD])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SCHED_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])
])
m4trace:m4/sched_h.m4:101: -1- AC_DEFUN([gl_SCHED_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_SCHED_YIELD=1;    AC_SUBST([HAVE_SCHED_YIELD])
  REPLACE_SCHED_YIELD=0; AC_SUBST([REPLACE_SCHED_YIELD])
])
m4trace:m4/select.m4:7: -1- AC_DEFUN([gl_FUNC_SELECT], [
  AC_REQUIRE([gl_SYS_SELECT_H])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SOCKETS])
  if test "$ac_cv_header_winsock2_h" = yes; then
    REPLACE_SELECT=1
  else
    dnl On Interix 3.5, select(0, NULL, NULL, NULL, timeout) fails with error
    dnl EFAULT.
    AC_CHECK_HEADERS_ONCE([sys/select.h])
    AC_CACHE_CHECK([whether select supports a 0 argument],
      [gl_cv_func_select_supports0],
      [
        AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
int main ()
{
  struct timeval timeout;
  timeout.tv_sec = 0;
  timeout.tv_usec = 5;
  return select (0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &timeout) < 0;
}]])], [gl_cv_func_select_supports0=yes], [gl_cv_func_select_supports0=no],
          [
changequote(,)dnl
           case "$host_os" in
                       # Guess no on Interix.
             interix*) gl_cv_func_select_supports0="guessing no";;
                       # Guess yes otherwise.
             *)        gl_cv_func_select_supports0="guessing yes";;
           esac
changequote([,])dnl
          ])
      ])
    case "$gl_cv_func_select_supports0" in
      *yes) ;;
      *) REPLACE_SELECT=1 ;;
    esac

    dnl On FreeBSD 8.2, select() doesn't always reject bad fds.
    AC_CACHE_CHECK([whether select detects invalid fds],
      [gl_cv_func_select_detects_ebadf],
      [
        AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
# include <sys/select.h>
#endif
#include <unistd.h>
#include <errno.h>
]GL_MDA_DEFINES],
[[
  fd_set set;
  dup2(0, 16);
  FD_ZERO(&set);
  FD_SET(16, &set);
  close(16);
  struct timeval timeout;
  timeout.tv_sec = 0;
  timeout.tv_usec = 5;
  return select (17, &set, NULL, NULL, &timeout) != -1 || errno != EBADF;
]])], [gl_cv_func_select_detects_ebadf=yes],
      [gl_cv_func_select_detects_ebadf=no],
          [
           case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_select_detects_ebadf="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_select_detects_ebadf="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_select_detects_ebadf="$gl_cross_guess_normal" ;;
           esac
          ])
      ])
    case $gl_cv_func_select_detects_ebadf in
      *yes) ;;
      *) REPLACE_SELECT=1 ;;
    esac
  fi

  dnl Determine the needed libraries.
  LIB_SELECT="$LIBSOCKET"
  if test $REPLACE_SELECT = 1; then
    case "$host_os" in
      mingw*)
        dnl On the MSVC platform, the function MsgWaitForMultipleObjects
        dnl (used in lib/select.c) requires linking with -luser32. On mingw,
        dnl it is implicit.
        AC_LINK_IFELSE(
          [AC_LANG_SOURCE([[
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
int
main ()
{
  MsgWaitForMultipleObjects (0, NULL, 0, 0, 0);
  return 0;
}]])],
          [],
          [LIB_SELECT="$LIB_SELECT -luser32"])
        ;;
    esac
  fi
  AC_SUBST([LIB_SELECT])
])
m4trace:m4/sigaction.m4:8: -1- AC_DEFUN([gl_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([sigaction])
  if test $ac_cv_func_sigaction = yes; then
    AC_CHECK_MEMBERS([struct sigaction.sa_sigaction], , ,
                     [[#include <signal.h>]])
    if test $ac_cv_member_struct_sigaction_sa_sigaction = no; then
      HAVE_STRUCT_SIGACTION_SA_SIGACTION=0
    fi
  else
    HAVE_SIGACTION=0
  fi
])
m4trace:m4/sigaction.m4:24: -1- AC_DEFUN([gl_PREREQ_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_TYPE_UID_T])
  AC_REQUIRE([gl_PREREQ_SIG_HANDLER_H])
  AC_CHECK_FUNCS_ONCE([sigaltstack siginterrupt])
  AC_CHECK_TYPES([siginfo_t], [], [], [[
#include <signal.h>
  ]])
  if test $ac_cv_type_siginfo_t = no; then
    HAVE_SIGINFO_T=0
  fi
])
m4trace:m4/sigaction.m4:40: -1- AC_DEFUN([gl_PREREQ_SIG_HANDLER_H], [:])
m4trace:m4/signal_h.m4:7: -1- AC_DEFUN_ONCE([gl_SIGNAL_H], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  gl_NEXT_HEADERS([signal.h])

# AIX declares sig_atomic_t to already include volatile, and C89 compilers
# then choke on 'volatile sig_atomic_t'.  C99 requires that it compile.
  AC_CHECK_TYPE([volatile sig_atomic_t], [],
    [HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=0], [[
#include <signal.h>
    ]])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  AC_REQUIRE([AC_TYPE_UID_T])

  dnl Persuade glibc <signal.h> to define sighandler_t.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_TYPE([sighandler_t], [], [HAVE_SIGHANDLER_T=0], [[
#include <signal.h>
    ]])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/signal_h.m4:41: -1- AC_DEFUN([gl_CHECK_TYPE_SIGSET_T], [
  AC_CHECK_TYPES([sigset_t],
    [gl_cv_type_sigset_t=yes], [gl_cv_type_sigset_t=no],
    [[
      #include <signal.h>
      /* Mingw defines sigset_t not in <signal.h>, but in <sys/types.h>.  */
      #include <sys/types.h>
    ]])
  if test $gl_cv_type_sigset_t != yes; then
    HAVE_SIGSET_T=0
  fi
])
m4trace:m4/signal_h.m4:59: -1- AC_DEFUN([gl_SIGNAL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/signal_h.m4:71: -1- AC_DEFUN([gl_SIGNAL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
])
m4trace:m4/signal_h.m4:84: -1- AC_DEFUN([gl_SIGNAL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_POSIX_SIGNALBLOCKING=1; AC_SUBST([HAVE_POSIX_SIGNALBLOCKING])
  HAVE_PTHREAD_SIGMASK=1;      AC_SUBST([HAVE_PTHREAD_SIGMASK])
  HAVE_RAISE=1;                AC_SUBST([HAVE_RAISE])
  HAVE_SIGSET_T=1;             AC_SUBST([HAVE_SIGSET_T])
  HAVE_SIGINFO_T=1;            AC_SUBST([HAVE_SIGINFO_T])
  HAVE_SIGACTION=1;            AC_SUBST([HAVE_SIGACTION])
  HAVE_STRUCT_SIGACTION_SA_SIGACTION=1;
                               AC_SUBST([HAVE_STRUCT_SIGACTION_SA_SIGACTION])
  HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=1;
                               AC_SUBST([HAVE_TYPE_VOLATILE_SIG_ATOMIC_T])
  HAVE_SIGHANDLER_T=1;         AC_SUBST([HAVE_SIGHANDLER_T])
  REPLACE_PTHREAD_SIGMASK=0;   AC_SUBST([REPLACE_PTHREAD_SIGMASK])
  REPLACE_RAISE=0;             AC_SUBST([REPLACE_RAISE])
])
m4trace:m4/signalblocking.m4:12: -1- AC_DEFUN([gl_SIGNALBLOCKING], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  HAVE_POSIX_SIGNALBLOCKING=0
  if test "$gl_cv_type_sigset_t" = yes; then
    AC_CHECK_FUNC([sigprocmask], [HAVE_POSIX_SIGNALBLOCKING=1])
  fi
])
m4trace:m4/signalblocking.m4:23: -1- AC_DEFUN([gl_PREREQ_SIGPROCMASK], [:])
m4trace:m4/signbit.m4:7: -1- AC_DEFUN([gl_SIGNBIT], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([for signbit macro], [gl_cv_func_signbit],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <math.h>
/* If signbit is defined as a function, don't use it, since calling it for
   'float' or 'long double' arguments would involve conversions.
   If signbit is not declared at all but exists as a library function, don't
   use it, since the prototype may not match.
   If signbit is not declared at all but exists as a compiler built-in, don't
   use it, since it's preferable to use __builtin_signbit* (no warnings,
   no conversions).  */
#ifndef signbit
# error "signbit should be a macro"
#endif
#include <string.h>
]gl_SIGNBIT_TEST_PROGRAM
])],
        [gl_cv_func_signbit=yes],
        [gl_cv_func_signbit=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_signbit="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_signbit="guessing yes" ;;
                          # Guess yes on native Windows.
           mingw*)        gl_cv_func_signbit="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_signbit="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
  dnl GCC >= 4.0 and clang provide three built-ins for signbit.
  dnl They can be used without warnings, also in C++, regardless of <math.h>.
  dnl But they may expand to calls to functions, which may or may not be in
  dnl libc.
  AC_CACHE_CHECK([for signbit compiler built-ins],
    [gl_cv_func_signbit_builtins],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#if (__GNUC__ >= 4) || (__clang_major__ >= 4)
# define signbit(x) \
   (sizeof (x) == sizeof (long double) ? __builtin_signbitl (x) : \
    sizeof (x) == sizeof (double) ? __builtin_signbit (x) : \
    __builtin_signbitf (x))
#else
# error "signbit should be three compiler built-ins"
#endif
#include <string.h>
]gl_SIGNBIT_TEST_PROGRAM
])],
        [gl_cv_func_signbit_builtins=yes],
        [gl_cv_func_signbit_builtins=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_signbit_builtins="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_signbit_builtins="guessing yes" ;;
                          # Guess yes on mingw, no on MSVC.
           mingw*)        if test -n "$GCC"; then
                            gl_cv_func_signbit_builtins="guessing yes"
                          else
                            gl_cv_func_signbit_builtins="guessing no"
                          fi
                          ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_signbit_builtins="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
  dnl Use the compiler built-ins whenever possible, because they are more
  dnl efficient than the system library functions (if they exist).
  case "$gl_cv_func_signbit_builtins" in
    *yes)
      REPLACE_SIGNBIT_USING_BUILTINS=1
      ;;
    *)
      case "$gl_cv_func_signbit" in
        *yes) ;;
        *)
          dnl REPLACE_SIGNBIT=1 makes sure the signbit[fdl] functions get built.
          REPLACE_SIGNBIT=1
          ;;
      esac
      ;;
  esac
  dnl On Solaris 10, with CC in C++ mode, signbit is not available although
  dnl is with cc in C mode. This cannot be worked around by defining
  dnl _XOPEN_SOURCE=600, because the latter does not work in C++ mode on
  dnl Solaris 11.0. Therefore use the replacement functions on Solaris.
  case "$host_os" in
    solaris*)
      REPLACE_SIGNBIT=1
      ;;
  esac
  if test $REPLACE_SIGNBIT = 1; then
    gl_FLOAT_SIGN_LOCATION
    gl_DOUBLE_SIGN_LOCATION
    gl_LONG_DOUBLE_SIGN_LOCATION
    if test "$gl_cv_cc_float_signbit" = unknown; then
      dnl Test whether copysignf() is declared.
      AC_CHECK_DECLS([copysignf], , , [[#include <math.h>]])
      if test "$ac_cv_have_decl_copysignf" = yes; then
        dnl Test whether copysignf() can be used without libm.
        AC_CACHE_CHECK([whether copysignf can be used without linking with libm],
          [gl_cv_func_copysignf_no_libm],
          [
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[#include <math.h>
                   float x, y;]],
                 [[return copysignf (x, y) < 0;]])],
              [gl_cv_func_copysignf_no_libm=yes],
              [gl_cv_func_copysignf_no_libm=no])
          ])
        if test $gl_cv_func_copysignf_no_libm = yes; then
          AC_DEFINE([HAVE_COPYSIGNF_IN_LIBC], [1],
            [Define if the copysignf function is declared in <math.h> and available in libc.])
        fi
      fi
    fi
    if test "$gl_cv_cc_double_signbit" = unknown; then
      dnl Test whether copysign() is declared.
      AC_CHECK_DECLS([copysign], , , [[#include <math.h>]])
      if test "$ac_cv_have_decl_copysign" = yes; then
        dnl Test whether copysign() can be used without libm.
        AC_CACHE_CHECK([whether copysign can be used without linking with libm],
          [gl_cv_func_copysign_no_libm],
          [
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[#include <math.h>
                   double x, y;]],
                 [[return copysign (x, y) < 0;]])],
              [gl_cv_func_copysign_no_libm=yes],
              [gl_cv_func_copysign_no_libm=no])
          ])
        if test $gl_cv_func_copysign_no_libm = yes; then
          AC_DEFINE([HAVE_COPYSIGN_IN_LIBC], [1],
            [Define if the copysign function is declared in <math.h> and available in libc.])
        fi
      fi
    fi
    if test "$gl_cv_cc_long_double_signbit" = unknown; then
      dnl Test whether copysignl() is declared.
      AC_CHECK_DECLS([copysignl], , , [[#include <math.h>]])
      if test "$ac_cv_have_decl_copysignl" = yes; then
        dnl Test whether copysignl() can be used without libm.
        AC_CACHE_CHECK([whether copysignl can be used without linking with libm],
          [gl_cv_func_copysignl_no_libm],
          [
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[#include <math.h>
                   long double x, y;]],
                 [[return copysignl (x, y) < 0;]])],
              [gl_cv_func_copysignl_no_libm=yes],
              [gl_cv_func_copysignl_no_libm=no])
          ])
        if test $gl_cv_func_copysignl_no_libm = yes; then
          AC_DEFINE([HAVE_COPYSIGNL_IN_LIBC], [1],
            [Define if the copysignl function is declared in <math.h> and available in libc.])
        fi
      fi
    fi
  fi
])
m4trace:m4/signbit.m4:180: -1- AC_DEFUN([gl_SIGNBIT_TEST_PROGRAM], [[
/* Global variables.
   Needed because GCC 4 constant-folds __builtin_signbitl (literal)
   but cannot constant-fold            __builtin_signbitl (variable).  */
float vf;
double vd;
long double vl;
int main ()
{
/* HP cc on HP-UX 10.20 has a bug with the constant expression -0.0.
   So we use -p0f and -p0d instead.  */
float p0f = 0.0f;
float m0f = -p0f;
double p0d = 0.0;
double m0d = -p0d;
/* On HP-UX 10.20, negating 0.0L does not yield -0.0L.
   So we use another constant expression instead.
   But that expression does not work on other platforms, such as when
   cross-compiling to PowerPC on Mac OS X 10.5.  */
long double p0l = 0.0L;
#if defined __hpux || defined __sgi
long double m0l = -LDBL_MIN * LDBL_MIN;
#else
long double m0l = -p0l;
#endif
  int result = 0;
  if (signbit (vf)) /* link check */
    vf++;
  {
    float plus_inf = 1.0f / p0f;
    float minus_inf = -1.0f / p0f;
    if (!(!signbit (255.0f)
          && signbit (-255.0f)
          && !signbit (p0f)
          && (memcmp (&m0f, &p0f, sizeof (float)) == 0 || signbit (m0f))
          && !signbit (plus_inf)
          && signbit (minus_inf)))
      result |= 1;
  }
  if (signbit (vd)) /* link check */
    vd++;
  {
    double plus_inf = 1.0 / p0d;
    double minus_inf = -1.0 / p0d;
    if (!(!signbit (255.0)
          && signbit (-255.0)
          && !signbit (p0d)
          && (memcmp (&m0d, &p0d, sizeof (double)) == 0 || signbit (m0d))
          && !signbit (plus_inf)
          && signbit (minus_inf)))
      result |= 2;
  }
  if (signbit (vl)) /* link check */
    vl++;
  {
    long double plus_inf = 1.0L / p0l;
    long double minus_inf = -1.0L / p0l;
    if (signbit (255.0L))
      result |= 4;
    if (!signbit (-255.0L))
      result |= 4;
    if (signbit (p0l))
      result |= 8;
    if (!(memcmp (&m0l, &p0l, sizeof (long double)) == 0 || signbit (m0l)))
      result |= 16;
    if (signbit (plus_inf))
      result |= 32;
    if (!signbit (minus_inf))
      result |= 64;
  }
  return result;
}
]])
m4trace:m4/signbit.m4:254: -1- AC_DEFUN([gl_FLOAT_SIGN_LOCATION], [
  gl_FLOATTYPE_SIGN_LOCATION([float], [gl_cv_cc_float_signbit], [f], [FLT])
])
m4trace:m4/signbit.m4:259: -1- AC_DEFUN([gl_DOUBLE_SIGN_LOCATION], [
  gl_FLOATTYPE_SIGN_LOCATION([double], [gl_cv_cc_double_signbit], [], [DBL])
])
m4trace:m4/signbit.m4:264: -1- AC_DEFUN([gl_LONG_DOUBLE_SIGN_LOCATION], [
  gl_FLOATTYPE_SIGN_LOCATION([long double], [gl_cv_cc_long_double_signbit], [L], [LDBL])
])
m4trace:m4/signbit.m4:269: -1- AC_DEFUN([gl_FLOATTYPE_SIGN_LOCATION], [
  AC_CACHE_CHECK([where to find the sign bit in a '$1'],
    [$2],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stddef.h>
#include <stdio.h>
#define NWORDS \
  ((sizeof ($1) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { $1 value; unsigned int word[NWORDS]; }
        memory_float;
static memory_float plus = { 1.0$3 };
static memory_float minus = { -1.0$3 };
int main ()
{
  size_t j, k, i;
  unsigned int m;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  /* Find the different bit.  */
  k = 0; m = 0;
  for (j = 0; j < NWORDS; j++)
    {
      unsigned int x = plus.word[j] ^ minus.word[j];
      if ((x & (x - 1)) || (x && m))
        {
          /* More than one bit difference.  */
          fprintf (fp, "unknown");
          fclose (fp);
          return 2;
        }
      if (x)
        {
          k = j;
          m = x;
        }
    }
  if (m == 0)
    {
      /* No difference.  */
      fprintf (fp, "unknown");
      fclose (fp);
      return 3;
    }
  /* Now m = plus.word[k] ^ ~minus.word[k].  */
  if (plus.word[k] & ~minus.word[k])
    {
      /* Oh? The sign bit is set in the positive and cleared in the negative
         numbers?  */
      fprintf (fp, "unknown");
      fclose (fp);
      return 4;
    }
  for (i = 0; ; i++)
    if ((m >> i) & 1)
      break;
  fprintf (fp, "word %d bit %d", (int) k, (int) i);
  if (fclose (fp) != 0)
    return 5;
  return 0;
}
        ]])],
        [$2=`cat conftest.out`],
        [$2="unknown"],
        [
          dnl When cross-compiling, we don't know. It depends on the
          dnl ABI and compiler version. There are too many cases.
          $2="unknown"
        ])
      rm -f conftest.out
    ])
  case "$$2" in
    word*bit*)
      word=`echo "$$2" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$$2" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([$4][_SIGNBIT_WORD], [$word],
        [Define as the word index where to find the sign of '$1'.])
      AC_DEFINE_UNQUOTED([$4][_SIGNBIT_BIT], [$bit],
        [Define as the bit index in the word where to find the sign of '$1'.])
      ;;
  esac
])
m4trace:m4/signbit.m4:357: -1- AC_DEFUN([gl_FLOAT_SIGNBIT_CODE], [
  gl_FLOATTYPE_SIGNBIT_CODE([float], [f], [f])
])
m4trace:m4/signbit.m4:364: -1- AC_DEFUN([gl_DOUBLE_SIGNBIT_CODE], [
  gl_FLOATTYPE_SIGNBIT_CODE([double], [d], [])
])
m4trace:m4/signbit.m4:371: -1- AC_DEFUN([gl_LONG_DOUBLE_SIGNBIT_CODE], [
  gl_FLOATTYPE_SIGNBIT_CODE([long double], [l], [L])
])
m4trace:m4/signbit.m4:376: -1- AC_DEFUN([gl_FLOATTYPE_SIGNBIT_CODE], [[
static int
signbit$2 ($1 value)
{
  typedef union { $1 f; unsigned char b[sizeof ($1)]; } float_union;
  static float_union plus_one = { 1.0$3 };   /* unused bits are zero here */
  static float_union minus_one = { -1.0$3 }; /* unused bits are zero here */
  /* Compute the sign bit mask as the XOR of plus_one and minus_one.  */
  float_union u;
  unsigned int i;
  u.f = value;
  for (i = 0; i < sizeof ($1); i++)
    if (u.b[i] & (plus_one.b[i] ^ minus_one.b[i]))
      return 1;
  return 0;
}
]])
m4trace:m4/size_max.m4:11: -1- AC_DEFUN([gl_SIZE_MAX], [
  AC_CHECK_HEADERS([stdint.h])
  dnl First test whether the system already has SIZE_MAX.
  AC_CACHE_CHECK([for SIZE_MAX], [gl_cv_size_max], [
    gl_cv_size_max=no
    AC_EGREP_CPP([Found it], [
#include <limits.h>
#if HAVE_STDINT_H
#include <stdint.h>
#endif
#ifdef SIZE_MAX
Found it
#endif
], [gl_cv_size_max=yes])
    if test $gl_cv_size_max != yes; then
      dnl Define it ourselves. Here we assume that the type 'size_t' is not wider
      dnl than the type 'unsigned long'. Try hard to find a definition that can
      dnl be used in a preprocessor #if, i.e. doesn't contain a cast.
      AC_COMPUTE_INT([size_t_bits_minus_1], [sizeof (size_t) * CHAR_BIT - 1],
        [#include <stddef.h>
#include <limits.h>], [size_t_bits_minus_1=])
      AC_COMPUTE_INT([fits_in_uint], [sizeof (size_t) <= sizeof (unsigned int)],
        [#include <stddef.h>], [fits_in_uint=])
      if test -n "$size_t_bits_minus_1" && test -n "$fits_in_uint"; then
        if test $fits_in_uint = 1; then
          dnl Even though SIZE_MAX fits in an unsigned int, it must be of type
          dnl 'unsigned long' if the type 'size_t' is the same as 'unsigned long'.
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <stddef.h>
                 extern size_t foo;
                 extern unsigned long foo;
               ]],
               [[]])],
            [fits_in_uint=0])
        fi
        dnl We cannot use 'expr' to simplify this expression, because 'expr'
        dnl works only with 'long' integers in the host environment, while we
        dnl might be cross-compiling from a 32-bit platform to a 64-bit platform.
        if test $fits_in_uint = 1; then
          gl_cv_size_max="(((1U << $size_t_bits_minus_1) - 1) * 2 + 1)"
        else
          gl_cv_size_max="(((1UL << $size_t_bits_minus_1) - 1) * 2 + 1)"
        fi
      else
        dnl Shouldn't happen, but who knows...
        gl_cv_size_max='((size_t)~(size_t)0)'
      fi
    fi
  ])
  if test "$gl_cv_size_max" != yes; then
    AC_DEFINE_UNQUOTED([SIZE_MAX], [$gl_cv_size_max],
      [Define as the maximum value of type 'size_t', if the system doesn't define it.])
  fi
  dnl Don't redefine SIZE_MAX in config.h if config.h is re-included after
  dnl <stdint.h>. Remember that the #undef in AH_VERBATIM gets replaced with
  dnl #define by AC_DEFINE_UNQUOTED.
  AH_VERBATIM([SIZE_MAX],
[/* Define as the maximum value of type 'size_t', if the system doesn't define
   it. */
#ifndef SIZE_MAX
# undef SIZE_MAX
#endif])
])
m4trace:m4/socketlib.m4:11: -1- AC_DEFUN([gl_SOCKETLIB], [
  gl_PREREQ_SYS_H_WINSOCK2 dnl for HAVE_WINSOCK2_H
  LIBSOCKET=
  if test $HAVE_WINSOCK2_H = 1; then
    dnl Native Windows API (not Cygwin).
    dnl If the function WSAStartup exists (declared in <winsock2.h> and
    dnl defined through -lws2_32), we need to call it.
    AC_CACHE_CHECK([for WSAStartup],
      [gl_cv_func_wsastartup], [
       gl_save_LIBS="$LIBS"
       LIBS="$LIBS -lws2_32"
       AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#ifdef HAVE_WINSOCK2_H
# include <winsock2.h>
#endif]], [[
            WORD wVersionRequested = MAKEWORD(1, 1);
            WSADATA wsaData;
            int err = WSAStartup(wVersionRequested, &wsaData);
            WSACleanup ();
            ]])
         ],
         [gl_cv_func_wsastartup=yes],
         [gl_cv_func_wsastartup=no])
       LIBS="$gl_save_LIBS"
      ])
    if test "$gl_cv_func_wsastartup" = "yes"; then
      AC_DEFINE([WINDOWS_SOCKETS], [1], [Define if WSAStartup is needed.])
      LIBSOCKET='-lws2_32'
    fi
  else
    dnl Unix API.
    dnl Solaris has most socket functions in libsocket.
    dnl Haiku has most socket functions in libnetwork.
    dnl BeOS has most socket functions in libnet.
    dnl On HP-UX, do NOT link with libxnet, because in 64-bit mode this would
    dnl break code (e.g. in libraries) that invokes accept(), getpeername(),
    dnl getsockname(), getsockopt(), or recvfrom() with a 32-bit addrlen. See
    dnl "man xopen_networking" for details.
    AC_CACHE_CHECK([for library containing setsockopt], [gl_cv_lib_socket], [
      gl_cv_lib_socket=
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
        [],
        [gl_save_LIBS="$LIBS"
         LIBS="$gl_save_LIBS -lsocket"
         AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
           [gl_cv_lib_socket="-lsocket"])
         if test -z "$gl_cv_lib_socket"; then
           LIBS="$gl_save_LIBS -lnetwork"
           AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
             [gl_cv_lib_socket="-lnetwork"])
           if test -z "$gl_cv_lib_socket"; then
             LIBS="$gl_save_LIBS -lnet"
             AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
               [gl_cv_lib_socket="-lnet"])
           fi
         fi
         LIBS="$gl_save_LIBS"
        ])
      if test -z "$gl_cv_lib_socket"; then
        gl_cv_lib_socket="none needed"
      fi
    ])
    if test "$gl_cv_lib_socket" != "none needed"; then
      LIBSOCKET="$gl_cv_lib_socket"
    fi
  fi
  AC_SUBST([LIBSOCKET])
])
m4trace:m4/sockets.m4:7: -1- AC_DEFUN([gl_SOCKETS], [
  AC_REQUIRE([AC_C_INLINE])
  AC_REQUIRE([gl_SOCKETLIB])
  gl_PREREQ_SOCKETS
])
m4trace:m4/sockets.m4:15: -1- AC_DEFUN([gl_PREREQ_SOCKETS], [
  :
])
m4trace:m4/socklen.m4:15: -1- AC_DEFUN([gl_TYPE_SOCKLEN_T], [AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])dnl
   AC_CHECK_TYPE([socklen_t], ,
     [AC_CACHE_CHECK([for socklen_t equivalent],
        [gl_cv_socklen_t_equiv],
        [# Systems have either "struct sockaddr *" or
         # "void *" as the second argument to getpeername
         gl_cv_socklen_t_equiv=
         for arg2 in "struct sockaddr" void; do
           for t in int size_t "unsigned int" "long int" "unsigned long int"; do
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
                 [[#include <sys/types.h>
                   #include <sys/socket.h>

                   int getpeername (int, $arg2 *, $t *);]],
                 [[$t len;
                  getpeername (0, 0, &len);]])],
               [gl_cv_socklen_t_equiv="$t"])
             test "$gl_cv_socklen_t_equiv" != "" && break
           done
           test "$gl_cv_socklen_t_equiv" != "" && break
         done
         if test "$gl_cv_socklen_t_equiv" = ""; then
           AC_MSG_ERROR([Cannot find a type to use in place of socklen_t])
         fi
        ])
      AC_DEFINE_UNQUOTED([socklen_t], [$gl_cv_socklen_t_equiv],
        [type to use in place of socklen_t if not defined])],
     [gl_SOCKET_HEADERS])])
m4trace:m4/socklen.m4:51: -1- AC_DEFUN([gl_SOCKET_HEADERS], [
/* <sys/types.h> is not needed according to POSIX, but the
   <sys/socket.h> in i386-unknown-freebsd4.10 and
   powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#elif HAVE_WS2TCPIP_H
# include <ws2tcpip.h>
#endif
])
m4trace:m4/socklen.m4:67: -1- AC_DEFUN([gl_CHECK_SOCKET_HEADERS], [AC_CHECK_HEADERS_ONCE([sys/socket.h])
   if test $ac_cv_header_sys_socket_h = no; then
     dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
     dnl the check for those headers unconditional; yet cygwin reports
     dnl that the headers are present but cannot be compiled (since on
     dnl cygwin, all socket information should come from sys/socket.h).
     AC_CHECK_HEADERS([ws2tcpip.h])
   fi
  ])
m4trace:m4/ssize_t.m4:10: -1- AC_DEFUN([gt_TYPE_SSIZE_T], [
  AC_CACHE_CHECK([for ssize_t], [gt_cv_ssize_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>]],
          [[int x = sizeof (ssize_t *) + sizeof (ssize_t);
            return !x;]])],
       [gt_cv_ssize_t=yes], [gt_cv_ssize_t=no])])
  if test $gt_cv_ssize_t = no; then
    AC_DEFINE([ssize_t], [int],
              [Define as a signed type of the same size as size_t.])
  fi
])
m4trace:m4/stat-time.m4:20: -1- AC_DEFUN([gl_STAT_TIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])

  AC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec],
    [AC_CACHE_CHECK([whether struct stat.st_atim is of type struct timespec],
       [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec],
       [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
          [[
            #include <sys/types.h>
            #include <sys/stat.h>
            #if HAVE_SYS_TIME_H
            # include <sys/time.h>
            #endif
            #include <time.h>
            struct timespec ts;
            struct stat st;
          ]],
          [[
            st.st_atim = ts;
          ]])],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no])])
     if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then
       AC_DEFINE([TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC], [1],
         [Define to 1 if the type of the st_atim member of a struct stat is
          struct timespec.])
     fi],
    [AC_CHECK_MEMBERS([struct stat.st_atimespec.tv_nsec], [],
       [AC_CHECK_MEMBERS([struct stat.st_atimensec], [],
          [AC_CHECK_MEMBERS([struct stat.st_atim.st__tim.tv_nsec], [], [],
             [#include <sys/types.h>
              #include <sys/stat.h>])],
          [#include <sys/types.h>
           #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat-time.m4:70: -1- AC_DEFUN([gl_STAT_BIRTHTIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CHECK_MEMBERS([struct stat.st_birthtimespec.tv_nsec], [],
    [AC_CHECK_MEMBERS([struct stat.st_birthtimensec], [],
      [AC_CHECK_MEMBERS([struct stat.st_birthtim.tv_nsec], [], [],
         [#include <sys/types.h>
          #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat.m4:9: -1- AC_DEFUN([gl_FUNC_STAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([lstat])
  case "$host_os" in
    mingw*)
      dnl On this platform, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      REPLACE_STAT=1
      ;;
    *)
      dnl AIX 7.1, Solaris 9, mingw64 mistakenly succeed on stat("file/").
      dnl (For mingw, this is due to a broken stat() override in libmingwex.a.)
      dnl FreeBSD 7.2 mistakenly succeeds on stat("link-to-file/").
      AC_CACHE_CHECK([whether stat handles trailing slashes on files],
        [gl_cv_func_stat_file_slash],
        [touch conftest.tmp
         # Assume that if we have lstat, we can also check symlinks.
         if test $ac_cv_func_lstat = yes; then
           ln -s conftest.tmp conftest.lnk
         fi
         AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
             [[#include <sys/stat.h>
]], [[int result = 0;
               struct stat st;
               if (!stat ("conftest.tmp/", &st))
                 result |= 1;
#if HAVE_LSTAT
               if (!stat ("conftest.lnk/", &st))
                 result |= 2;
#endif
               return result;
             ]])],
           [gl_cv_func_stat_file_slash=yes], [gl_cv_func_stat_file_slash=no],
           [case "$host_os" in
                               # Guess yes on Linux systems.
              linux-* | linux) gl_cv_func_stat_file_slash="guessing yes" ;;
                               # Guess yes on glibc systems.
              *-gnu* | gnu*)   gl_cv_func_stat_file_slash="guessing yes" ;;
                               # If we don't know, obey --enable-cross-guesses.
              *)               gl_cv_func_stat_file_slash="$gl_cross_guess_normal" ;;
            esac
           ])
         rm -f conftest.tmp conftest.lnk])
      case $gl_cv_func_stat_file_slash in
        *no)
          REPLACE_STAT=1
          AC_DEFINE([REPLACE_FUNC_STAT_FILE], [1], [Define to 1 if stat needs
            help when passed a file name with a trailing slash]);;
      esac
      case $host_os in
        dnl Solaris stat can return a negative tv_nsec.
        solaris*)
          REPLACE_FSTAT=1 ;;
      esac
      ;;
  esac
])
m4trace:m4/stat.m4:71: -1- AC_DEFUN([gl_PREREQ_STAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/stat.m4:78: -1- AC_DEFUN([gl_PREREQ_STAT_W32], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_CHECK_HEADERS([sdkddkver.h])
      ;;
  esac
])
m4trace:m4/stdalign.m4:10: -1- AC_DEFUN([gl_STDALIGN_H], [
  AC_CACHE_CHECK([for working stdalign.h],
    [gl_cv_header_working_stdalign_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
            #include <stdalign.h>
            #include <stddef.h>

            /* Test that alignof yields a result consistent with offsetof.
               This catches GCC bug 52023
               <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52023>.  */
            #ifdef __cplusplus
               template <class t> struct alignof_helper { char a; t b; };
            # define ao(type) offsetof (alignof_helper<type>, b)
            #else
            # define ao(type) offsetof (struct { char a; type b; }, b)
            #endif
            char test_double[ao (double) % _Alignof (double) == 0 ? 1 : -1];
            char test_long[ao (long int) % _Alignof (long int) == 0 ? 1 : -1];
            char test_alignof[alignof (double) == _Alignof (double) ? 1 : -1];

            /* Test _Alignas only on platforms where gnulib can help.  */
            #if \
                ((defined __cplusplus && 201103 <= __cplusplus) \
                 || (__TINYC__ && defined __attribute__) \
                 || (defined __APPLE__ && defined __MACH__ \
                     ? 4 < __GNUC__ + (1 <= __GNUC_MINOR__) \
                     : __GNUC__) \
                 || (__ia64 && (61200 <= __HP_cc || 61200 <= __HP_aCC)) \
                 || __ICC || 0x590 <= __SUNPRO_C || 0x0600 <= __xlC__ \
                 || 1300 <= _MSC_VER)
              struct alignas_test { char c; char alignas (8) alignas_8; };
              char test_alignas[offsetof (struct alignas_test, alignas_8) == 8
                                ? 1 : -1];
            #endif
          ]])],
       [gl_cv_header_working_stdalign_h=yes],
       [gl_cv_header_working_stdalign_h=no])])

  if test $gl_cv_header_working_stdalign_h = yes; then
    STDALIGN_H=''
  else
    STDALIGN_H='stdalign.h'
  fi

  AC_SUBST([STDALIGN_H])
  AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
])
m4trace:m4/stdbool.m4:12: -1- AC_DEFUN([AM_STDBOOL_H], [
  AC_REQUIRE([AC_CHECK_HEADER_STDBOOL])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On some platforms, <stdbool.h> does not exist or does not conform to C99.
  dnl On Solaris 10 with CC=cc CXX=CC, <stdbool.h> exists but is not usable
  dnl in C++ mode (and no <cstdbool> exists). In this case, we use our
  dnl replacement, also in C mode (for binary compatibility between C and C++).
  if test "$ac_cv_header_stdbool_h" = yes; then
    case "$host_os" in
      solaris*)
        if test -z "$GCC"; then
          STDBOOL_H='stdbool.h'
        else
          STDBOOL_H=''
        fi
        ;;
      *)
        STDBOOL_H=''
        ;;
    esac
  else
    STDBOOL_H='stdbool.h'
  fi
  AC_SUBST([STDBOOL_H])
  AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])

  if test "$ac_cv_type__Bool" = yes; then
    HAVE__BOOL=1
  else
    HAVE__BOOL=0
  fi
  AC_SUBST([HAVE__BOOL])
])
m4trace:m4/stdbool.m4:49: -1- AC_DEFUN([gl_STDBOOL_H], [AM_STDBOOL_H])
m4trace:m4/stdbool.m4:53: -1- AC_DEFUN([AC_CHECK_HEADER_STDBOOL], [AC_CACHE_CHECK([for stdbool.h that conforms to C99],
     [ac_cv_header_stdbool_h],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [[
             #include <stdbool.h>

             #ifdef __cplusplus
              typedef bool Bool;
             #else
              typedef _Bool Bool;
              #ifndef bool
               "error: bool is not defined"
              #endif
              #ifndef false
               "error: false is not defined"
              #endif
              #if false
               "error: false is not 0"
              #endif
              #ifndef true
               "error: true is not defined"
              #endif
              #if true != 1
               "error: true is not 1"
              #endif
             #endif

             #ifndef __bool_true_false_are_defined
              "error: __bool_true_false_are_defined is not defined"
             #endif

             struct s { Bool s: 1; Bool t; bool u: 1; bool v; } s;

             char a[true == 1 ? 1 : -1];
             char b[false == 0 ? 1 : -1];
             char c[__bool_true_false_are_defined == 1 ? 1 : -1];
             char d[(bool) 0.5 == true ? 1 : -1];
             /* See body of main program for 'e'.  */
             char f[(Bool) 0.0 == false ? 1 : -1];
             char g[true];
             char h[sizeof (Bool)];
             char i[sizeof s.t];
             enum { j = false, k = true, l = false * true, m = true * 256 };
             /* The following fails for
                HP aC++/ANSI C B3910B A.05.55 [Dec 04 2003]. */
             Bool n[m];
             char o[sizeof n == m * sizeof n[0] ? 1 : -1];
             char p[-1 - (Bool) 0 < 0 && -1 - (bool) 0 < 0 ? 1 : -1];
             /* Catch a bug in an HP-UX C compiler.  See
                https://gcc.gnu.org/ml/gcc-patches/2003-12/msg02303.html
                https://lists.gnu.org/r/bug-coreutils/2005-11/msg00161.html
              */
             Bool q = true;
             Bool *pq = &q;
             bool *qq = &q;
           ]],
           [[
             bool e = &s;
             *pq |= q; *pq |= ! q;
             *qq |= q; *qq |= ! q;
             /* Refer to every declared value, to avoid compiler optimizations.  */
             return (!a + !b + !c + !d + !e + !f + !g + !h + !i + !!j + !k + !!l
                     + !m + !n + !o + !p + !q + !pq + !qq);
           ]])],
        [ac_cv_header_stdbool_h=yes],
        [ac_cv_header_stdbool_h=no])])
   AC_CHECK_TYPES([_Bool])
])
m4trace:m4/stddef_h.m4:9: -1- AC_DEFUN_ONCE([gl_STDDEF_H], [
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
  AC_REQUIRE([gt_TYPE_WCHAR_T])

  dnl Persuade OpenBSD <stddef.h> to declare max_align_t.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  STDDEF_H=

  dnl Test whether the type max_align_t exists and whether its alignment
  dnl "is as great as is supported by the implementation in all contexts".
  AC_CACHE_CHECK([for good max_align_t],
    [gl_cv_type_max_align_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            unsigned int s = sizeof (max_align_t);
            #if defined __GNUC__ || defined __clang__ || defined __IBM__ALIGNOF__
            int check1[2 * (__alignof__ (double) <= __alignof__ (max_align_t)) - 1];
            int check2[2 * (__alignof__ (long double) <= __alignof__ (max_align_t)) - 1];
            #endif
            typedef struct { char a; max_align_t b; } max_helper;
            typedef struct { char a; long b; } long_helper;
            typedef struct { char a; double b; } double_helper;
            typedef struct { char a; long double b; } long_double_helper;
            int check3[2 * (offsetof (long_helper, b) <= offsetof (max_helper, b)) - 1];
            int check4[2 * (offsetof (double_helper, b) <= offsetof (max_helper, b)) - 1];
            int check5[2 * (offsetof (long_double_helper, b) <= offsetof (max_helper, b)) - 1];
          ]])],
       [gl_cv_type_max_align_t=yes],
       [gl_cv_type_max_align_t=no])
    ])
  if test $gl_cv_type_max_align_t = no; then
    HAVE_MAX_ALIGN_T=0
    STDDEF_H=stddef.h
  fi

  if test $gt_cv_c_wchar_t = no; then
    HAVE_WCHAR_T=0
    STDDEF_H=stddef.h
  fi

  AC_CACHE_CHECK([whether NULL can be used in arbitrary expressions],
    [gl_cv_decl_null_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stddef.h>
      int test[2 * (sizeof NULL == sizeof (void *)) -1];
]])],
      [gl_cv_decl_null_works=yes],
      [gl_cv_decl_null_works=no])])
  if test $gl_cv_decl_null_works = no; then
    REPLACE_NULL=1
    STDDEF_H=stddef.h
  fi

  AC_SUBST([STDDEF_H])
  AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
  if test -n "$STDDEF_H"; then
    gl_NEXT_HEADERS([stddef.h])
  fi
])
m4trace:m4/stddef_h.m4:75: -1- AC_DEFUN([gl_STDDEF_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/stddef_h.m4:85: -1- AC_DEFUN([gl_STDDEF_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
])
m4trace:m4/stddef_h.m4:93: -1- AC_DEFUN([gl_STDDEF_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  REPLACE_NULL=0;                AC_SUBST([REPLACE_NULL])
  HAVE_MAX_ALIGN_T=1;            AC_SUBST([HAVE_MAX_ALIGN_T])
  HAVE_WCHAR_T=1;                AC_SUBST([HAVE_WCHAR_T])
])
m4trace:m4/stdint.m4:12: -1- AC_DEFUN_ONCE([gl_STDINT_H], [
  AC_PREREQ([2.59])dnl
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_LIMITS_H])
  AC_REQUIRE([gt_TYPE_WINT_T])

  dnl For backward compatibility. Some packages may still be testing these
  dnl macros.
  AC_DEFINE([HAVE_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'long long int'.])
  AC_DEFINE([HAVE_UNSIGNED_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'unsigned long long int'.])

  dnl Check for <wchar.h>, in the same way as gl_WCHAR_H does.
  AC_CHECK_HEADERS_ONCE([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  dnl Check for <inttypes.h>.
  AC_CHECK_HEADERS_ONCE([inttypes.h])
  if test $ac_cv_header_inttypes_h = yes; then
    HAVE_INTTYPES_H=1
  else
    HAVE_INTTYPES_H=0
  fi
  AC_SUBST([HAVE_INTTYPES_H])

  dnl Check for <sys/types.h>.
  AC_CHECK_HEADERS_ONCE([sys/types.h])
  if test $ac_cv_header_sys_types_h = yes; then
    HAVE_SYS_TYPES_H=1
  else
    HAVE_SYS_TYPES_H=0
  fi
  AC_SUBST([HAVE_SYS_TYPES_H])

  gl_CHECK_NEXT_HEADERS([stdint.h])
  if test $ac_cv_header_stdint_h = yes; then
    HAVE_STDINT_H=1
  else
    HAVE_STDINT_H=0
  fi
  AC_SUBST([HAVE_STDINT_H])

  dnl Now see whether we need a substitute <stdint.h>.
  if test $ac_cv_header_stdint_h = yes; then
    AC_CACHE_CHECK([whether stdint.h conforms to C99],
      [gl_cv_header_working_stdint_h],
      [gl_cv_header_working_stdint_h=no
       AC_COMPILE_IFELSE([
         AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
/* Dragonfly defines WCHAR_MIN, WCHAR_MAX only in <wchar.h>.  */
#if !(defined WCHAR_MIN && defined WCHAR_MAX)
#error "WCHAR_MIN, WCHAR_MAX not defined in <stdint.h>"
#endif
]
gl_STDINT_INCLUDES
[
#ifdef INT8_MAX
int8_t a1 = INT8_MAX;
int8_t a1min = INT8_MIN;
#endif
#ifdef INT16_MAX
int16_t a2 = INT16_MAX;
int16_t a2min = INT16_MIN;
#endif
#ifdef INT32_MAX
int32_t a3 = INT32_MAX;
int32_t a3min = INT32_MIN;
#endif
#ifdef INT64_MAX
int64_t a4 = INT64_MAX;
int64_t a4min = INT64_MIN;
#endif
#ifdef UINT8_MAX
uint8_t b1 = UINT8_MAX;
#else
typedef int b1[(unsigned char) -1 != 255 ? 1 : -1];
#endif
#ifdef UINT16_MAX
uint16_t b2 = UINT16_MAX;
#endif
#ifdef UINT32_MAX
uint32_t b3 = UINT32_MAX;
#endif
#ifdef UINT64_MAX
uint64_t b4 = UINT64_MAX;
#endif
int_least8_t c1 = INT8_C (0x7f);
int_least8_t c1max = INT_LEAST8_MAX;
int_least8_t c1min = INT_LEAST8_MIN;
int_least16_t c2 = INT16_C (0x7fff);
int_least16_t c2max = INT_LEAST16_MAX;
int_least16_t c2min = INT_LEAST16_MIN;
int_least32_t c3 = INT32_C (0x7fffffff);
int_least32_t c3max = INT_LEAST32_MAX;
int_least32_t c3min = INT_LEAST32_MIN;
int_least64_t c4 = INT64_C (0x7fffffffffffffff);
int_least64_t c4max = INT_LEAST64_MAX;
int_least64_t c4min = INT_LEAST64_MIN;
uint_least8_t d1 = UINT8_C (0xff);
uint_least8_t d1max = UINT_LEAST8_MAX;
uint_least16_t d2 = UINT16_C (0xffff);
uint_least16_t d2max = UINT_LEAST16_MAX;
uint_least32_t d3 = UINT32_C (0xffffffff);
uint_least32_t d3max = UINT_LEAST32_MAX;
uint_least64_t d4 = UINT64_C (0xffffffffffffffff);
uint_least64_t d4max = UINT_LEAST64_MAX;
int_fast8_t e1 = INT_FAST8_MAX;
int_fast8_t e1min = INT_FAST8_MIN;
int_fast16_t e2 = INT_FAST16_MAX;
int_fast16_t e2min = INT_FAST16_MIN;
int_fast32_t e3 = INT_FAST32_MAX;
int_fast32_t e3min = INT_FAST32_MIN;
int_fast64_t e4 = INT_FAST64_MAX;
int_fast64_t e4min = INT_FAST64_MIN;
uint_fast8_t f1 = UINT_FAST8_MAX;
uint_fast16_t f2 = UINT_FAST16_MAX;
uint_fast32_t f3 = UINT_FAST32_MAX;
uint_fast64_t f4 = UINT_FAST64_MAX;
#ifdef INTPTR_MAX
intptr_t g = INTPTR_MAX;
intptr_t gmin = INTPTR_MIN;
#endif
#ifdef UINTPTR_MAX
uintptr_t h = UINTPTR_MAX;
#endif
intmax_t i = INTMAX_MAX;
uintmax_t j = UINTMAX_MAX;

/* Check that SIZE_MAX has the correct type, if possible.  */
#if 201112 <= __STDC_VERSION__
int k = _Generic (SIZE_MAX, size_t: 0);
#elif (2 <= __GNUC__ || 4 <= __clang_major__ || defined __IBM__TYPEOF__ \
       || (0x5110 <= __SUNPRO_C && !__STDC__))
extern size_t k;
extern __typeof__ (SIZE_MAX) k;
#endif

#include <limits.h> /* for CHAR_BIT */
#define TYPE_MINIMUM(t) \
  ((t) ((t) 0 < (t) -1 ? (t) 0 : ~ TYPE_MAXIMUM (t)))
#define TYPE_MAXIMUM(t) \
  ((t) ((t) 0 < (t) -1 \
        ? (t) -1 \
        : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))
struct s {
  int check_PTRDIFF:
      PTRDIFF_MIN == TYPE_MINIMUM (ptrdiff_t)
      && PTRDIFF_MAX == TYPE_MAXIMUM (ptrdiff_t)
      ? 1 : -1;
  /* Detect bug in FreeBSD 6.0/ia64 and FreeBSD 13.0/arm64.  */
  int check_SIG_ATOMIC:
      SIG_ATOMIC_MIN == TYPE_MINIMUM (sig_atomic_t)
      && SIG_ATOMIC_MAX == TYPE_MAXIMUM (sig_atomic_t)
      ? 1 : -1;
  int check_SIZE: SIZE_MAX == TYPE_MAXIMUM (size_t) ? 1 : -1;
  int check_WCHAR:
      WCHAR_MIN == TYPE_MINIMUM (wchar_t)
      && WCHAR_MAX == TYPE_MAXIMUM (wchar_t)
      ? 1 : -1;
  /* Detect bug in mingw.  */
  int check_WINT:
      WINT_MIN == TYPE_MINIMUM (wint_t)
      && WINT_MAX == TYPE_MAXIMUM (wint_t)
      ? 1 : -1;

  /* Detect bugs in glibc 2.4 and Solaris 10 stdint.h, among others.  */
  int check_UINT8_C:
        (-1 < UINT8_C (0)) == (-1 < (uint_least8_t) 0) ? 1 : -1;
  int check_UINT16_C:
        (-1 < UINT16_C (0)) == (-1 < (uint_least16_t) 0) ? 1 : -1;

  /* Detect bugs in OpenBSD 3.9 stdint.h.  */
#ifdef UINT8_MAX
  int check_uint8: (uint8_t) -1 == UINT8_MAX ? 1 : -1;
#endif
#ifdef UINT16_MAX
  int check_uint16: (uint16_t) -1 == UINT16_MAX ? 1 : -1;
#endif
#ifdef UINT32_MAX
  int check_uint32: (uint32_t) -1 == UINT32_MAX ? 1 : -1;
#endif
#ifdef UINT64_MAX
  int check_uint64: (uint64_t) -1 == UINT64_MAX ? 1 : -1;
#endif
  int check_uint_least8: (uint_least8_t) -1 == UINT_LEAST8_MAX ? 1 : -1;
  int check_uint_least16: (uint_least16_t) -1 == UINT_LEAST16_MAX ? 1 : -1;
  int check_uint_least32: (uint_least32_t) -1 == UINT_LEAST32_MAX ? 1 : -1;
  int check_uint_least64: (uint_least64_t) -1 == UINT_LEAST64_MAX ? 1 : -1;
  int check_uint_fast8: (uint_fast8_t) -1 == UINT_FAST8_MAX ? 1 : -1;
  int check_uint_fast16: (uint_fast16_t) -1 == UINT_FAST16_MAX ? 1 : -1;
  int check_uint_fast32: (uint_fast32_t) -1 == UINT_FAST32_MAX ? 1 : -1;
  int check_uint_fast64: (uint_fast64_t) -1 == UINT_FAST64_MAX ? 1 : -1;
  int check_uintptr: (uintptr_t) -1 == UINTPTR_MAX ? 1 : -1;
  int check_uintmax: (uintmax_t) -1 == UINTMAX_MAX ? 1 : -1;
  int check_size: (size_t) -1 == SIZE_MAX ? 1 : -1;
};
         ]])],
         [dnl Determine whether the various *_MIN, *_MAX macros are usable
          dnl in preprocessor expression. We could do it by compiling a test
          dnl program for each of these macros. It is faster to run a program
          dnl that inspects the macro expansion.
          dnl This detects a bug on HP-UX 11.23/ia64.
          AC_RUN_IFELSE([
            AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
#include <stdio.h>
#include <string.h>
#define MVAL(macro) MVAL1(macro)
#define MVAL1(expression) #expression
static const char *macro_values[] =
  {
#ifdef INT8_MAX
    MVAL (INT8_MAX),
#endif
#ifdef INT16_MAX
    MVAL (INT16_MAX),
#endif
#ifdef INT32_MAX
    MVAL (INT32_MAX),
#endif
#ifdef INT64_MAX
    MVAL (INT64_MAX),
#endif
#ifdef UINT8_MAX
    MVAL (UINT8_MAX),
#endif
#ifdef UINT16_MAX
    MVAL (UINT16_MAX),
#endif
#ifdef UINT32_MAX
    MVAL (UINT32_MAX),
#endif
#ifdef UINT64_MAX
    MVAL (UINT64_MAX),
#endif
    NULL
  };
]], [[
  const char **mv;
  for (mv = macro_values; *mv != NULL; mv++)
    {
      const char *value = *mv;
      /* Test whether it looks like a cast expression.  */
      if (strncmp (value, "((unsigned int)"/*)*/, 15) == 0
          || strncmp (value, "((unsigned short)"/*)*/, 17) == 0
          || strncmp (value, "((unsigned char)"/*)*/, 16) == 0
          || strncmp (value, "((int)"/*)*/, 6) == 0
          || strncmp (value, "((signed short)"/*)*/, 15) == 0
          || strncmp (value, "((signed char)"/*)*/, 14) == 0)
        return mv - macro_values + 1;
    }
  return 0;
]])],
              [gl_cv_header_working_stdint_h=yes],
              [],
              [case "$host_os" in
                         # Guess yes on native Windows.
                 mingw*) gl_cv_header_working_stdint_h="guessing yes" ;;
                         # In general, assume it works.
                 *)      gl_cv_header_working_stdint_h="guessing yes" ;;
               esac
              ])
         ])
      ])
  fi

  HAVE_C99_STDINT_H=0
  HAVE_SYS_BITYPES_H=0
  HAVE_SYS_INTTYPES_H=0
  STDINT_H=stdint.h
  case "$gl_cv_header_working_stdint_h" in
    *yes)
      HAVE_C99_STDINT_H=1
      dnl Now see whether the system <stdint.h> works without
      dnl __STDC_CONSTANT_MACROS/__STDC_LIMIT_MACROS defined.
      dnl If not, there would be problems when stdint.h is included from C++.
      AC_CACHE_CHECK([whether stdint.h works without ISO C predefines],
        [gl_cv_header_stdint_without_STDC_macros],
        [gl_cv_header_stdint_without_STDC_macros=no
         AC_COMPILE_IFELSE([
           AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
intmax_t im = INTMAX_MAX;
int32_t i32 = INT32_C (0x7fffffff);
           ]])],
           [gl_cv_header_stdint_without_STDC_macros=yes])
        ])

      if test $gl_cv_header_stdint_without_STDC_macros = no; then
        AC_DEFINE([__STDC_CONSTANT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
        AC_DEFINE([__STDC_LIMIT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
      fi
      AC_CACHE_CHECK([whether stdint.h has UINTMAX_WIDTH etc.],
        [gl_cv_header_stdint_width],
        [gl_cv_header_stdint_width=no
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
              /* Work if build is not clean.  */
              #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1
              #ifndef __STDC_WANT_IEC_60559_BFP_EXT__
               #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
              #endif
              #include <stdint.h>
              ]gl_STDINT_INCLUDES[
              int iw = UINTMAX_WIDTH;
              ]])],
           [gl_cv_header_stdint_width=yes])])
      if test "$gl_cv_header_stdint_width" = yes; then
        STDINT_H=
      fi
      ;;
    *)
      dnl Check for <sys/inttypes.h>, and for
      dnl <sys/bitypes.h> (used in Linux libc4 >= 4.6.7 and libc5).
      AC_CHECK_HEADERS([sys/inttypes.h sys/bitypes.h])
      if test $ac_cv_header_sys_inttypes_h = yes; then
        HAVE_SYS_INTTYPES_H=1
      fi
      if test $ac_cv_header_sys_bitypes_h = yes; then
        HAVE_SYS_BITYPES_H=1
      fi
      gl_STDINT_TYPE_PROPERTIES
      ;;
  esac

  dnl The substitute stdint.h needs the substitute limit.h's _GL_INTEGER_WIDTH.
  gl_REPLACE_LIMITS_H

  AC_SUBST([HAVE_C99_STDINT_H])
  AC_SUBST([HAVE_SYS_BITYPES_H])
  AC_SUBST([HAVE_SYS_INTTYPES_H])
  AC_SUBST([STDINT_H])
  AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
])
m4trace:m4/stdint.m4:373: -1- AC_DEFUN([gl_STDINT_BITSIZEOF], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to the number of bits in type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for bit size of $gltype], [gl_cv_bitsizeof_${gltype}],
      [AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT],
         [$2
#include <limits.h>], [result=unknown])
       eval gl_cv_bitsizeof_${gltype}=\$result
      ])
    eval result=\$gl_cv_bitsizeof_${gltype}
    if test $result = unknown; then
      dnl Use a nonempty default, because some compilers, such as IRIX 5 cc,
      dnl do a syntax check even on unused #if conditions and give an error
      dnl on valid C code like this:
      dnl   #if 0
      dnl   # if  > 32
      dnl   # endif
      dnl   #endif
      result=0
    fi
    GLTYPE=`echo "$gltype" | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    AC_DEFINE_UNQUOTED([BITSIZEOF_${GLTYPE}], [$result])
    eval BITSIZEOF_${GLTYPE}=\$result
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:411: -1- AC_DEFUN([gl_CHECK_TYPES_SIGNED], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to 1 if ']gltype[' is a signed integer type.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([whether $gltype is signed], [gl_cv_type_${gltype}_signed],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([$2[
            int verify[2 * (($gltype) -1 < ($gltype) 0) - 1];]])],
         result=yes, result=no)
       eval gl_cv_type_${gltype}_signed=\$result
      ])
    eval result=\$gl_cv_type_${gltype}_signed
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    if test "$result" = yes; then
      AC_DEFINE_UNQUOTED([HAVE_SIGNED_${GLTYPE}], [1])
      eval HAVE_SIGNED_${GLTYPE}=1
    else
      eval HAVE_SIGNED_${GLTYPE}=0
    fi
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:444: -1- AC_DEFUN([gl_INTEGER_TYPE_SUFFIX], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX],
       [Define to l, ll, u, ul, ull, etc., as suitable for
        constants of type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for $gltype integer literal suffix],
      [gl_cv_type_${gltype}_suffix],
      [eval gl_cv_type_${gltype}_suffix=no
       eval result=\$gl_cv_type_${gltype}_signed
       if test "$result" = yes; then
         glsufu=
       else
         glsufu=u
       fi
       for glsuf in "$glsufu" ${glsufu}l ${glsufu}ll ${glsufu}i64; do
         case $glsuf in
           '')  gltype1='int';;
           l)   gltype1='long int';;
           ll)  gltype1='long long int';;
           i64) gltype1='__int64';;
           u)   gltype1='unsigned int';;
           ul)  gltype1='unsigned long int';;
           ull) gltype1='unsigned long long int';;
           ui64)gltype1='unsigned __int64';;
         esac
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([$2[
              extern $gltype foo;
              extern $gltype1 foo;]])],
           [eval gl_cv_type_${gltype}_suffix=\$glsuf])
         eval result=\$gl_cv_type_${gltype}_suffix
         test "$result" != no && break
       done])
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    eval result=\$gl_cv_type_${gltype}_suffix
    test "$result" = no && result=
    eval ${GLTYPE}_SUFFIX=\$result
    AC_DEFINE_UNQUOTED([${GLTYPE}_SUFFIX], [$result])
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX])])
])
m4trace:m4/stdint.m4:494: -1- AC_DEFUN([gl_STDINT_INCLUDES], [[
  #include <stddef.h>
  #include <signal.h>
  #if HAVE_WCHAR_H
  # include <wchar.h>
  #endif
]])
m4trace:m4/stdint.m4:506: -1- AC_DEFUN([gl_STDINT_TYPE_PROPERTIES], [
  AC_REQUIRE([gl_MULTIARCH])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_STDINT_BITSIZEOF([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_cv_type_ptrdiff_t_signed=yes
  gl_cv_type_size_t_signed=no
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])

  dnl If wint_t is smaller than 'int', it cannot satisfy the ISO C 99
  dnl requirement that wint_t is "unchanged by default argument promotions".
  dnl In this case gnulib's <wchar.h> and <wctype.h> override wint_t.
  dnl Set the variable BITSIZEOF_WINT_T accordingly.
  if test $GNULIBHEADERS_OVERRIDE_WINT_T = 1; then
    BITSIZEOF_WINT_T=32
  fi
])
m4trace:m4/stdint_h.m4:12: -1- AC_DEFUN([gl_AC_HEADER_STDINT_H], [
  AC_CACHE_CHECK([for stdint.h], [gl_cv_header_stdint_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
            #include <stdint.h>]],
          [[uintmax_t i = (uintmax_t) -1; return !i;]])],
       [gl_cv_header_stdint_h=yes],
       [gl_cv_header_stdint_h=no])])
  if test $gl_cv_header_stdint_h = yes; then
    AC_DEFINE_UNQUOTED([HAVE_STDINT_H_WITH_UINTMAX], [1],
      [Define if <stdint.h> exists, doesn't clash with <sys/types.h>,
       and declares uintmax_t. ])
  fi
])
m4trace:m4/stdio_h.m4:7: -1- AC_DEFUN_ONCE([gl_STDIO_H], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AH_VERBATIM([MINGW_ANSI_STDIO],
[/* Use GNU style printf and scanf.  */
#ifndef __USE_MINGW_ANSI_STDIO
# undef __USE_MINGW_ANSI_STDIO
#endif
])
  AC_DEFINE([__USE_MINGW_ANSI_STDIO])
  gl_NEXT_HEADERS([stdio.h])

  dnl Determine whether __USE_MINGW_ANSI_STDIO makes printf and
  dnl inttypes.h behave like gnu instead of system; we must give our
  dnl printf wrapper the right attribute to match.
  AC_CACHE_CHECK([which flavor of printf attribute matches inttypes macros],
    [gl_cv_func_printf_attribute_flavor],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
       #define __STDC_FORMAT_MACROS 1
       #include <stdio.h>
       #include <inttypes.h>
       /* For non-mingw systems, compilation will trivially succeed.
          For mingw, compilation will succeed for older mingw (system
          printf, "I64d") and fail for newer mingw (gnu printf, "lld"). */
       #if (defined _WIN32 && ! defined __CYGWIN__) && \
         (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 4))
       extern char PRIdMAX_probe[sizeof PRIdMAX == sizeof "I64d" ? 1 : -1];
       #endif
      ]])], [gl_cv_func_printf_attribute_flavor=system],
      [gl_cv_func_printf_attribute_flavor=gnu])])
  if test "$gl_cv_func_printf_attribute_flavor" = gnu; then
    AC_DEFINE([GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU], [1],
      [Define to 1 if printf and friends should be labeled with
       attribute "__gnu_printf__" instead of "__printf__"])
  fi

  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-read.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_NONBLOCKING
  dnl or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_READ_FUNCS=1
      AC_LIBOBJ([stdio-read])
    fi
  ])

  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-write.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_SIGPIPE or
  dnl GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
      AC_LIBOBJ([stdio-write])
    fi
  ])
  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-write.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_NONBLOCKING
  dnl or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
      AC_LIBOBJ([stdio-write])
    fi
  ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by both C89 and C11.
  gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([fcloseall])
  if test $ac_cv_have_decl_fcloseall = no; then
    HAVE_DECL_FCLOSEALL=0
  fi
])
m4trace:m4/stdio_h.m4:100: -1- AC_DEFUN([gl_STDIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdio_h.m4:112: -1- AC_DEFUN([gl_STDIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
])
m4trace:m4/stdio_h.m4:180: -1- AC_DEFUN([gl_STDIO_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_FCLOSEALL=1;         AC_SUBST([HAVE_DECL_FCLOSEALL])
  HAVE_DECL_FPURGE=1;            AC_SUBST([HAVE_DECL_FPURGE])
  HAVE_DECL_FSEEKO=1;            AC_SUBST([HAVE_DECL_FSEEKO])
  HAVE_DECL_FTELLO=1;            AC_SUBST([HAVE_DECL_FTELLO])
  HAVE_DECL_GETDELIM=1;          AC_SUBST([HAVE_DECL_GETDELIM])
  HAVE_DECL_GETLINE=1;           AC_SUBST([HAVE_DECL_GETLINE])
  HAVE_DECL_OBSTACK_PRINTF=1;    AC_SUBST([HAVE_DECL_OBSTACK_PRINTF])
  HAVE_DECL_SNPRINTF=1;          AC_SUBST([HAVE_DECL_SNPRINTF])
  HAVE_DECL_VSNPRINTF=1;         AC_SUBST([HAVE_DECL_VSNPRINTF])
  HAVE_DPRINTF=1;                AC_SUBST([HAVE_DPRINTF])
  HAVE_FSEEKO=1;                 AC_SUBST([HAVE_FSEEKO])
  HAVE_FTELLO=1;                 AC_SUBST([HAVE_FTELLO])
  HAVE_PCLOSE=1;                 AC_SUBST([HAVE_PCLOSE])
  HAVE_POPEN=1;                  AC_SUBST([HAVE_POPEN])
  HAVE_RENAMEAT=1;               AC_SUBST([HAVE_RENAMEAT])
  HAVE_VASPRINTF=1;              AC_SUBST([HAVE_VASPRINTF])
  HAVE_VDPRINTF=1;               AC_SUBST([HAVE_VDPRINTF])
  REPLACE_DPRINTF=0;             AC_SUBST([REPLACE_DPRINTF])
  REPLACE_FCLOSE=0;              AC_SUBST([REPLACE_FCLOSE])
  REPLACE_FDOPEN=0;              AC_SUBST([REPLACE_FDOPEN])
  REPLACE_FFLUSH=0;              AC_SUBST([REPLACE_FFLUSH])
  REPLACE_FOPEN=0;               AC_SUBST([REPLACE_FOPEN])
  REPLACE_FPRINTF=0;             AC_SUBST([REPLACE_FPRINTF])
  REPLACE_FPURGE=0;              AC_SUBST([REPLACE_FPURGE])
  REPLACE_FREOPEN=0;             AC_SUBST([REPLACE_FREOPEN])
  REPLACE_FSEEK=0;               AC_SUBST([REPLACE_FSEEK])
  REPLACE_FSEEKO=0;              AC_SUBST([REPLACE_FSEEKO])
  REPLACE_FTELL=0;               AC_SUBST([REPLACE_FTELL])
  REPLACE_FTELLO=0;              AC_SUBST([REPLACE_FTELLO])
  REPLACE_GETDELIM=0;            AC_SUBST([REPLACE_GETDELIM])
  REPLACE_GETLINE=0;             AC_SUBST([REPLACE_GETLINE])
  REPLACE_OBSTACK_PRINTF=0;      AC_SUBST([REPLACE_OBSTACK_PRINTF])
  REPLACE_PERROR=0;              AC_SUBST([REPLACE_PERROR])
  REPLACE_POPEN=0;               AC_SUBST([REPLACE_POPEN])
  REPLACE_PRINTF=0;              AC_SUBST([REPLACE_PRINTF])
  REPLACE_REMOVE=0;              AC_SUBST([REPLACE_REMOVE])
  REPLACE_RENAME=0;              AC_SUBST([REPLACE_RENAME])
  REPLACE_RENAMEAT=0;            AC_SUBST([REPLACE_RENAMEAT])
  REPLACE_SNPRINTF=0;            AC_SUBST([REPLACE_SNPRINTF])
  REPLACE_SPRINTF=0;             AC_SUBST([REPLACE_SPRINTF])
  REPLACE_STDIO_READ_FUNCS=0;    AC_SUBST([REPLACE_STDIO_READ_FUNCS])
  REPLACE_STDIO_WRITE_FUNCS=0;   AC_SUBST([REPLACE_STDIO_WRITE_FUNCS])
  REPLACE_TMPFILE=0;             AC_SUBST([REPLACE_TMPFILE])
  REPLACE_VASPRINTF=0;           AC_SUBST([REPLACE_VASPRINTF])
  REPLACE_VDPRINTF=0;            AC_SUBST([REPLACE_VDPRINTF])
  REPLACE_VFPRINTF=0;            AC_SUBST([REPLACE_VFPRINTF])
  REPLACE_VPRINTF=0;             AC_SUBST([REPLACE_VPRINTF])
  REPLACE_VSNPRINTF=0;           AC_SUBST([REPLACE_VSNPRINTF])
  REPLACE_VSPRINTF=0;            AC_SUBST([REPLACE_VSPRINTF])
])
m4trace:m4/stdlib_h.m4:7: -1- AC_DEFUN_ONCE([gl_STDLIB_H], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  gl_NEXT_HEADERS([stdlib.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getsubopt grantpt
    initstate initstate_r mbtowc mkdtemp mkostemp mkostemps mkstemp mkstemps
    posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([ecvt])
  if test $ac_cv_have_decl_ecvt = no; then
    HAVE_DECL_ECVT=0
  fi
  AC_CHECK_DECLS_ONCE([fcvt])
  if test $ac_cv_have_decl_fcvt = no; then
    HAVE_DECL_FCVT=0
  fi
  AC_CHECK_DECLS_ONCE([gcvt])
  if test $ac_cv_have_decl_gcvt = no; then
    HAVE_DECL_GCVT=0
  fi
])
m4trace:m4/stdlib_h.m4:53: -1- AC_DEFUN([gl_STDLIB_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdlib_h.m4:65: -1- AC_DEFUN([gl_STDLIB_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
])
m4trace:m4/stdlib_h.m4:119: -1- AC_DEFUN([gl_STDLIB_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE__EXIT=1;              AC_SUBST([HAVE__EXIT])
  HAVE_ALIGNED_ALLOC=1;      AC_SUBST([HAVE_ALIGNED_ALLOC])
  HAVE_ATOLL=1;              AC_SUBST([HAVE_ATOLL])
  HAVE_CANONICALIZE_FILE_NAME=1;  AC_SUBST([HAVE_CANONICALIZE_FILE_NAME])
  HAVE_DECL_ECVT=1;          AC_SUBST([HAVE_DECL_ECVT])
  HAVE_DECL_FCVT=1;          AC_SUBST([HAVE_DECL_FCVT])
  HAVE_DECL_GCVT=1;          AC_SUBST([HAVE_DECL_GCVT])
  HAVE_DECL_GETLOADAVG=1;    AC_SUBST([HAVE_DECL_GETLOADAVG])
  HAVE_GETSUBOPT=1;          AC_SUBST([HAVE_GETSUBOPT])
  HAVE_GRANTPT=1;            AC_SUBST([HAVE_GRANTPT])
  HAVE_INITSTATE=1;          AC_SUBST([HAVE_INITSTATE])
  HAVE_DECL_INITSTATE=1;     AC_SUBST([HAVE_DECL_INITSTATE])
  HAVE_MBTOWC=1;             AC_SUBST([HAVE_MBTOWC])
  HAVE_MKDTEMP=1;            AC_SUBST([HAVE_MKDTEMP])
  HAVE_MKOSTEMP=1;           AC_SUBST([HAVE_MKOSTEMP])
  HAVE_MKOSTEMPS=1;          AC_SUBST([HAVE_MKOSTEMPS])
  HAVE_MKSTEMP=1;            AC_SUBST([HAVE_MKSTEMP])
  HAVE_MKSTEMPS=1;           AC_SUBST([HAVE_MKSTEMPS])
  HAVE_POSIX_MEMALIGN=1;     AC_SUBST([HAVE_POSIX_MEMALIGN])
  HAVE_POSIX_OPENPT=1;       AC_SUBST([HAVE_POSIX_OPENPT])
  HAVE_PTSNAME=1;            AC_SUBST([HAVE_PTSNAME])
  HAVE_PTSNAME_R=1;          AC_SUBST([HAVE_PTSNAME_R])
  HAVE_QSORT_R=1;            AC_SUBST([HAVE_QSORT_R])
  HAVE_RANDOM=1;             AC_SUBST([HAVE_RANDOM])
  HAVE_RANDOM_H=1;           AC_SUBST([HAVE_RANDOM_H])
  HAVE_RANDOM_R=1;           AC_SUBST([HAVE_RANDOM_R])
  HAVE_REALLOCARRAY=1;       AC_SUBST([HAVE_REALLOCARRAY])
  HAVE_REALPATH=1;           AC_SUBST([HAVE_REALPATH])
  HAVE_RPMATCH=1;            AC_SUBST([HAVE_RPMATCH])
  HAVE_SECURE_GETENV=1;      AC_SUBST([HAVE_SECURE_GETENV])
  HAVE_SETENV=1;             AC_SUBST([HAVE_SETENV])
  HAVE_DECL_SETENV=1;        AC_SUBST([HAVE_DECL_SETENV])
  HAVE_SETSTATE=1;           AC_SUBST([HAVE_SETSTATE])
  HAVE_DECL_SETSTATE=1;      AC_SUBST([HAVE_DECL_SETSTATE])
  HAVE_STRTOD=1;             AC_SUBST([HAVE_STRTOD])
  HAVE_STRTOL=1;             AC_SUBST([HAVE_STRTOL])
  HAVE_STRTOLD=1;            AC_SUBST([HAVE_STRTOLD])
  HAVE_STRTOLL=1;            AC_SUBST([HAVE_STRTOLL])
  HAVE_STRTOUL=1;            AC_SUBST([HAVE_STRTOUL])
  HAVE_STRTOULL=1;           AC_SUBST([HAVE_STRTOULL])
  HAVE_STRUCT_RANDOM_DATA=1; AC_SUBST([HAVE_STRUCT_RANDOM_DATA])
  HAVE_SYS_LOADAVG_H=0;      AC_SUBST([HAVE_SYS_LOADAVG_H])
  HAVE_UNLOCKPT=1;           AC_SUBST([HAVE_UNLOCKPT])
  HAVE_DECL_UNSETENV=1;      AC_SUBST([HAVE_DECL_UNSETENV])
  REPLACE_ALIGNED_ALLOC=0;   AC_SUBST([REPLACE_ALIGNED_ALLOC])
  REPLACE_CALLOC=0;          AC_SUBST([REPLACE_CALLOC])
  REPLACE_CANONICALIZE_FILE_NAME=0;  AC_SUBST([REPLACE_CANONICALIZE_FILE_NAME])
  REPLACE_FREE=0;            AC_SUBST([REPLACE_FREE])
  REPLACE_INITSTATE=0;       AC_SUBST([REPLACE_INITSTATE])
  REPLACE_MALLOC=0;          AC_SUBST([REPLACE_MALLOC])
  REPLACE_MBTOWC=0;          AC_SUBST([REPLACE_MBTOWC])
  REPLACE_MKSTEMP=0;         AC_SUBST([REPLACE_MKSTEMP])
  REPLACE_POSIX_MEMALIGN=0;  AC_SUBST([REPLACE_POSIX_MEMALIGN])
  REPLACE_PTSNAME=0;         AC_SUBST([REPLACE_PTSNAME])
  REPLACE_PTSNAME_R=0;       AC_SUBST([REPLACE_PTSNAME_R])
  REPLACE_PUTENV=0;          AC_SUBST([REPLACE_PUTENV])
  REPLACE_QSORT_R=0;         AC_SUBST([REPLACE_QSORT_R])
  REPLACE_RANDOM=0;          AC_SUBST([REPLACE_RANDOM])
  REPLACE_RANDOM_R=0;        AC_SUBST([REPLACE_RANDOM_R])
  REPLACE_REALLOC=0;         AC_SUBST([REPLACE_REALLOC])
  REPLACE_REALLOCARRAY=0;    AC_SUBST([REPLACE_REALLOCARRAY])
  REPLACE_REALPATH=0;        AC_SUBST([REPLACE_REALPATH])
  REPLACE_SETENV=0;          AC_SUBST([REPLACE_SETENV])
  REPLACE_SETSTATE=0;        AC_SUBST([REPLACE_SETSTATE])
  REPLACE_STRTOD=0;          AC_SUBST([REPLACE_STRTOD])
  REPLACE_STRTOL=0;          AC_SUBST([REPLACE_STRTOL])
  REPLACE_STRTOLD=0;         AC_SUBST([REPLACE_STRTOLD])
  REPLACE_STRTOLL=0;         AC_SUBST([REPLACE_STRTOLL])
  REPLACE_STRTOUL=0;         AC_SUBST([REPLACE_STRTOUL])
  REPLACE_STRTOULL=0;        AC_SUBST([REPLACE_STRTOULL])
  REPLACE_UNSETENV=0;        AC_SUBST([REPLACE_UNSETENV])
  REPLACE_WCTOMB=0;          AC_SUBST([REPLACE_WCTOMB])
])
m4trace:m4/string_h.m4:12: -1- AC_DEFUN_ONCE([gl_STRING_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_NEXT_HEADERS([string.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]],
    [ffsl ffsll memmem mempcpy memrchr rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/string_h.m4:35: -1- AC_DEFUN([gl_STRING_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STRING_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/string_h.m4:47: -1- AC_DEFUN([gl_STRING_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
])
m4trace:m4/string_h.m4:101: -1- AC_DEFUN([gl_STRING_H_DEFAULTS], [
  HAVE_MBSLEN=0;             AC_SUBST([HAVE_MBSLEN])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_EXPLICIT_BZERO=1;        AC_SUBST([HAVE_EXPLICIT_BZERO])
  HAVE_FFSL=1;                  AC_SUBST([HAVE_FFSL])
  HAVE_FFSLL=1;                 AC_SUBST([HAVE_FFSLL])
  HAVE_DECL_MEMMEM=1;           AC_SUBST([HAVE_DECL_MEMMEM])
  HAVE_MEMPCPY=1;               AC_SUBST([HAVE_MEMPCPY])
  HAVE_DECL_MEMRCHR=1;          AC_SUBST([HAVE_DECL_MEMRCHR])
  HAVE_RAWMEMCHR=1;             AC_SUBST([HAVE_RAWMEMCHR])
  HAVE_STPCPY=1;                AC_SUBST([HAVE_STPCPY])
  HAVE_STPNCPY=1;               AC_SUBST([HAVE_STPNCPY])
  HAVE_STRCHRNUL=1;             AC_SUBST([HAVE_STRCHRNUL])
  HAVE_DECL_STRDUP=1;           AC_SUBST([HAVE_DECL_STRDUP])
  HAVE_DECL_STRNDUP=1;          AC_SUBST([HAVE_DECL_STRNDUP])
  HAVE_DECL_STRNLEN=1;          AC_SUBST([HAVE_DECL_STRNLEN])
  HAVE_STRPBRK=1;               AC_SUBST([HAVE_STRPBRK])
  HAVE_STRSEP=1;                AC_SUBST([HAVE_STRSEP])
  HAVE_STRCASESTR=1;            AC_SUBST([HAVE_STRCASESTR])
  HAVE_DECL_STRTOK_R=1;         AC_SUBST([HAVE_DECL_STRTOK_R])
  HAVE_DECL_STRERROR_R=1;       AC_SUBST([HAVE_DECL_STRERROR_R])
  HAVE_STRERRORNAME_NP=1;       AC_SUBST([HAVE_STRERRORNAME_NP])
  HAVE_SIGABBREV_NP=1;          AC_SUBST([HAVE_SIGABBREV_NP])
  HAVE_SIGDESCR_NP=1;           AC_SUBST([HAVE_SIGDESCR_NP])
  HAVE_DECL_STRSIGNAL=1;        AC_SUBST([HAVE_DECL_STRSIGNAL])
  HAVE_STRVERSCMP=1;            AC_SUBST([HAVE_STRVERSCMP])
  REPLACE_FFSLL=0;              AC_SUBST([REPLACE_FFSLL])
  REPLACE_MEMCHR=0;             AC_SUBST([REPLACE_MEMCHR])
  REPLACE_MEMMEM=0;             AC_SUBST([REPLACE_MEMMEM])
  REPLACE_STPNCPY=0;            AC_SUBST([REPLACE_STPNCPY])
  REPLACE_STRCHRNUL=0;          AC_SUBST([REPLACE_STRCHRNUL])
  REPLACE_STRDUP=0;             AC_SUBST([REPLACE_STRDUP])
  REPLACE_STRNCAT=0;            AC_SUBST([REPLACE_STRNCAT])
  REPLACE_STRNDUP=0;            AC_SUBST([REPLACE_STRNDUP])
  REPLACE_STRNLEN=0;            AC_SUBST([REPLACE_STRNLEN])
  REPLACE_STRSTR=0;             AC_SUBST([REPLACE_STRSTR])
  REPLACE_STRCASESTR=0;         AC_SUBST([REPLACE_STRCASESTR])
  REPLACE_STRTOK_R=0;           AC_SUBST([REPLACE_STRTOK_R])
  REPLACE_STRERROR=0;           AC_SUBST([REPLACE_STRERROR])
  REPLACE_STRERROR_R=0;         AC_SUBST([REPLACE_STRERROR_R])
  REPLACE_STRERRORNAME_NP=0;    AC_SUBST([REPLACE_STRERRORNAME_NP])
  REPLACE_STRSIGNAL=0;          AC_SUBST([REPLACE_STRSIGNAL])
  UNDEFINE_STRTOK_R=0;          AC_SUBST([UNDEFINE_STRTOK_R])
])
m4trace:m4/sys_select_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_SELECT_H], [
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CACHE_CHECK([whether <sys/select.h> is self-contained],
    [gl_cv_header_sys_select_h_selfcontained],
    [
      dnl Test against two bugs:
      dnl 1. On many platforms, <sys/select.h> assumes prior inclusion of
      dnl    <sys/types.h>.
      dnl 2. On OSF/1 4.0, <sys/select.h> provides only a forward declaration
      dnl    of 'struct timeval', and no definition of this type.
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>]],
                                         [[struct timeval b;]])],
        [gl_cv_header_sys_select_h_selfcontained=yes],
        [gl_cv_header_sys_select_h_selfcontained=no])
      dnl Test against another bug:
      dnl 3. On Solaris 10, <sys/select.h> provides an FD_ZERO implementation
      dnl    that relies on memset(), but without including <string.h>.
      if test $gl_cv_header_sys_select_h_selfcontained = yes; then
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[#include <sys/select.h>]],
                           [[int memset; int bzero;]])
          ],
          [AC_LINK_IFELSE(
             [AC_LANG_PROGRAM([[#include <sys/select.h>]], [[
                  #undef memset
                  #define memset nonexistent_memset
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void *memset (void *, int, unsigned long);
                  #undef bzero
                  #define bzero nonexistent_bzero
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void bzero (void *, unsigned long);
                  fd_set fds;
                  FD_ZERO (&fds);
                ]])
             ],
             [],
             [gl_cv_header_sys_select_h_selfcontained=no])
          ])
      fi
    ])
  dnl <sys/select.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/select.h])
  if test $ac_cv_header_sys_select_h = yes; then
    HAVE_SYS_SELECT_H=1
  else
    HAVE_SYS_SELECT_H=0
  fi
  AC_SUBST([HAVE_SYS_SELECT_H])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
])
m4trace:m4/sys_select_h.m4:82: -1- AC_DEFUN([gl_SYS_SELECT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_select_h.m4:94: -1- AC_DEFUN([gl_SYS_SELECT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
])
m4trace:m4/sys_select_h.m4:104: -1- AC_DEFUN([gl_SYS_SELECT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PSELECT=1; AC_SUBST([HAVE_PSELECT])
  REPLACE_PSELECT=0; AC_SUBST([REPLACE_PSELECT])
  REPLACE_SELECT=0; AC_SUBST([REPLACE_SELECT])
])
m4trace:m4/sys_socket_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_SOCKET_H], [
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On OSF/1, the functions recv(), send(), recvfrom(), sendto() have
  dnl old-style declarations (with return type 'int' instead of 'ssize_t')
  dnl unless _POSIX_PII_SOCKET is defined.
  case "$host_os" in
    osf*)
      AC_DEFINE([_POSIX_PII_SOCKET], [1],
        [Define to 1 in order to get the POSIX compatible declarations
         of socket functions.])
      ;;
  esac

  AC_CACHE_CHECK([whether <sys/socket.h> is self-contained],
    [gl_cv_header_sys_socket_h_selfcontained],
    [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]], [[]])],
        [gl_cv_header_sys_socket_h_selfcontained=yes],
        [gl_cv_header_sys_socket_h_selfcontained=no])
    ])
  if test $gl_cv_header_sys_socket_h_selfcontained = yes; then
    dnl If the shutdown function exists, <sys/socket.h> should define
    dnl SHUT_RD, SHUT_WR, SHUT_RDWR.
    AC_CHECK_FUNCS([shutdown])
    if test $ac_cv_func_shutdown = yes; then
      AC_CACHE_CHECK([whether <sys/socket.h> defines the SHUT_* macros],
        [gl_cv_header_sys_socket_h_shut],
        [
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM([[#include <sys/socket.h>]],
               [[int a[] = { SHUT_RD, SHUT_WR, SHUT_RDWR };]])],
            [gl_cv_header_sys_socket_h_shut=yes],
            [gl_cv_header_sys_socket_h_shut=no])
        ])
      if test $gl_cv_header_sys_socket_h_shut = no; then
        SYS_SOCKET_H='sys/socket.h'
      fi
    fi
  fi
  # We need to check for ws2tcpip.h now.
  gl_PREREQ_SYS_H_SOCKET
  AC_CHECK_TYPES([struct sockaddr_storage, sa_family_t],,,[
  /* sys/types.h is not needed according to POSIX, but the
     sys/socket.h in i386-unknown-freebsd4.10 and
     powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
])
  if test $ac_cv_type_struct_sockaddr_storage = no; then
    HAVE_STRUCT_SOCKADDR_STORAGE=0
  fi
  if test $ac_cv_type_sa_family_t = no; then
    HAVE_SA_FAMILY_T=0
  fi
  if test $ac_cv_type_struct_sockaddr_storage != no; then
    AC_CHECK_MEMBERS([struct sockaddr_storage.ss_family],
      [],
      [HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=0],
      [#include <sys/types.h>
       #ifdef HAVE_SYS_SOCKET_H
       #include <sys/socket.h>
       #endif
       #ifdef HAVE_WS2TCPIP_H
       #include <ws2tcpip.h>
       #endif
      ])
  fi
  if test $HAVE_STRUCT_SOCKADDR_STORAGE = 0 || test $HAVE_SA_FAMILY_T = 0 \
     || test $HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 0; then
    SYS_SOCKET_H='sys/socket.h'
  fi
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_socket_h.m4:102: -1- AC_DEFUN([gl_PREREQ_SYS_H_SOCKET], [
  dnl Check prerequisites of the <sys/socket.h> replacement.
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  gl_CHECK_NEXT_HEADERS([sys/socket.h])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_SYS_SOCKET_H=1
  else
    HAVE_SYS_SOCKET_H=0
  fi
  AC_SUBST([HAVE_SYS_SOCKET_H])
  gl_PREREQ_SYS_H_WS2TCPIP
])
m4trace:m4/sys_socket_h.m4:119: -1- AC_DEFUN([gl_PREREQ_SYS_H_WINSOCK2], [
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  if test $ac_cv_header_sys_socket_h != yes; then
    dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
    dnl the check for those headers unconditional; yet cygwin reports
    dnl that the headers are present but cannot be compiled (since on
    dnl cygwin, all socket information should come from sys/socket.h).
    AC_CHECK_HEADERS([winsock2.h])
  fi
  if test "$ac_cv_header_winsock2_h" = yes; then
    HAVE_WINSOCK2_H=1
    UNISTD_H_HAVE_WINSOCK2_H=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H=1
  else
    HAVE_WINSOCK2_H=0
  fi
  AC_SUBST([HAVE_WINSOCK2_H])
])
m4trace:m4/sys_socket_h.m4:144: -1- AC_DEFUN([gl_PREREQ_SYS_H_WS2TCPIP], [
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_WS2TCPIP_H=0
  else
    if test $ac_cv_header_ws2tcpip_h = yes; then
      HAVE_WS2TCPIP_H=1
    else
      HAVE_WS2TCPIP_H=0
    fi
  fi
  AC_SUBST([HAVE_WS2TCPIP_H])
])
m4trace:m4/sys_socket_h.m4:163: -1- AC_DEFUN([gl_SYS_SOCKET_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_socket_h.m4:175: -1- AC_DEFUN([gl_SYS_SOCKET_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
])
m4trace:m4/sys_socket_h.m4:198: -1- AC_DEFUN([gl_SYS_SOCKET_H_DEFAULTS], [
  HAVE_STRUCT_SOCKADDR_STORAGE=1; AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE])
  HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=1;
                        AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY])
  HAVE_SA_FAMILY_T=1;   AC_SUBST([HAVE_SA_FAMILY_T])
  HAVE_ACCEPT4=1;       AC_SUBST([HAVE_ACCEPT4])
])
m4trace:m4/sys_stat_h.m4:10: -1- AC_DEFUN_ONCE([gl_SYS_STAT_H], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  dnl Check for broken stat macros.
  AC_REQUIRE([AC_HEADER_STAT])

  gl_CHECK_NEXT_HEADERS([sys/stat.h])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to enable precise timestamps in 'struct stat'.
  m4_ifdef([gl_WINDOWS_STAT_TIMESPEC], [
    AC_REQUIRE([gl_WINDOWS_STAT_TIMESPEC])
  ], [
    WINDOWS_STAT_TIMESPEC=0
  ])
  AC_SUBST([WINDOWS_STAT_TIMESPEC])

  dnl Whether to ensure that struct stat.st_size is 64-bit wide.
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_ST_SIZE=0
  ])
  AC_SUBST([WINDOWS_64_BIT_ST_SIZE])

  dnl Define types that are supposed to be defined in <sys/types.h> or
  dnl <sys/stat.h>.
  AC_CHECK_TYPE([nlink_t], [],
    [AC_DEFINE([nlink_t], [int],
       [Define to the type of st_nlink in struct stat, or a supertype.])],
    [#include <sys/types.h>
     #include <sys/stat.h>])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_stat_h.m4:59: -1- AC_DEFUN([gl_SYS_STAT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_stat_h.m4:71: -1- AC_DEFUN([gl_SYS_STAT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
])
m4trace:m4/sys_stat_h.m4:100: -1- AC_DEFUN([gl_SYS_STAT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCHMODAT=1;      AC_SUBST([HAVE_FCHMODAT])
  HAVE_FSTATAT=1;       AC_SUBST([HAVE_FSTATAT])
  HAVE_FUTIMENS=1;      AC_SUBST([HAVE_FUTIMENS])
  HAVE_GETUMASK=1;      AC_SUBST([HAVE_GETUMASK])
  HAVE_LCHMOD=1;        AC_SUBST([HAVE_LCHMOD])
  HAVE_LSTAT=1;         AC_SUBST([HAVE_LSTAT])
  HAVE_MKDIRAT=1;       AC_SUBST([HAVE_MKDIRAT])
  HAVE_MKFIFO=1;        AC_SUBST([HAVE_MKFIFO])
  HAVE_MKFIFOAT=1;      AC_SUBST([HAVE_MKFIFOAT])
  HAVE_MKNOD=1;         AC_SUBST([HAVE_MKNOD])
  HAVE_MKNODAT=1;       AC_SUBST([HAVE_MKNODAT])
  HAVE_UTIMENSAT=1;     AC_SUBST([HAVE_UTIMENSAT])
  REPLACE_FCHMODAT=0;   AC_SUBST([REPLACE_FCHMODAT])
  REPLACE_FSTAT=0;      AC_SUBST([REPLACE_FSTAT])
  REPLACE_FSTATAT=0;    AC_SUBST([REPLACE_FSTATAT])
  REPLACE_FUTIMENS=0;   AC_SUBST([REPLACE_FUTIMENS])
  REPLACE_LSTAT=0;      AC_SUBST([REPLACE_LSTAT])
  REPLACE_MKDIR=0;      AC_SUBST([REPLACE_MKDIR])
  REPLACE_MKFIFO=0;     AC_SUBST([REPLACE_MKFIFO])
  REPLACE_MKFIFOAT=0;   AC_SUBST([REPLACE_MKFIFOAT])
  REPLACE_MKNOD=0;      AC_SUBST([REPLACE_MKNOD])
  REPLACE_MKNODAT=0;    AC_SUBST([REPLACE_MKNODAT])
  REPLACE_STAT=0;       AC_SUBST([REPLACE_STAT])
  REPLACE_UTIMENSAT=0;  AC_SUBST([REPLACE_UTIMENSAT])
])
m4trace:m4/sys_time_h.m4:11: -1- AC_DEFUN_ONCE([gl_SYS_TIME_H], [
  dnl Use AC_REQUIRE here, so that the REPLACE_GETTIMEOFDAY=0 statement
  dnl below is expanded once only, before all REPLACE_GETTIMEOFDAY=1
  dnl statements that occur in other macros.
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  gl_CHECK_NEXT_HEADERS([sys/time.h])

  if test $ac_cv_header_sys_time_h != yes; then
    HAVE_SYS_TIME_H=0
  fi

  dnl On native Windows with MSVC, 'struct timeval' is defined in <winsock2.h>
  dnl only. So include that header in the list.
  gl_PREREQ_SYS_H_WINSOCK2
  AC_CACHE_CHECK([for struct timeval], [gl_cv_sys_struct_timeval],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if HAVE_SYS_TIME_H
             #include <sys/time.h>
            #endif
            #include <time.h>
            #if HAVE_WINSOCK2_H
            # include <winsock2.h>
            #endif
          ]],
          [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
       [gl_cv_sys_struct_timeval=yes],
       [gl_cv_sys_struct_timeval=no])
    ])
  if test $gl_cv_sys_struct_timeval != yes; then
    HAVE_STRUCT_TIMEVAL=0
  else
    dnl On native Windows with a 64-bit 'time_t', 'struct timeval' is defined
    dnl (in <sys/time.h> and <winsock2.h> for mingw64, in <winsock2.h> only
    dnl for MSVC) with a tv_sec field of type 'long' (32-bit!), which is
    dnl smaller than the 'time_t' type mandated by POSIX.
    dnl On OpenBSD 5.1 amd64, tv_sec is 64 bits and time_t 32 bits, but
    dnl that is good enough.
    AC_CACHE_CHECK([for wide-enough struct timeval.tv_sec member],
      [gl_cv_sys_struct_timeval_tv_sec],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#if HAVE_SYS_TIME_H
               #include <sys/time.h>
              #endif
              #include <time.h>
              #if HAVE_WINSOCK2_H
              # include <winsock2.h>
              #endif
            ]],
            [[static struct timeval x;
              typedef int verify_tv_sec_type[
                sizeof (time_t) <= sizeof x.tv_sec ? 1 : -1
              ];
            ]])],
         [gl_cv_sys_struct_timeval_tv_sec=yes],
         [gl_cv_sys_struct_timeval_tv_sec=no])
      ])
    if test $gl_cv_sys_struct_timeval_tv_sec != yes; then
      REPLACE_STRUCT_TIMEVAL=1
    fi
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
])
m4trace:m4/sys_time_h.m4:91: -1- AC_DEFUN([gl_SYS_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_time_h.m4:103: -1- AC_DEFUN([gl_SYS_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
])
m4trace:m4/sys_time_h.m4:112: -1- AC_DEFUN([gl_SYS_TIME_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_GETTIMEOFDAY=1;       AC_SUBST([HAVE_GETTIMEOFDAY])
  HAVE_STRUCT_TIMEVAL=1;     AC_SUBST([HAVE_STRUCT_TIMEVAL])
  HAVE_SYS_TIME_H=1;         AC_SUBST([HAVE_SYS_TIME_H])
  REPLACE_GETTIMEOFDAY=0;    AC_SUBST([REPLACE_GETTIMEOFDAY])
  REPLACE_STRUCT_TIMEVAL=0;  AC_SUBST([REPLACE_STRUCT_TIMEVAL])
])
m4trace:m4/sys_types_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_TYPES_H], [
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])

  dnl Use sane struct stat types in OpenVMS 8.2 and later.
  AC_DEFINE([_USE_STD_STAT], 1, [For standard stat data types on VMS.])

  gl_NEXT_HEADERS([sys/types.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to override the 'off_t' type.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Whether to override the 'dev_t' and 'ino_t' types.
  m4_ifdef([gl_WINDOWS_STAT_INODES], [
    AC_REQUIRE([gl_WINDOWS_STAT_INODES])
  ], [
    WINDOWS_STAT_INODES=0
  ])
  AC_SUBST([WINDOWS_STAT_INODES])
])
m4trace:m4/sys_types_h.m4:37: -1- AC_DEFUN([gl_SYS_TYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])
])
m4trace:m4/sys_types_h.m4:45: -1- AC_DEFUN([gl_SYS_TYPES_H_DEFAULTS], [
])
m4trace:m4/sys_uio_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_UIO_H], [
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
  dnl <sys/uio.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/uio.h])
  if test $ac_cv_header_sys_uio_h = yes; then
    HAVE_SYS_UIO_H=1
  else
    HAVE_SYS_UIO_H=0
  fi
  AC_SUBST([HAVE_SYS_UIO_H])
])
m4trace:m4/sys_uio_h.m4:24: -1- AC_DEFUN([gl_SYS_UIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_uio_h.m4:36: -1- AC_DEFUN([gl_SYS_UIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
])
m4trace:m4/sys_uio_h.m4:44: -1- AC_DEFUN([gl_SYS_UIO_H_DEFAULTS], [
])
m4trace:m4/threadlib.m4:54: -1- AC_DEFUN([gl_ANYTHREADLIB_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_anythreadlib_early_done"; then
    case "$host_os" in
      osf*)
        # On OSF/1, the compiler needs the flag -D_REENTRANT so that it
        # groks <pthread.h>. cc also understands the flag -pthread, but
        # we don't use it because 1. gcc-2.95 doesn't understand -pthread,
        # 2. putting a flag into CPPFLAGS that has an effect on the linker
        # causes the AC_LINK_IFELSE test below to succeed unexpectedly,
        # leading to wrong values of LIBTHREAD and LTLIBTHREAD.
        CPPFLAGS="$CPPFLAGS -D_REENTRANT"
        ;;
    esac
    # Some systems optimize for single-threaded programs by default, and
    # need special flags to disable these optimizations. For example, the
    # definition of 'errno' in <errno.h>.
    case "$host_os" in
      aix* | freebsd*) CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE" ;;
      solaris*) CPPFLAGS="$CPPFLAGS -D_REENTRANT" ;;
    esac
    gl_anythreadlib_early_done=done
  fi
])
m4trace:m4/threadlib.m4:82: -1- AC_DEFUN([gl_WEAK_SYMBOLS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether imported symbols can be declared weak],
    [gl_cv_have_weak],
    [case "$host_os" in
       cygwin*)
         dnl On Cygwin 3.2.0 with gcc 10.2, the test below would succeed, but
         dnl programs that use pthread_in_use() with weak symbol references
         dnl crash miserably at runtime.
         gl_cv_have_weak="guessing no"
         ;;
       *)
         gl_cv_have_weak=no
         dnl First, test whether the compiler accepts it syntactically.
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[extern void xyzzy ();
#pragma weak xyzzy]],
              [[xyzzy();]])],
           [gl_cv_have_weak=maybe])
         if test $gl_cv_have_weak = maybe; then
           dnl Second, test whether it actually works. On Cygwin 1.7.2, with
           dnl gcc 4.3, symbols declared weak always evaluate to the address 0.
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
#include <stdio.h>
#pragma weak fputs
int main ()
{
  return (fputs == NULL);
}]])],
             [gl_cv_have_weak=yes],
             [gl_cv_have_weak=no],
             [dnl When cross-compiling, assume that only ELF platforms support
              dnl weak symbols.
              AC_EGREP_CPP([Extensible Linking Format],
                [#ifdef __ELF__
                 Extensible Linking Format
                 #endif
                ],
                [gl_cv_have_weak="guessing yes"],
                [gl_cv_have_weak="guessing no"])
             ])
         fi
         ;;
     esac
     dnl But when linking statically, weak symbols don't work.
     case " $LDFLAGS " in
       *" -static "*) gl_cv_have_weak=no ;;
     esac
     dnl Test for a bug in FreeBSD 11: A link error occurs when using a weak
     dnl symbol and linking against a shared library that has a dependency on
     dnl the shared library that defines the symbol.
     case "$gl_cv_have_weak" in
       *yes)
         case "$host_os" in
           freebsd* | dragonfly* | midnightbsd*)
             : > conftest1.c
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -fPIC -shared -o libempty.so conftest1.c -lpthread >&AS_MESSAGE_LOG_FD 2>&1
             cat <<EOF > conftest2.c
#include <pthread.h>
#pragma weak pthread_mutexattr_gettype
int main ()
{
  return (pthread_mutexattr_gettype != NULL);
}
EOF
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -o conftest conftest2.c libempty.so >&AS_MESSAGE_LOG_FD 2>&1 \
               || gl_cv_have_weak=no
             rm -f conftest1.c libempty.so conftest2.c conftest
             ;;
         esac
         ;;
     esac
    ])
  case "$gl_cv_have_weak" in
    *yes)
      AC_DEFINE([HAVE_WEAK_SYMBOLS], [1],
        [Define to 1 if the compiler and linker support weak declarations of symbols.])
      ;;
  esac
])
m4trace:m4/threadlib.m4:186: -1- AC_DEFUN([gl_PTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  if test -z "$gl_pthreadlib_body_done"; then
    gl_pthread_api=no
    LIBPTHREAD=
    LIBPMULTITHREAD=
    # On OSF/1, the compiler needs the flag -pthread or -D_REENTRANT so that
    # it groks <pthread.h>. It's added above, in gl_ANYTHREADLIB_EARLY.
    AC_CHECK_HEADER([pthread.h],
      [gl_have_pthread_h=yes], [gl_have_pthread_h=no])
    if test "$gl_have_pthread_h" = yes; then
      # Other possible tests:
      #   -lpthreads (FSU threads, PCthreads)
      #   -lgthreads
      # Test whether both pthread_mutex_lock and pthread_mutexattr_init exist
      # in libc. IRIX 6.5 has the first one in both libc and libpthread, but
      # the second one only in libpthread, and lock.c needs it.
      #
      # If -pthread works, prefer it to -lpthread, since Ubuntu 14.04
      # needs -pthread for some reason.  See:
      # https://lists.gnu.org/r/bug-gnulib/2014-09/msg00023.html
      save_LIBS=$LIBS
      for gl_pthread in '' '-pthread'; do
        LIBS="$LIBS $gl_pthread"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <pthread.h>
               pthread_mutex_t m;
               pthread_mutexattr_t ma;
             ]],
             [[pthread_mutex_lock (&m);
               pthread_mutexattr_init (&ma);]])],
          [gl_pthread_api=yes
           LIBPTHREAD=$gl_pthread
           LIBPMULTITHREAD=$gl_pthread])
        LIBS=$save_LIBS
        test $gl_pthread_api = yes && break
      done
      echo "$as_me:__oline__: gl_pthread_api=$gl_pthread_api" >&AS_MESSAGE_LOG_FD
      echo "$as_me:__oline__: LIBPTHREAD=$LIBPTHREAD" >&AS_MESSAGE_LOG_FD

      gl_pthread_in_glibc=no
      # On Linux with glibc >= 2.34, libc contains the fully functional
      # pthread functions.
      case "$host_os" in
        linux*)
          AC_EGREP_CPP([Lucky user],
            [#include <features.h>
             #ifdef __GNU_LIBRARY__
              #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 34) || (__GLIBC__ > 2)
               Lucky user
              #endif
             #endif
            ],
            [gl_pthread_in_glibc=yes],
            [])
          ;;
      esac
      echo "$as_me:__oline__: gl_pthread_in_glibc=$gl_pthread_in_glibc" >&AS_MESSAGE_LOG_FD

      # Test for libpthread by looking for pthread_kill. (Not pthread_self,
      # since it is defined as a macro on OSF/1.)
      if test $gl_pthread_api = yes && test -z "$LIBPTHREAD"; then
        # The program links fine without libpthread. But it may actually
        # need to link with libpthread in order to create multiple threads.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [if test $gl_pthread_in_glibc = yes; then
             LIBPMULTITHREAD=
           else
             LIBPMULTITHREAD=-lpthread
             # On Solaris and HP-UX, most pthread functions exist also in libc.
             # Therefore pthread_in_use() needs to actually try to create a
             # thread: pthread_create from libc will fail, whereas
             # pthread_create will actually create a thread.
             # On Solaris 10 or newer, this test is no longer needed, because
             # libc contains the fully functional pthread functions.
             case "$host_os" in
               solaris | solaris2.[1-9] | solaris2.[1-9].* | hpux*)
                 AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                   [Define if the pthread_in_use() detection is hard.])
             esac
           fi
          ])
      elif test $gl_pthread_api != yes; then
        # Some library is needed. Try libpthread and libc_r.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [gl_pthread_api=yes
           LIBPTHREAD=-lpthread
           LIBPMULTITHREAD=-lpthread])
        if test $gl_pthread_api != yes; then
          # For FreeBSD 4.
          AC_CHECK_LIB([c_r], [pthread_kill],
            [gl_pthread_api=yes
             LIBPTHREAD=-lc_r
             LIBPMULTITHREAD=-lc_r])
        fi
      fi
      echo "$as_me:__oline__: LIBPMULTITHREAD=$LIBPMULTITHREAD" >&AS_MESSAGE_LOG_FD
    fi
    AC_MSG_CHECKING([whether POSIX threads API is available])
    AC_MSG_RESULT([$gl_pthread_api])
    AC_SUBST([LIBPTHREAD])
    AC_SUBST([LIBPMULTITHREAD])
    if test $gl_pthread_api = yes; then
      AC_DEFINE([HAVE_PTHREAD_API], [1],
        [Define if you have the <pthread.h> header and the POSIX threads API.])
    fi

    dnl On some systems, sched_yield is in librt, rather than in libpthread.
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <sched.h>]],
         [[sched_yield ();]])],
      [LIB_SCHED_YIELD=
      ],
      [dnl Solaris 7...10 has sched_yield in librt, not in libpthread or libc.
       AC_CHECK_LIB([rt], [sched_yield], [LIB_SCHED_YIELD=-lrt],
         [dnl Solaris 2.5.1, 2.6 has sched_yield in libposix4, not librt.
          AC_CHECK_LIB([posix4], [sched_yield], [LIB_SCHED_YIELD=-lposix4])])
      ])
    AC_SUBST([LIB_SCHED_YIELD])

    gl_pthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:313: -1- AC_DEFUN([gl_PTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_PTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:333: -1- AC_DEFUN([gl_STDTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_stdthreadlib_body_done"; then
    AC_CHECK_HEADERS_ONCE([threads.h])

    case "$host_os" in
      mingw*)
        LIBSTDTHREAD=
        ;;
      *)
        gl_PTHREADLIB_BODY
        if test $ac_cv_header_threads_h = yes; then
          dnl glibc >= 2.29 has thrd_create in libpthread.
          dnl FreeBSD >= 10 has thrd_create in libstdthreads; this library depends
          dnl on libpthread (for the symbol 'pthread_mutexattr_gettype').
          dnl glibc >= 2.34, AIX >= 7.1, and Solaris >= 11.4 have thrd_create in
          dnl libc.
          AC_CHECK_FUNCS([thrd_create])
          if test $ac_cv_func_thrd_create = yes; then
            LIBSTDTHREAD=
          else
            AC_CHECK_LIB([stdthreads], [thrd_create], [
              LIBSTDTHREAD='-lstdthreads -lpthread'
            ], [
              dnl Guess that thrd_create is in libpthread.
              LIBSTDTHREAD="$LIBPMULTITHREAD"
            ])
          fi
        else
          dnl Libraries needed by thrd.c, mtx.c, cnd.c, tss.c.
          LIBSTDTHREAD="$LIBPMULTITHREAD $LIB_SCHED_YIELD"
        fi
        ;;
    esac
    AC_SUBST([LIBSTDTHREAD])

    AC_MSG_CHECKING([whether ISO C threads API is available])
    AC_MSG_RESULT([$ac_cv_header_threads_h])
    gl_stdthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:377: -1- AC_DEFUN([gl_STDTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_STDTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:414: -1- AC_DEFUN([gl_THREADLIB_EARLY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
])
m4trace:m4/threadlib.m4:421: -1- AC_DEFUN([gl_THREADLIB_EARLY_BODY], [
  dnl Ordering constraints: This macro modifies CPPFLAGS in a way that
  dnl influences the result of the autoconf tests that test for *_unlocked
  dnl declarations, on AIX 5 at least. Therefore it must come early.
  AC_BEFORE([$0], [gl_FUNC_GLIBC_UNLOCKED_IO])dnl
  AC_BEFORE([$0], [gl_ARGP])dnl

  AC_REQUIRE([AC_CANONICAL_HOST])
  dnl _GNU_SOURCE is needed for pthread_rwlock_t on glibc systems.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  dnl Check for multithreading.
  m4_ifdef([gl_THREADLIB_DEFAULT_NO],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=no])],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=])])
  m4_divert_text([DEFAULTS], [gl_use_winpthreads_default=])
  AC_ARG_ENABLE([threads],
AS_HELP_STRING([--enable-threads={isoc|posix|isoc+posix|windows}], [specify multithreading API])m4_ifdef([gl_THREADLIB_DEFAULT_NO], [], [
AS_HELP_STRING([--disable-threads], [build without multithread safety])]),
    [gl_use_threads=$enableval],
    [if test -n "$gl_use_threads_default"; then
       gl_use_threads="$gl_use_threads_default"
     else
changequote(,)dnl
       case "$host_os" in
         dnl Disable multithreading by default on OSF/1, because it interferes
         dnl with fork()/exec(): When msgexec is linked with -lpthread, its
         dnl child process gets an endless segmentation fault inside execvp().
         osf*) gl_use_threads=no ;;
         dnl Disable multithreading by default on Cygwin 1.5.x, because it has
         dnl bugs that lead to endless loops or crashes. See
         dnl <https://cygwin.com/ml/cygwin/2009-08/msg00283.html>.
         cygwin*)
               case `uname -r` in
                 1.[0-5].*) gl_use_threads=no ;;
                 *)         gl_use_threads=yes ;;
               esac
               ;;
         dnl Obey gl_AVOID_WINPTHREAD on mingw.
         mingw*)
               case "$gl_use_winpthreads_default" in
                 yes) gl_use_threads=posix ;;
                 no)  gl_use_threads=windows ;;
                 *)   gl_use_threads=yes ;;
               esac
               ;;
         *)    gl_use_threads=yes ;;
       esac
changequote([,])dnl
     fi
    ])
  if test "$gl_use_threads" = yes \
     || test "$gl_use_threads" = isoc \
     || test "$gl_use_threads" = posix \
     || test "$gl_use_threads" = isoc+posix; then
    # For using <threads.h> or <pthread.h>:
    gl_ANYTHREADLIB_EARLY
  fi
])
m4trace:m4/threadlib.m4:483: -1- AC_DEFUN([gl_THREADLIB_BODY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
  gl_threads_api=none
  LIBTHREAD=
  LTLIBTHREAD=
  LIBMULTITHREAD=
  LTLIBMULTITHREAD=
  if test "$gl_use_threads" != no; then
    dnl Check whether the compiler and linker support weak declarations.
    gl_WEAK_SYMBOLS
    if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
      dnl If we use weak symbols to implement pthread_in_use / pth_in_use /
      dnl thread_in_use, we also need to test whether the ISO C 11 thrd_create
      dnl facility is in use.
      AC_CHECK_HEADERS_ONCE([threads.h])
      :
    fi
    if test "$gl_use_threads" = isoc || test "$gl_use_threads" = isoc+posix; then
      AC_CHECK_HEADERS_ONCE([threads.h])
      gl_have_isoc_threads="$ac_cv_header_threads_h"
    fi
    if test "$gl_use_threads" = yes \
       || test "$gl_use_threads" = posix \
       || test "$gl_use_threads" = isoc+posix; then
      gl_PTHREADLIB_BODY
      LIBTHREAD=$LIBPTHREAD LTLIBTHREAD=$LIBPTHREAD
      LIBMULTITHREAD=$LIBPMULTITHREAD LTLIBMULTITHREAD=$LIBPMULTITHREAD
      if test $gl_pthread_api = yes; then
        if test "$gl_use_threads" = isoc+posix && test "$gl_have_isoc_threads" = yes; then
          gl_threads_api='isoc+posix'
          AC_DEFINE([USE_ISOC_AND_POSIX_THREADS], [1],
            [Define if the combination of the ISO C and POSIX multithreading APIs can be used.])
          LIBTHREAD= LTLIBTHREAD=
        else
          gl_threads_api=posix
          AC_DEFINE([USE_POSIX_THREADS], [1],
            [Define if the POSIX multithreading library can be used.])
          if test -z "$LIBMULTITHREAD" && test -z "$LTLIBMULTITHREAD"; then
            AC_DEFINE([USE_POSIX_THREADS_FROM_LIBC], [1],
              [Define if references to the POSIX multithreading library are satisfied by libc.])
          else
            if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
              AC_DEFINE([USE_POSIX_THREADS_WEAK], [1],
                [Define if references to the POSIX multithreading library should be made weak.])
              LIBTHREAD= LTLIBTHREAD=
            else
              case "$host_os" in
                freebsd* | dragonfly* | midnightbsd*)
                  if test "x$LIBTHREAD" != "x$LIBMULTITHREAD"; then
                    dnl If weak symbols can't tell whether pthread_create(), pthread_key_create()
                    dnl etc. will succeed, we need a runtime test.
                    AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                      [Define if the pthread_in_use() detection is hard.])
                  fi
                  ;;
              esac
            fi
          fi
        fi
      fi
    fi
    if test $gl_threads_api = none; then
      if test "$gl_use_threads" = isoc && test "$gl_have_isoc_threads" = yes; then
        gl_STDTHREADLIB_BODY
        LIBTHREAD=$LIBSTDTHREAD LTLIBTHREAD=$LIBSTDTHREAD
        LIBMULTITHREAD=$LIBSTDTHREAD LTLIBMULTITHREAD=$LIBSTDTHREAD
        gl_threads_api=isoc
        AC_DEFINE([USE_ISOC_THREADS], [1],
          [Define if the ISO C multithreading library can be used.])
      fi
    fi
    if test $gl_threads_api = none; then
      case "$gl_use_threads" in
        yes | windows | win32) # The 'win32' is for backward compatibility.
          if { case "$host_os" in
                 mingw*) true;;
                 *) false;;
               esac
             }; then
            gl_threads_api=windows
            AC_DEFINE([USE_WINDOWS_THREADS], [1],
              [Define if the native Windows multithreading API can be used.])
          fi
          ;;
      esac
    fi
  fi
  AC_MSG_CHECKING([for multithread API to use])
  AC_MSG_RESULT([$gl_threads_api])
  AC_SUBST([LIBTHREAD])
  AC_SUBST([LTLIBTHREAD])
  AC_SUBST([LIBMULTITHREAD])
  AC_SUBST([LTLIBMULTITHREAD])
])
m4trace:m4/threadlib.m4:579: -1- AC_DEFUN([gl_THREADLIB], [
  AC_REQUIRE([gl_THREADLIB_EARLY])
  AC_REQUIRE([gl_THREADLIB_BODY])
])
m4trace:m4/threadlib.m4:592: -1- AC_DEFUN([gl_DISABLE_THREADS], [
  m4_divert_text([INIT_PREPARE], [gl_use_threads_default=no])
])
m4trace:m4/threadlib.m4:604: -1- AC_DEFUN([gl_AVOID_WINPTHREAD], [
  m4_divert_text([INIT_PREPARE], [gl_use_winpthreads_default=no])
])
m4trace:m4/time_h.m4:13: -1- AC_DEFUN_ONCE([gl_TIME_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_TIME_H_DEFAULTS])

  gl_NEXT_HEADERS([time.h])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CACHE_CHECK([for TIME_UTC in <time.h>],
    [gl_cv_time_h_has_TIME_UTC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static int x = TIME_UTC; x++;]])],
       [gl_cv_time_h_has_TIME_UTC=yes],
       [gl_cv_time_h_has_TIME_UTC=no])])
  if test $gl_cv_time_h_has_TIME_UTC = yes; then
    TIME_H_DEFINES_TIME_UTC=1
  else
    TIME_H_DEFINES_TIME_UTC=0
  fi
  AC_SUBST([TIME_H_DEFINES_TIME_UTC])
])
m4trace:m4/time_h.m4:44: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_TIMESPEC], [
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CACHE_CHECK([for struct timespec in <time.h>],
    [gl_cv_sys_struct_timespec_in_time_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
       [gl_cv_sys_struct_timespec_in_time_h=yes],
       [gl_cv_sys_struct_timespec_in_time_h=no])])

  TIME_H_DEFINES_STRUCT_TIMESPEC=0
  SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=0
  PTHREAD_H_DEFINES_STRUCT_TIMESPEC=0
  UNISTD_H_DEFINES_STRUCT_TIMESPEC=0
  if test $gl_cv_sys_struct_timespec_in_time_h = yes; then
    TIME_H_DEFINES_STRUCT_TIMESPEC=1
  else
    AC_CACHE_CHECK([for struct timespec in <sys/time.h>],
      [gl_cv_sys_struct_timespec_in_sys_time_h],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
            ]],
            [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
         [gl_cv_sys_struct_timespec_in_sys_time_h=yes],
         [gl_cv_sys_struct_timespec_in_sys_time_h=no])])
    if test $gl_cv_sys_struct_timespec_in_sys_time_h = yes; then
      SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=1
    else
      AC_CACHE_CHECK([for struct timespec in <pthread.h>],
        [gl_cv_sys_struct_timespec_in_pthread_h],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <pthread.h>
              ]],
              [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
           [gl_cv_sys_struct_timespec_in_pthread_h=yes],
           [gl_cv_sys_struct_timespec_in_pthread_h=no])])
      if test $gl_cv_sys_struct_timespec_in_pthread_h = yes; then
        PTHREAD_H_DEFINES_STRUCT_TIMESPEC=1
      else
        AC_CACHE_CHECK([for struct timespec in <unistd.h>],
          [gl_cv_sys_struct_timespec_in_unistd_h],
          [AC_COMPILE_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <unistd.h>
                ]],
                [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
             [gl_cv_sys_struct_timespec_in_unistd_h=yes],
             [gl_cv_sys_struct_timespec_in_unistd_h=no])])
        if test $gl_cv_sys_struct_timespec_in_unistd_h = yes; then
          UNISTD_H_DEFINES_STRUCT_TIMESPEC=1
        fi
      fi
    fi
  fi
  AC_SUBST([TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([SYS_TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([PTHREAD_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([UNISTD_H_DEFINES_STRUCT_TIMESPEC])
])
m4trace:m4/time_h.m4:113: -1- AC_DEFUN([gl_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/time_h.m4:125: -1- AC_DEFUN([gl_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
])
m4trace:m4/time_h.m4:146: -1- AC_DEFUN([gl_TIME_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_LOCALTIME_R=1;               AC_SUBST([HAVE_DECL_LOCALTIME_R])
  HAVE_NANOSLEEP=1;                      AC_SUBST([HAVE_NANOSLEEP])
  HAVE_STRPTIME=1;                       AC_SUBST([HAVE_STRPTIME])
  HAVE_TIMEGM=1;                         AC_SUBST([HAVE_TIMEGM])
  HAVE_TIMESPEC_GET=1;                   AC_SUBST([HAVE_TIMESPEC_GET])
  dnl Even GNU libc does not have timezone_t yet.
  HAVE_TIMEZONE_T=0;                     AC_SUBST([HAVE_TIMEZONE_T])
  dnl If another module says to replace or to not replace, do that.
  dnl Otherwise, replace only if someone compiles with -DGNULIB_PORTCHECK;
  dnl this lets maintainers check for portability.
  REPLACE_CTIME=GNULIB_PORTCHECK;        AC_SUBST([REPLACE_CTIME])
  REPLACE_LOCALTIME_R=GNULIB_PORTCHECK;  AC_SUBST([REPLACE_LOCALTIME_R])
  REPLACE_MKTIME=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_MKTIME])
  REPLACE_NANOSLEEP=GNULIB_PORTCHECK;    AC_SUBST([REPLACE_NANOSLEEP])
  REPLACE_STRFTIME=GNULIB_PORTCHECK;     AC_SUBST([REPLACE_STRFTIME])
  REPLACE_TIMEGM=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_TIMEGM])
  REPLACE_TZSET=GNULIB_PORTCHECK;        AC_SUBST([REPLACE_TZSET])

  dnl Hack so that the time module doesn't depend on the sys_time module.
  dnl First, default GNULIB_GETTIMEOFDAY to 0 if sys_time is absent.
  : ${GNULIB_GETTIMEOFDAY=0};            AC_SUBST([GNULIB_GETTIMEOFDAY])
  dnl Second, it's OK to not use GNULIB_PORTCHECK for REPLACE_GMTIME
  dnl and REPLACE_LOCALTIME, as portability to Solaris 2.6 and earlier
  dnl is no longer a big deal.
  REPLACE_GMTIME=0;                      AC_SUBST([REPLACE_GMTIME])
  REPLACE_LOCALTIME=0;                   AC_SUBST([REPLACE_LOCALTIME])
])
m4trace:m4/timespec.m4:11: -1- AC_DEFUN([gl_TIMESPEC], [:])
m4trace:m4/unistd_h.m4:9: -1- AC_DEFUN_ONCE([gl_UNISTD_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([unistd.h])
  if test $ac_cv_header_unistd_h = yes; then
    HAVE_UNISTD_H=1
  else
    HAVE_UNISTD_H=0
  fi
  AC_SUBST([HAVE_UNISTD_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Determine WINDOWS_64_BIT_OFF_T.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([execvpe])
  if test $ac_cv_have_decl_execvpe = no; then
    HAVE_DECL_EXECVPE=0
  fi
])
m4trace:m4/unistd_h.m4:66: -1- AC_DEFUN([gl_UNISTD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_UNISTD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/unistd_h.m4:78: -1- AC_DEFUN([gl_UNISTD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
])
m4trace:m4/unistd_h.m4:170: -1- AC_DEFUN([gl_UNISTD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_CHOWN=1;           AC_SUBST([HAVE_CHOWN])
  HAVE_COPY_FILE_RANGE=1; AC_SUBST([HAVE_COPY_FILE_RANGE])
  HAVE_DUP3=1;            AC_SUBST([HAVE_DUP3])
  HAVE_EUIDACCESS=1;      AC_SUBST([HAVE_EUIDACCESS])
  HAVE_EXECVPE=1;         AC_SUBST([HAVE_EXECVPE])
  HAVE_FACCESSAT=1;       AC_SUBST([HAVE_FACCESSAT])
  HAVE_FCHDIR=1;          AC_SUBST([HAVE_FCHDIR])
  HAVE_FCHOWNAT=1;        AC_SUBST([HAVE_FCHOWNAT])
  HAVE_FDATASYNC=1;       AC_SUBST([HAVE_FDATASYNC])
  HAVE_FSYNC=1;           AC_SUBST([HAVE_FSYNC])
  HAVE_FTRUNCATE=1;       AC_SUBST([HAVE_FTRUNCATE])
  HAVE_GETDTABLESIZE=1;   AC_SUBST([HAVE_GETDTABLESIZE])
  HAVE_GETENTROPY=1;      AC_SUBST([HAVE_GETENTROPY])
  HAVE_GETGROUPS=1;       AC_SUBST([HAVE_GETGROUPS])
  HAVE_GETHOSTNAME=1;     AC_SUBST([HAVE_GETHOSTNAME])
  HAVE_GETLOGIN=1;        AC_SUBST([HAVE_GETLOGIN])
  HAVE_GETPAGESIZE=1;     AC_SUBST([HAVE_GETPAGESIZE])
  HAVE_GETPASS=1;         AC_SUBST([HAVE_GETPASS])
  HAVE_GROUP_MEMBER=1;    AC_SUBST([HAVE_GROUP_MEMBER])
  HAVE_LCHOWN=1;          AC_SUBST([HAVE_LCHOWN])
  HAVE_LINK=1;            AC_SUBST([HAVE_LINK])
  HAVE_LINKAT=1;          AC_SUBST([HAVE_LINKAT])
  HAVE_PIPE=1;            AC_SUBST([HAVE_PIPE])
  HAVE_PIPE2=1;           AC_SUBST([HAVE_PIPE2])
  HAVE_PREAD=1;           AC_SUBST([HAVE_PREAD])
  HAVE_PWRITE=1;          AC_SUBST([HAVE_PWRITE])
  HAVE_READLINK=1;        AC_SUBST([HAVE_READLINK])
  HAVE_READLINKAT=1;      AC_SUBST([HAVE_READLINKAT])
  HAVE_SETHOSTNAME=1;     AC_SUBST([HAVE_SETHOSTNAME])
  HAVE_SLEEP=1;           AC_SUBST([HAVE_SLEEP])
  HAVE_SYMLINK=1;         AC_SUBST([HAVE_SYMLINK])
  HAVE_SYMLINKAT=1;       AC_SUBST([HAVE_SYMLINKAT])
  HAVE_UNLINKAT=1;        AC_SUBST([HAVE_UNLINKAT])
  HAVE_USLEEP=1;          AC_SUBST([HAVE_USLEEP])
  HAVE_DECL_ENVIRON=1;    AC_SUBST([HAVE_DECL_ENVIRON])
  HAVE_DECL_EXECVPE=1;    AC_SUBST([HAVE_DECL_EXECVPE])
  HAVE_DECL_FCHDIR=1;     AC_SUBST([HAVE_DECL_FCHDIR])
  HAVE_DECL_FDATASYNC=1;  AC_SUBST([HAVE_DECL_FDATASYNC])
  HAVE_DECL_GETDOMAINNAME=1; AC_SUBST([HAVE_DECL_GETDOMAINNAME])
  HAVE_DECL_GETLOGIN=1;   AC_SUBST([HAVE_DECL_GETLOGIN])
  HAVE_DECL_GETLOGIN_R=1; AC_SUBST([HAVE_DECL_GETLOGIN_R])
  HAVE_DECL_GETPAGESIZE=1; AC_SUBST([HAVE_DECL_GETPAGESIZE])
  HAVE_DECL_GETUSERSHELL=1; AC_SUBST([HAVE_DECL_GETUSERSHELL])
  HAVE_DECL_SETHOSTNAME=1; AC_SUBST([HAVE_DECL_SETHOSTNAME])
  HAVE_DECL_TRUNCATE=1;   AC_SUBST([HAVE_DECL_TRUNCATE])
  HAVE_DECL_TTYNAME_R=1;  AC_SUBST([HAVE_DECL_TTYNAME_R])
  HAVE_OS_H=0;            AC_SUBST([HAVE_OS_H])
  HAVE_SYS_PARAM_H=0;     AC_SUBST([HAVE_SYS_PARAM_H])
  REPLACE_ACCESS=0;       AC_SUBST([REPLACE_ACCESS])
  REPLACE_CHOWN=0;        AC_SUBST([REPLACE_CHOWN])
  REPLACE_CLOSE=0;        AC_SUBST([REPLACE_CLOSE])
  REPLACE_DUP=0;          AC_SUBST([REPLACE_DUP])
  REPLACE_DUP2=0;         AC_SUBST([REPLACE_DUP2])
  REPLACE_EXECL=0;        AC_SUBST([REPLACE_EXECL])
  REPLACE_EXECLE=0;       AC_SUBST([REPLACE_EXECLE])
  REPLACE_EXECLP=0;       AC_SUBST([REPLACE_EXECLP])
  REPLACE_EXECV=0;        AC_SUBST([REPLACE_EXECV])
  REPLACE_EXECVE=0;       AC_SUBST([REPLACE_EXECVE])
  REPLACE_EXECVP=0;       AC_SUBST([REPLACE_EXECVP])
  REPLACE_EXECVPE=0;      AC_SUBST([REPLACE_EXECVPE])
  REPLACE_FACCESSAT=0;    AC_SUBST([REPLACE_FACCESSAT])
  REPLACE_FCHOWNAT=0;     AC_SUBST([REPLACE_FCHOWNAT])
  REPLACE_FTRUNCATE=0;    AC_SUBST([REPLACE_FTRUNCATE])
  REPLACE_GETCWD=0;       AC_SUBST([REPLACE_GETCWD])
  REPLACE_GETDOMAINNAME=0; AC_SUBST([REPLACE_GETDOMAINNAME])
  REPLACE_GETDTABLESIZE=0; AC_SUBST([REPLACE_GETDTABLESIZE])
  REPLACE_GETLOGIN_R=0;   AC_SUBST([REPLACE_GETLOGIN_R])
  REPLACE_GETGROUPS=0;    AC_SUBST([REPLACE_GETGROUPS])
  REPLACE_GETPAGESIZE=0;  AC_SUBST([REPLACE_GETPAGESIZE])
  REPLACE_GETPASS=0;      AC_SUBST([REPLACE_GETPASS])
  REPLACE_ISATTY=0;       AC_SUBST([REPLACE_ISATTY])
  REPLACE_LCHOWN=0;       AC_SUBST([REPLACE_LCHOWN])
  REPLACE_LINK=0;         AC_SUBST([REPLACE_LINK])
  REPLACE_LINKAT=0;       AC_SUBST([REPLACE_LINKAT])
  REPLACE_LSEEK=0;        AC_SUBST([REPLACE_LSEEK])
  REPLACE_PREAD=0;        AC_SUBST([REPLACE_PREAD])
  REPLACE_PWRITE=0;       AC_SUBST([REPLACE_PWRITE])
  REPLACE_READ=0;         AC_SUBST([REPLACE_READ])
  REPLACE_READLINK=0;     AC_SUBST([REPLACE_READLINK])
  REPLACE_READLINKAT=0;   AC_SUBST([REPLACE_READLINKAT])
  REPLACE_RMDIR=0;        AC_SUBST([REPLACE_RMDIR])
  REPLACE_SLEEP=0;        AC_SUBST([REPLACE_SLEEP])
  REPLACE_SYMLINK=0;      AC_SUBST([REPLACE_SYMLINK])
  REPLACE_SYMLINKAT=0;    AC_SUBST([REPLACE_SYMLINKAT])
  REPLACE_TRUNCATE=0;     AC_SUBST([REPLACE_TRUNCATE])
  REPLACE_TTYNAME_R=0;    AC_SUBST([REPLACE_TTYNAME_R])
  REPLACE_UNLINK=0;       AC_SUBST([REPLACE_UNLINK])
  REPLACE_UNLINKAT=0;     AC_SUBST([REPLACE_UNLINKAT])
  REPLACE_USLEEP=0;       AC_SUBST([REPLACE_USLEEP])
  REPLACE_WRITE=0;        AC_SUBST([REPLACE_WRITE])
  UNISTD_H_HAVE_SYS_RANDOM_H=0; AC_SUBST([UNISTD_H_HAVE_SYS_RANDOM_H])
  UNISTD_H_HAVE_WINSOCK2_H=0; AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H])
  UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=0;
                           AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
])
m4trace:m4/utime.m4:7: -1- AC_DEFUN([gl_FUNC_UTIME], [
  AC_REQUIRE([gl_UTIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([lstat])
  case "$host_os" in
    mingw*)
      dnl On this platform, the original utime() or _utime() produces
      dnl timestamps that are affected by the time zone.
      dnl Use the function name 'rpl_utime' always, in order to avoid a
      dnl possible conflict with the function name 'utime' from oldnames.lib
      dnl (MSVC) or liboldnames.a (mingw).
      REPLACE_UTIME=1
      ;;
    *)
      AC_CHECK_FUNCS([utime])
      if test $ac_cv_func_utime = no; then
        HAVE_UTIME=0
      else
        dnl On macOS 10.13, utime("link-to-file/", NULL) mistakenly succeeds.
        AC_CACHE_CHECK([whether utime handles trailing slashes on files],
          [gl_cv_func_utime_file_slash],
          [touch conftest.tmp
           # Assume that if we have lstat, we can also check symlinks.
           if test $ac_cv_func_lstat = yes; then
             ln -s conftest.tmp conftest.lnk
           fi
           AC_RUN_IFELSE(
             [AC_LANG_PROGRAM(
               [[#include <stddef.h>
                 #include <utime.h>
               ]],
               [[int result = 0;
                 if (!utime ("conftest.tmp/", NULL))
                   result |= 1;
                 #if HAVE_LSTAT
                 if (!utime ("conftest.lnk/", NULL))
                   result |= 2;
                 #endif
                 return result;
               ]])],
             [gl_cv_func_utime_file_slash=yes],
             [gl_cv_func_utime_file_slash=no],
             [case "$host_os" in
                                 # Guess yes on Linux systems.
                linux-* | linux) gl_cv_func_utime_file_slash="guessing yes" ;;
                                 # Guess yes on glibc systems.
                *-gnu* | gnu*)   gl_cv_func_utime_file_slash="guessing yes" ;;
                                 # Guess no on macOS.
                darwin*)         gl_cv_func_utime_file_slash="guessing no" ;;
                                 # If we don't know, obey --enable-cross-guesses.
                *)               gl_cv_func_utime_file_slash="$gl_cross_guess_normal" ;;
              esac
             ])
           rm -f conftest.tmp conftest.lnk
          ])
        case $gl_cv_func_stat_file_slash in
          *no)
            REPLACE_UTIME=1
            AC_DEFINE([REPLACE_FUNC_UTIME_FILE], [1],
              [Define to 1 if utime needs help when passed a file name with a trailing slash])
            ;;
        esac
      fi
      ;;
  esac
])
m4trace:m4/utime.m4:76: -1- AC_DEFUN([gl_PREREQ_UTIME], [:])
m4trace:m4/utime_h.m4:9: -1- AC_DEFUN_ONCE([gl_UTIME_H], [
  AC_REQUIRE([gl_UTIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  AC_CHECK_HEADERS_ONCE([utime.h])
  gl_CHECK_NEXT_HEADERS([utime.h])

  if test $ac_cv_header_utime_h = yes; then
    HAVE_UTIME_H=1
  else
    HAVE_UTIME_H=0
  fi
  AC_SUBST([HAVE_UTIME_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <utime.h>
    ]],
    [utime])
])
m4trace:m4/utime_h.m4:35: -1- AC_DEFUN([gl_UTIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_UTIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/utime_h.m4:47: -1- AC_DEFUN([gl_UTIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_UTIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIME])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UTIME], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_UTIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_UTIME_H_DEFAULTS])
])
m4trace:m4/utime_h.m4:58: -1- AC_DEFUN([gl_UTIME_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_UTIME=1;              AC_SUBST([HAVE_UTIME])
  REPLACE_UTIME=0;           AC_SUBST([REPLACE_UTIME])
])
m4trace:m4/utimens.m4:8: -1- AC_DEFUN([gl_UTIMENS], [
  dnl Prerequisites of lib/utimens.c.
  AC_REQUIRE([gl_FUNC_UTIMES])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([futimes futimesat futimens utimensat lutimes])

  if test $ac_cv_func_futimens = no && test $ac_cv_func_futimesat = yes; then
    dnl FreeBSD 8.0-rc2 mishandles futimesat(fd,NULL,time).  It is not
    dnl standardized, but Solaris implemented it first and uses it as
    dnl its only means to set fd time.
    AC_CACHE_CHECK([whether futimesat handles NULL file],
      [gl_cv_func_futimesat_works],
      [touch conftest.file
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stddef.h>
#include <sys/times.h>
#include <fcntl.h>
]GL_MDA_DEFINES],
        [[int fd = open ("conftest.file", O_RDWR);
          if (fd < 0) return 1;
          if (futimesat (fd, NULL, NULL)) return 2;
        ]])],
        [gl_cv_func_futimesat_works=yes],
        [gl_cv_func_futimesat_works=no],
        [case "$host_os" in
                            # Guess yes on Linux systems.
           linux-* | linux) gl_cv_func_futimesat_works="guessing yes" ;;
                            # Guess yes on glibc systems.
           *-gnu*)          gl_cv_func_futimesat_works="guessing yes" ;;
                            # If we don't know, obey --enable-cross-guesses.
           *)               gl_cv_func_futimesat_works="$gl_cross_guess_normal" ;;
         esac
        ])
      rm -f conftest.file])
    case "$gl_cv_func_futimesat_works" in
      *yes) ;;
      *)
        AC_DEFINE([FUTIMESAT_NULL_BUG], [1],
          [Define to 1 if futimesat mishandles a NULL file name.])
        ;;
    esac
  fi
])
m4trace:m4/utimes.m4:21: -1- AC_DEFUN([gl_FUNC_UTIMES], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether the utimes function works],
                 [gl_cv_func_working_utimes],
    [AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/time.h>
#include <time.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <utime.h>
#include <errno.h>
]GL_MDA_DEFINES[

static int
inorder (time_t a, time_t b, time_t c)
{
  return a <= b && b <= c;
}

int
main ()
{
  int result = 0;
  char const *file = "conftest.utimes";
  /* On OS/2, file timestamps must be on or after 1980 in local time,
     with an even number of seconds.  */
  static struct timeval timeval[2] = {{315620000 + 10, 10},
                                      {315620000 + 1000000, 999998}};

  /* Test whether utimes() essentially works.  */
  {
    struct stat sbuf;
    FILE *f = fopen (file, "w");
    if (f == NULL)
      result |= 1;
    else if (fclose (f) != 0)
      result |= 1;
    else if (utimes (file, timeval) != 0)
      result |= 2;
    else if (lstat (file, &sbuf) != 0)
      result |= 1;
    else if (!(sbuf.st_atime == timeval[0].tv_sec
               && sbuf.st_mtime == timeval[1].tv_sec))
      result |= 4;
    if (unlink (file) != 0)
      result |= 1;
  }

  /* Test whether utimes() with a NULL argument sets the file's timestamp
     to the current time.  Use 'fstat' as well as 'time' to
     determine the "current" time, to accommodate NFS file systems
     if there is a time skew between the host and the NFS server.  */
  {
    int fd = open (file, O_WRONLY|O_CREAT, 0644);
    if (fd < 0)
      result |= 1;
    else
      {
        time_t t0, t2;
        struct stat st0, st1, st2;
        if (time (&t0) == (time_t) -1)
          result |= 1;
        else if (fstat (fd, &st0) != 0)
          result |= 1;
        else if (utimes (file, timeval) != 0
                 && (errno != EACCES
                     /* OS/2 kLIBC utimes fails on opened files.  */
                     || close (fd) != 0
                     || utimes (file, timeval) != 0
                     || (fd = open (file, O_WRONLY)) < 0))
          result |= 2;
        else if (utimes (file, NULL) != 0
                 && (errno != EACCES
                     /* OS/2 kLIBC utimes fails on opened files.  */
                     || close (fd) != 0
                     || utimes (file, NULL) != 0
                     || (fd = open (file, O_WRONLY)) < 0))
          result |= 8;
        else if (fstat (fd, &st1) != 0)
          result |= 1;
        else if (write (fd, "\n", 1) != 1)
          result |= 1;
        else if (fstat (fd, &st2) != 0)
          result |= 1;
        else if (time (&t2) == (time_t) -1)
          result |= 1;
        else
          {
            int m_ok_POSIX = inorder (t0, st1.st_mtime, t2);
            int m_ok_NFS = inorder (st0.st_mtime, st1.st_mtime, st2.st_mtime);
            if (! (st1.st_atime == st1.st_mtime))
              result |= 16;
            if (! (m_ok_POSIX || m_ok_NFS))
              result |= 32;
          }
        if (close (fd) != 0)
          result |= 1;
      }
    if (unlink (file) != 0)
      result |= 1;
  }

  /* Test whether utimes() with a NULL argument works on read-only files.  */
  {
    int fd = open (file, O_WRONLY|O_CREAT, 0444);
    if (fd < 0)
      result |= 1;
    else if (close (fd) != 0)
      result |= 1;
    else if (utimes (file, NULL) != 0)
      result |= 64;
    if (unlink (file) != 0)
      result |= 1;
  }

  return result;
}
  ]])],
       [gl_cv_func_working_utimes=yes],
       [gl_cv_func_working_utimes=no],
       [case "$host_os" in
                   # Guess yes on musl systems.
          *-musl*) gl_cv_func_working_utimes="guessing yes" ;;
                   # Guess no on native Windows.
          mingw*)  gl_cv_func_working_utimes="guessing no" ;;
          *)       gl_cv_func_working_utimes="$gl_cross_guess_normal" ;;
        esac
       ])
    ])

  case "$gl_cv_func_working_utimes" in
    *yes)
      AC_DEFINE([HAVE_WORKING_UTIMES], [1], [Define if utimes works properly.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:7: -1- AC_DEFUN([gl_FUNC_VASNPRINTF], [
  AC_CHECK_FUNCS_ONCE([vasnprintf])
  if test $ac_cv_func_vasnprintf = no; then
    gl_REPLACE_VASNPRINTF
  fi
])
m4trace:m4/vasnprintf.m4:15: -1- AC_DEFUN([gl_REPLACE_VASNPRINTF], [
  AC_CHECK_FUNCS_ONCE([vasnprintf])
  AC_LIBOBJ([vasnprintf])
  AC_LIBOBJ([printf-args])
  AC_LIBOBJ([printf-parse])
  AC_LIBOBJ([asnprintf])
  if test $ac_cv_func_vasnprintf = yes; then
    AC_DEFINE([REPLACE_VASNPRINTF], [1],
      [Define if vasnprintf exists but is overridden by gnulib.])
  fi
  gl_PREREQ_PRINTF_ARGS
  gl_PREREQ_PRINTF_PARSE
  gl_PREREQ_VASNPRINTF
  gl_PREREQ_ASNPRINTF
])
m4trace:m4/vasnprintf.m4:33: -1- AC_DEFUN([gl_PREREQ_PRINTF_ARGS], [
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
])
m4trace:m4/vasnprintf.m4:40: -1- AC_DEFUN([gl_PREREQ_PRINTF_PARSE], [
  AC_REQUIRE([gl_FEATURES_H])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  AC_REQUIRE([AC_TYPE_SIZE_T])
  AC_CHECK_TYPE([ptrdiff_t], ,
    [AC_DEFINE([ptrdiff_t], [long],
       [Define as the type of the result of subtracting two pointers, if the system doesn't define it.])
    ])
  AC_REQUIRE([gt_AC_TYPE_INTMAX_T])
])
m4trace:m4/vasnprintf.m4:54: -1- AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  AC_CHECK_FUNCS([snprintf strnlen wcslen wcsnlen mbrtowc wcrtomb])
  dnl Use the _snprintf function only if it is declared (because on NetBSD it
  dnl is defined as a weak alias of snprintf; we prefer to use the latter).
  AC_CHECK_DECLS([_snprintf], , , [[#include <stdio.h>]])
  dnl Knowing DBL_EXPBIT0_WORD and DBL_EXPBIT0_BIT enables an optimization
  dnl in the code for NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_DOUBLE.
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
  dnl We can avoid a lot of code by assuming that snprintf's return value
  dnl conforms to ISO C99. So check that.
  AC_REQUIRE([gl_SNPRINTF_RETVAL_C99])
  case "$gl_cv_func_snprintf_retval_c99" in
    *yes)
      AC_DEFINE([HAVE_SNPRINTF_RETVAL_C99], [1],
        [Define if the return value of the snprintf function is the number of
         of bytes (excluding the terminating NUL) that would have been produced
         if the buffer had been large enough.])
      ;;
  esac
  dnl Additionally, the use of %n can be eliminated by assuming that snprintf
  dnl always produces NUL-terminated strings (no truncation).
  AC_REQUIRE([gl_SNPRINTF_TRUNCATION_C99])
  case "$gl_cv_func_snprintf_truncation_c99" in
    *yes)
      AC_DEFINE([HAVE_SNPRINTF_TRUNCATION_C99], [1],
        [Define if the string produced by the snprintf function is always NUL
         terminated.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:91: -1- AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  case "$gl_cv_func_printf_long_double" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:107: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_INFINITE])
  case "$gl_cv_func_printf_infinite" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_INFINITE_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         infinite 'double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:123: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_INFINITE_LONG_DOUBLE])
  dnl There is no need to set NEED_PRINTF_INFINITE_LONG_DOUBLE if
  dnl NEED_PRINTF_LONG_DOUBLE is already set.
  AC_REQUIRE([gl_PREREQ_VASNPRINTF_LONG_DOUBLE])
  case "$gl_cv_func_printf_long_double" in
    *yes)
      case "$gl_cv_func_printf_infinite_long_double" in
        *yes)
          ;;
        *)
          AC_DEFINE([NEED_PRINTF_INFINITE_LONG_DOUBLE], [1],
            [Define if the vasnprintf implementation needs special code for
             infinite 'long double' arguments.])
          ;;
      esac
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:145: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_A], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_A])
  case "$gl_cv_func_printf_directive_a" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_A], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'a' and 'A' directives.])
      AC_CHECK_FUNCS([nl_langinfo])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:161: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_F], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_F])
  case "$gl_cv_func_printf_directive_f" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_F], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'F' directive.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:176: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_LS], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_LS])
  case "$gl_cv_func_printf_directive_ls" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_LS], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'ls' directive.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:191: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_GROUPING], [
  AC_REQUIRE([gl_PRINTF_FLAG_GROUPING])
  case "$gl_cv_func_printf_flag_grouping" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_GROUPING], [1],
        [Define if the vasnprintf implementation needs special code for the
         ' flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:206: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST], [
  AC_REQUIRE([gl_PRINTF_FLAG_LEFTADJUST])
  case "$gl_cv_func_printf_flag_leftadjust" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_LEFTADJUST], [1],
        [Define if the vasnprintf implementation needs special code for the
         '-' flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:221: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_ZERO], [
  AC_REQUIRE([gl_PRINTF_FLAG_ZERO])
  case "$gl_cv_func_printf_flag_zero" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_ZERO], [1],
        [Define if the vasnprintf implementation needs special code for the
         0 flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:236: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_PRECISION], [
  AC_REQUIRE([gl_PRINTF_PRECISION])
  case "$gl_cv_func_printf_precision" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_UNBOUNDED_PRECISION], [1],
        [Define if the vasnprintf implementation needs special code for
         supporting large precisions without arbitrary bounds.])
      AC_DEFINE([NEED_PRINTF_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'double' arguments.])
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:258: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_ENOMEM], [
  AC_REQUIRE([gl_PRINTF_ENOMEM])
  case "$gl_cv_func_printf_enomem" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_ENOMEM], [1],
        [Define if the vasnprintf implementation needs special code for
         surviving out-of-memory conditions.])
      AC_DEFINE([NEED_PRINTF_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'double' arguments.])
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:279: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_WITH_EXTRAS], [
  AC_REQUIRE([gl_PREREQ_VASNPRINTF])
  gl_PREREQ_VASNPRINTF_LONG_DOUBLE
  gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
  gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
  gl_PREREQ_VASNPRINTF_DIRECTIVE_A
  gl_PREREQ_VASNPRINTF_DIRECTIVE_F
  gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
  gl_PREREQ_VASNPRINTF_FLAG_GROUPING
  gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
  gl_PREREQ_VASNPRINTF_FLAG_ZERO
  gl_PREREQ_VASNPRINTF_PRECISION
  gl_PREREQ_VASNPRINTF_ENOMEM
])
m4trace:m4/vasnprintf.m4:296: -1- AC_DEFUN([gl_PREREQ_ASNPRINTF], [
])
m4trace:m4/warn-on-use.m4:26: -1- AC_DEFUN([gl_WARN_ON_USE_PREPARE], [
  m4_ifdef([gl_POSIXCHECK],
    [m4_foreach_w([gl_decl], [$2],
       [AH_TEMPLATE([HAVE_RAW_DECL_]AS_TR_CPP(m4_defn([gl_decl])),
         [Define to 1 if ]m4_defn([gl_decl])[ is declared even after
          undefining macros.])])dnl
     for gl_func in m4_flatten([$2]); do
       AS_VAR_PUSHDEF([gl_Symbol], [gl_cv_have_raw_decl_$gl_func])dnl
       AC_CACHE_CHECK([whether $gl_func is declared without a macro],
         [gl_Symbol],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([$1],
[[#undef $gl_func
  (void) $gl_func;]])],
           [AS_VAR_SET([gl_Symbol], [yes])], [AS_VAR_SET([gl_Symbol], [no])])])
       AS_VAR_IF([gl_Symbol], [yes],
         [AC_DEFINE_UNQUOTED(AS_TR_CPP([HAVE_RAW_DECL_$gl_func]), [1])
          dnl shortcut - if the raw declaration exists, then set a cache
          dnl variable to allow skipping any later AC_CHECK_DECL efforts
          eval ac_cv_have_decl_$gl_func=yes])
       AS_VAR_POPDEF([gl_Symbol])dnl
     done
    ])
])
m4trace:m4/wchar_h.m4:12: -1- AC_DEFUN_ONCE([gl_WCHAR_H], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_WCHAR_H_INLINE_OK])
  dnl Prepare for creating substitute <wchar.h>.
  dnl Check for <wchar.h> (missing in Linux uClibc when built without wide
  dnl character support).
  dnl <wchar.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  AC_REQUIRE([gl_FEATURES_H])

  AC_REQUIRE([gt_TYPE_WINT_T])
  if test $gt_cv_c_wint_t = yes; then
    HAVE_WINT_T=1
  else
    HAVE_WINT_T=0
  fi
  AC_SUBST([HAVE_WINT_T])

  AC_REQUIRE([gl_TYPE_WINT_T_PREREQ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]],
    [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS([wcsdup], [], [], [[
      #include <wchar.h>
    ]])
  if test $ac_cv_have_decl_wcsdup = no; then
    HAVE_DECL_WCSDUP=0
  fi
])
m4trace:m4/wchar_h.m4:64: -1- AC_DEFUN([gl_WCHAR_H_INLINE_OK], [
  dnl Test whether <wchar.h> suffers due to the transition from '__inline' to
  dnl 'gnu_inline'. See <https://sourceware.org/bugzilla/show_bug.cgi?id=4022>
  dnl and <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42440>. In summary,
  dnl glibc version 2.5 or older, together with gcc version 4.3 or newer and
  dnl the option -std=c99 or -std=gnu99, leads to a broken <wchar.h>.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether <wchar.h> uses 'inline' correctly],
    [gl_cv_header_wchar_h_correct_inline],
    [gl_cv_header_wchar_h_correct_inline=yes
     case "$host_os" in
       *-gnu* | gnu*)
         AC_LANG_CONFTEST([
           AC_LANG_SOURCE([[
             #define wcstod renamed_wcstod
             #include <wchar.h>
             extern int zero (void);
             int main () { return zero(); }
           ]])])
         dnl Do not rename the object file from conftest.$ac_objext to
         dnl conftest1.$ac_objext, as this will cause the link to fail on
         dnl z/OS when using the XPLINK object format (due to duplicate
         dnl CSECT names). Instead, temporarily redefine $ac_compile so
         dnl that the object file has the latter name from the start.
         save_ac_compile="$ac_compile"
         ac_compile=`echo "$save_ac_compile" | sed s/conftest/conftest1/`
         if echo '#include "conftest.c"' >conftest1.c \
            && AC_TRY_EVAL([ac_compile]); then
           AC_LANG_CONFTEST([
             AC_LANG_SOURCE([[
               #define wcstod renamed_wcstod
               #include <wchar.h>
               int zero (void) { return 0; }
             ]])])
           dnl See note above about renaming object files.
           ac_compile=`echo "$save_ac_compile" | sed s/conftest/conftest2/`
           if echo '#include "conftest.c"' >conftest2.c \
              && AC_TRY_EVAL([ac_compile]); then
             if $CC -o conftest$ac_exeext $CFLAGS $LDFLAGS conftest1.$ac_objext conftest2.$ac_objext $LIBS >&AS_MESSAGE_LOG_FD 2>&1; then
               :
             else
               gl_cv_header_wchar_h_correct_inline=no
             fi
           fi
         fi
         ac_compile="$save_ac_compile"
         rm -f conftest[12].c conftest[12].$ac_objext conftest$ac_exeext
         ;;
     esac
    ])
  if test $gl_cv_header_wchar_h_correct_inline = no; then
    AC_MSG_ERROR([<wchar.h> cannot be used with this compiler ($CC $CFLAGS $CPPFLAGS).
This is a known interoperability problem of glibc <= 2.5 with gcc >= 4.3 in
C99 mode. You have four options:
  - Add the flag -fgnu89-inline to CC and reconfigure, or
  - Fix your include files, using parts of
    <https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=b037a293a48718af30d706c2e18c929d0e69a621>, or
  - Use a gcc version older than 4.3, or
  - Don't use the flags -std=c99 or -std=gnu99.
Configuration aborted.])
  fi
])
m4trace:m4/wchar_h.m4:132: -1- AC_DEFUN([gl_WCHAR_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_WCHAR_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/wchar_h.m4:144: -1- AC_DEFUN([gl_WCHAR_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
])
m4trace:m4/wchar_h.m4:197: -1- AC_DEFUN([gl_WCHAR_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_BTOWC=1;         AC_SUBST([HAVE_BTOWC])
  HAVE_MBSINIT=1;       AC_SUBST([HAVE_MBSINIT])
  HAVE_MBRTOWC=1;       AC_SUBST([HAVE_MBRTOWC])
  HAVE_MBRLEN=1;        AC_SUBST([HAVE_MBRLEN])
  HAVE_MBSRTOWCS=1;     AC_SUBST([HAVE_MBSRTOWCS])
  HAVE_MBSNRTOWCS=1;    AC_SUBST([HAVE_MBSNRTOWCS])
  HAVE_WCRTOMB=1;       AC_SUBST([HAVE_WCRTOMB])
  HAVE_WCSRTOMBS=1;     AC_SUBST([HAVE_WCSRTOMBS])
  HAVE_WCSNRTOMBS=1;    AC_SUBST([HAVE_WCSNRTOMBS])
  HAVE_WMEMCHR=1;       AC_SUBST([HAVE_WMEMCHR])
  HAVE_WMEMCMP=1;       AC_SUBST([HAVE_WMEMCMP])
  HAVE_WMEMCPY=1;       AC_SUBST([HAVE_WMEMCPY])
  HAVE_WMEMMOVE=1;      AC_SUBST([HAVE_WMEMMOVE])
  HAVE_WMEMPCPY=1;      AC_SUBST([HAVE_WMEMPCPY])
  HAVE_WMEMSET=1;       AC_SUBST([HAVE_WMEMSET])
  HAVE_WCSLEN=1;        AC_SUBST([HAVE_WCSLEN])
  HAVE_WCSNLEN=1;       AC_SUBST([HAVE_WCSNLEN])
  HAVE_WCSCPY=1;        AC_SUBST([HAVE_WCSCPY])
  HAVE_WCPCPY=1;        AC_SUBST([HAVE_WCPCPY])
  HAVE_WCSNCPY=1;       AC_SUBST([HAVE_WCSNCPY])
  HAVE_WCPNCPY=1;       AC_SUBST([HAVE_WCPNCPY])
  HAVE_WCSCAT=1;        AC_SUBST([HAVE_WCSCAT])
  HAVE_WCSNCAT=1;       AC_SUBST([HAVE_WCSNCAT])
  HAVE_WCSCMP=1;        AC_SUBST([HAVE_WCSCMP])
  HAVE_WCSNCMP=1;       AC_SUBST([HAVE_WCSNCMP])
  HAVE_WCSCASECMP=1;    AC_SUBST([HAVE_WCSCASECMP])
  HAVE_WCSNCASECMP=1;   AC_SUBST([HAVE_WCSNCASECMP])
  HAVE_WCSCOLL=1;       AC_SUBST([HAVE_WCSCOLL])
  HAVE_WCSXFRM=1;       AC_SUBST([HAVE_WCSXFRM])
  HAVE_WCSDUP=1;        AC_SUBST([HAVE_WCSDUP])
  HAVE_WCSCHR=1;        AC_SUBST([HAVE_WCSCHR])
  HAVE_WCSRCHR=1;       AC_SUBST([HAVE_WCSRCHR])
  HAVE_WCSCSPN=1;       AC_SUBST([HAVE_WCSCSPN])
  HAVE_WCSSPN=1;        AC_SUBST([HAVE_WCSSPN])
  HAVE_WCSPBRK=1;       AC_SUBST([HAVE_WCSPBRK])
  HAVE_WCSSTR=1;        AC_SUBST([HAVE_WCSSTR])
  HAVE_WCSTOK=1;        AC_SUBST([HAVE_WCSTOK])
  HAVE_WCSWIDTH=1;      AC_SUBST([HAVE_WCSWIDTH])
  HAVE_WCSFTIME=1;      AC_SUBST([HAVE_WCSFTIME])
  HAVE_DECL_WCTOB=1;    AC_SUBST([HAVE_DECL_WCTOB])
  HAVE_DECL_WCSDUP=1;   AC_SUBST([HAVE_DECL_WCSDUP])
  HAVE_DECL_WCWIDTH=1;  AC_SUBST([HAVE_DECL_WCWIDTH])
  REPLACE_MBSTATE_T=0;  AC_SUBST([REPLACE_MBSTATE_T])
  REPLACE_BTOWC=0;      AC_SUBST([REPLACE_BTOWC])
  REPLACE_WCTOB=0;      AC_SUBST([REPLACE_WCTOB])
  REPLACE_MBSINIT=0;    AC_SUBST([REPLACE_MBSINIT])
  REPLACE_MBRTOWC=0;    AC_SUBST([REPLACE_MBRTOWC])
  REPLACE_MBRLEN=0;     AC_SUBST([REPLACE_MBRLEN])
  REPLACE_MBSRTOWCS=0;  AC_SUBST([REPLACE_MBSRTOWCS])
  REPLACE_MBSNRTOWCS=0; AC_SUBST([REPLACE_MBSNRTOWCS])
  REPLACE_WCRTOMB=0;    AC_SUBST([REPLACE_WCRTOMB])
  REPLACE_WCSRTOMBS=0;  AC_SUBST([REPLACE_WCSRTOMBS])
  REPLACE_WCSNRTOMBS=0; AC_SUBST([REPLACE_WCSNRTOMBS])
  REPLACE_WCWIDTH=0;    AC_SUBST([REPLACE_WCWIDTH])
  REPLACE_WCSWIDTH=0;   AC_SUBST([REPLACE_WCSWIDTH])
  REPLACE_WCSFTIME=0;   AC_SUBST([REPLACE_WCSFTIME])
  REPLACE_WCSTOK=0;     AC_SUBST([REPLACE_WCSTOK])
])
m4trace:m4/wchar_t.m4:11: -1- AC_DEFUN([gt_TYPE_WCHAR_T], [
  AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            wchar_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wchar_t=yes],
       [gt_cv_c_wchar_t=no])])
  if test $gt_cv_c_wchar_t = yes; then
    AC_DEFINE([HAVE_WCHAR_T], [1], [Define if you have the 'wchar_t' type.])
  fi
])
m4trace:m4/wint_t.m4:12: -1- AC_DEFUN([gt_TYPE_WINT_T], [
  AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            wint_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wint_t=yes],
       [gt_cv_c_wint_t=no])])
  if test $gt_cv_c_wint_t = yes; then
    AC_DEFINE([HAVE_WINT_T], [1], [Define if you have the 'wint_t' type.])

    dnl Determine whether gnulib's <wchar.h> or <wctype.h> would, if present,
    dnl override 'wint_t'.
    AC_CACHE_CHECK([whether wint_t is large enough],
      [gl_cv_type_wint_t_large_enough],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <wchar.h>
              int verify[sizeof (wint_t) < sizeof (int) ? -1 : 1];
            ]])],
         [gl_cv_type_wint_t_large_enough=yes],
         [gl_cv_type_wint_t_large_enough=no])])
    if test $gl_cv_type_wint_t_large_enough = no; then
      GNULIBHEADERS_OVERRIDE_WINT_T=1
    else
      GNULIBHEADERS_OVERRIDE_WINT_T=0
    fi
  else
    GNULIBHEADERS_OVERRIDE_WINT_T=0
  fi
  AC_SUBST([GNULIBHEADERS_OVERRIDE_WINT_T])
])
m4trace:m4/wint_t.m4:48: -1- AC_DEFUN([gl_TYPE_WINT_T_PREREQ], [
  AC_CHECK_HEADERS_ONCE([crtdefs.h])
  if test $ac_cv_header_crtdefs_h = yes; then
    HAVE_CRTDEFS_H=1
  else
    HAVE_CRTDEFS_H=0
  fi
  AC_SUBST([HAVE_CRTDEFS_H])
])
m4trace:m4/xalloc.m4:7: -1- AC_DEFUN([gl_XALLOC], [:])
m4trace:m4/xsize.m4:7: -1- AC_DEFUN([gl_XSIZE], [
  dnl Prerequisites of lib/xsize.h.
  AC_REQUIRE([gl_SIZE_MAX])
  AC_CHECK_HEADERS([stdint.h])
])
m4trace:m4/year2038.m4:10: -1- AC_DEFUN([gl_YEAR2038_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_DEFINE([__MINGW_USE_VC2005_COMPAT], [1],
        [For 64-bit time_t on 32-bit mingw.])
      ;;
  esac
])
m4trace:m4/year2038.m4:23: -1- AC_DEFUN([gl_YEAR2038_TEST_INCLUDES], [[
  #include <time.h>
  /* Check that time_t can represent 2**32 - 1 correctly.  */
  #define LARGE_TIME_T \\
    ((time_t) (((time_t) 1 << 30) - 1 + 3 * ((time_t) 1 << 30)))
  int verify_time_t_range[(LARGE_TIME_T / 65537 == 65535
                           && LARGE_TIME_T % 65537 == 0)
                          ? 1 : -1];
]])
m4trace:m4/year2038.m4:36: -1- AC_DEFUN([gl_YEAR2038_BODY], [
 AC_ARG_ENABLE([year2038],
   [  --disable-year2038      omit support for timestamps past the year 2038])
 AS_IF([test "$enable_year2038" != no],
 [
  dnl On many systems, time_t is already a 64-bit type.
  dnl On those systems where time_t is still 32-bit, it requires kernel
  dnl and libc support to make it 64-bit. For glibc 2.34 and later on Linux,
  dnl defining _TIME_BITS=64 and _FILE_OFFSET_BITS=64 is needed on x86 and ARM.
  dnl
  dnl On native Windows, the system include files define types __time32_t
  dnl and __time64_t. By default, time_t is an alias of
  dnl   - __time32_t on 32-bit mingw,
  dnl   - __time64_t on 64-bit mingw and on MSVC (since MSVC 8).
  dnl But when compiling with -D__MINGW_USE_VC2005_COMPAT, time_t is an
  dnl alias of __time64_t.
  dnl And when compiling with -D_USE_32BIT_TIME_T, time_t is an alias of
  dnl __time32_t.
  AC_CACHE_CHECK([for time_t past the year 2038], [gl_cv_type_time_t_y2038],
    [AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE([gl_YEAR2038_TEST_INCLUDES])],
       [gl_cv_type_time_t_y2038=yes], [gl_cv_type_time_t_y2038=no])
    ])
  if test "$gl_cv_type_time_t_y2038" = no; then
    AC_CACHE_CHECK([for 64-bit time_t with _TIME_BITS=64],
      [gl_cv_type_time_t_bits_macro],
      [AC_COMPILE_IFELSE(
         [AC_LANG_SOURCE([[#define _TIME_BITS 64
                           #define _FILE_OFFSET_BITS 64
                           ]gl_YEAR2038_TEST_INCLUDES])],
         [gl_cv_type_time_t_bits_macro=yes],
         [gl_cv_type_time_t_bits_macro=no])
      ])
    if test "$gl_cv_type_time_t_bits_macro" = yes; then
      AC_DEFINE([_TIME_BITS], [64],
        [Number of bits in a timestamp, on hosts where this is settable.])
      dnl AC_SYS_LARGFILE also defines this; it's OK if we do too.
      AC_DEFINE([_FILE_OFFSET_BITS], [64],
        [Number of bits in a file offset, on hosts where this is settable.])
      gl_cv_type_time_t_y2038=yes
    fi
  fi
  if test $gl_cv_type_time_t_y2038 = no; then
    AC_COMPILE_IFELSE(
      [AC_LANG_SOURCE(
         [[#ifdef _USE_32BIT_TIME_T
             int ok;
           #else
             error fail
           #endif
         ]])],
      [AC_MSG_FAILURE(
         [The 'time_t' type stops working after January 2038.
          Remove _USE_32BIT_TIME_T from the compiler flags.])],
      [# If not cross-compiling and $1 says we should check,
       # and 'touch' works with a large timestamp, then evidently wider time_t
       # is desired and supported, so fail and ask the builder to fix the
       # problem.  Otherwise, just warn the builder.
       m4_ifval([$1],
         [if test $cross_compiling = no \
             && TZ=UTC0 touch -t 210602070628.15 conftest.time 2>/dev/null; then
            case `TZ=UTC0 LC_ALL=C ls -l conftest.time 2>/dev/null` in
              *'Feb  7  2106'* | *'Feb  7 17:10'*)
                AC_MSG_FAILURE(
                  [The 'time_t' type stops working after January 2038,
                   and your system appears to support a wider 'time_t'.
                   Try configuring with 'CC="${CC} -m64"'.
                   To build with a 32-bit time_t anyway (not recommended),
                   configure with '--disable-year2038'.]);;
            esac
            rm -f conftest.time
          fi])
       if test "$gl_warned_about_y2038" != yes; then
         AC_MSG_WARN(
           [The 'time_t' type stops working after January 2038,
            and this package needs a wider 'time_t' type
            if there is any way to access timestamps after that.
            Configure with 'CC="${CC} -m64"' perhaps?])
         gl_warned_about_y2038=yes
       fi
      ])
  fi])
])
m4trace:m4/year2038.m4:121: -1- AC_DEFUN([gl_YEAR2038], [
  gl_YEAR2038_BODY([require-year2038-safe])
])
m4trace:m4/zzgnulib.m4:23: -1- AC_DEFUN([gl_ZZGNULIB])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:20: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:27: -1- AM_INIT_AUTOMAKE([1.14 color-tests])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:27: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:27: -1- AM_AUTOMAKE_VERSION([1.16.5])
m4trace:configure.ac:27: -1- _AM_AUTOCONF_VERSION([2.71])
m4trace:configure.ac:27: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:27: -1- _AM_SET_OPTIONS([1.14 color-tests])
m4trace:configure.ac:27: -1- _AM_SET_OPTION([1.14])
m4trace:configure.ac:27: -2- _AM_MANGLE_OPTION([1.14])
m4trace:configure.ac:27: -1- _AM_SET_OPTION([color-tests])
m4trace:configure.ac:27: -2- _AM_MANGLE_OPTION([color-tests])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:27: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:27: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:27: -1- AM_SANITY_CHECK
m4trace:configure.ac:27: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:27: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:27: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:27: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:27: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:27: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:27: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:27: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:27: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:27: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:27: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:27: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:27: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:27: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:27: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:27: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:27: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:27: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:27: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:27: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:27: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CTAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ETAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CSCOPE$])
m4trace:configure.ac:27: -1- AM_SILENT_RULES
m4trace:configure.ac:27: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:27: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:27: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:28: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:28: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:28: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:30: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:32: -1- AC_PROG_CC
m4trace:configure.ac:32: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:32: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:32: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:32: -1- gl_COMPILER_CLANG
m4trace:configure.ac:32: -1- gl_COMPILER_PREPARE_CHECK_DECL
m4trace:configure.ac:32: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:32: -1- AM_SET_DEPDIR
m4trace:configure.ac:32: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:32: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:32: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:32: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:32: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:32: -1- AM_DEP_TRACK
m4trace:configure.ac:32: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:32: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:32: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:32: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:32: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:32: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:32: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:32: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:32: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:32: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:32: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:32: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:32: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:32: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:33: -1- gl_EARLY
m4trace:configure.ac:33: -1- m4_pattern_forbid([^gl_[A-Z]])
m4trace:configure.ac:33: -1- m4_pattern_allow([^gl_ES$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:33: -1- gl_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:33: -1- AC_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:33: -1- AC_CHECK_INCLUDES_DEFAULT
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_stdio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdio.h ]AS_TR_SH([stdio.h]) AS_TR_CPP([HAVE_stdio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_stdlib_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdlib.h ]AS_TR_SH([stdlib.h]) AS_TR_CPP([HAVE_stdlib.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_string_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" string.h ]AS_TR_SH([string.h]) AS_TR_CPP([HAVE_string.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_strings_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" strings.h ]AS_TR_SH([strings.h]) AS_TR_CPP([HAVE_strings.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- AC_DEFUN([_AC_Header_minix_config_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" minix/config.h ]AS_TR_SH([minix/config.h]) AS_TR_CPP([HAVE_minix/config.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_HPUX_ALT_XOPEN_SOCKET_API$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_OPENBSD_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_ATTRIBS_EXT__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_BFP_EXT__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_DFP_EXT__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_FUNCS_EXT__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_TYPES_EXT__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_LIB_EXT2__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__STDC_WANT_MATH_SPEC_FUNCS__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_ISOC11_SOURCE$])
m4trace:configure.ac:33: -1- gl_PROG_AR_RANLIB
m4trace:configure.ac:33: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:33: -1- gl_FP_IEEE
m4trace:configure.ac:33: -1- AC_SYS_LARGEFILE
m4trace:configure.ac:33: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:33: -1- gl_YEAR2038_BODY([])
m4trace:configure.ac:33: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:33: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:33: -1- m4_pattern_allow([^_TIME_BITS$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:33: -1- gl_YEAR2038_EARLY
m4trace:configure.ac:33: -1- m4_pattern_allow([^__MINGW_USE_VC2005_COMPAT$])
m4trace:configure.ac:33: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:34: -1- gl_INIT
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:34: -1- gl_COMMON
m4trace:configure.ac:34: -1- gl_00GNULIB
m4trace:configure.ac:34: -1- gl_COMMON_BODY
m4trace:configure.ac:34: -1- gl_ZZGNULIB
m4trace:configure.ac:34: -1- gl_FUNC_ALLOCA
m4trace:configure.ac:34: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:34: -1- gl_PREREQ_ALLOCA
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:34: -1- gl_FUNC_CALLOC_GNU
m4trace:configure.ac:34: -1- gl_STDLIB_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE__EXIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ALIGNED_ALLOC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETLOADAVG$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETSUBOPT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_INITSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_INITSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKDTEMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKOSTEMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKOSTEMPS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKSTEMPS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_POSIX_OPENPT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTSNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTSNAME_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_QSORT_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RANDOM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RANDOM_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RANDOM_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SECURE_GETENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SETENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SETSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_SETSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRTOD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRTOL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRTOLD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRTOUL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_RANDOM_DATA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UNLOCKPT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ALIGNED_ALLOC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CALLOC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FREE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_INITSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MALLOC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKSTEMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_POSIX_MEMALIGN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTSNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTSNAME_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PUTENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_QSORT_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RANDOM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RANDOM_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REALLOC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REALLOCARRAY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REALPATH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SETENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SETSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOLD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOLL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOUL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOULL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_UNSETENV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCTOMB$])
m4trace:configure.ac:34: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:34: -1- gl_FUNC_MALLOC_POSIX
m4trace:configure.ac:34: -1- gl_FUNC_MALLOC_PTRDIFF
m4trace:configure.ac:34: -1- gl_CHECK_MALLOC_PTRDIFF
m4trace:configure.ac:34: -1- gl_CHECK_MALLOC_POSIX
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MALLOC_POSIX$])
m4trace:configure.ac:34: -1- _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC=1])
m4trace:configure.ac:34: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/calloc.m4:18: _AC_FUNC_CALLOC_IF is expanded from...
m4/calloc.m4:57: gl_FUNC_CALLOC_GNU is expanded from...
m4/gnulib-comp.m4:176: gl_INIT is expanded from...
configure.ac:34: the top level])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:34: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:34: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:34: -1- gl_STDLIB_MODULE_INDICATOR([calloc-posix])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB__EXIT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ALIGNED_ALLOC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ATOLL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CALLOC_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FREE_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETLOADAVG$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETSUBOPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GRANTPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MALLOC_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBTOWC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKDTEMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMPS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMPS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_POSIX_MEMALIGN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_POSIX_OPENPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PUTENV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_QSORT_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RANDOM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RANDOM_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REALLOCARRAY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REALLOC_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REALPATH$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RPMATCH$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SECURE_GETENV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SETENV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOLD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOLL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOUL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOULL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SYSTEM_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNLOCKPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNSETENV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCTOMB$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_ECVT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCVT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_GCVT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKTEMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTENV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-posix])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-posix])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_CALLOC_POSIX$])
m4trace:configure.ac:34: -1- gl_CLOCK_TIME
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_CLOCK_GETTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CLOCK_GETTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CLOCK_SETTIME$])
m4trace:configure.ac:34: -1- gl_FUNC_DUP2
m4trace:configure.ac:34: -1- gl_UNISTD_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COPY_FILE_RANGE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DUP3$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EXECVPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FCHDIR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FCHOWNAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETENTROPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETLOGIN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETPASS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GROUP_MEMBER$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PIPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PWRITE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_READLINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_READLINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SETHOSTNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYMLINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYMLINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UNLINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_USLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ENVIRON$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETDOMAINNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETPAGESIZE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_SETHOSTNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_TRUNCATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ACCESS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CHOWN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CLOSE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_DUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_DUP2$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECLE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECLP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECVE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECVP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXECVPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FACCESSAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FCHOWNAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FTRUNCATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETCWD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETDOMAINNAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETDTABLESIZE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETLOGIN_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETGROUPS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETPAGESIZE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETPASS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ISATTY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LCHOWN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LSEEK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PWRITE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_READ$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_READLINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_READLINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RMDIR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SYMLINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SYMLINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TRUNCATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TTYNAME_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_UNLINK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_UNLINKAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_USLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WRITE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UNISTD_H_HAVE_SYS_RANDOM_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:34: -1- GL_MDA_DEFINES
m4trace:configure.ac:34: -1- _GL_MDA_DEFINES
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SETDTABLESIZE$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([dup2.c])
m4trace:configure.ac:34: -1- gl_PREREQ_DUP2
m4trace:configure.ac:34: -1- gl_UNISTD_MODULE_INDICATOR([dup2])
m4trace:configure.ac:34: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ACCESS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CHDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CHOWN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CLOSE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COPY_FILE_RANGE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_DUP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_DUP2$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_DUP3$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ENVIRON$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EUIDACCESS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECLE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECLP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECVE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECVP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXECVPE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FACCESSAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FCHDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FCHOWNAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FDATASYNC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FSYNC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FTRUNCATE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETCWD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETDOMAINNAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETDTABLESIZE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETENTROPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETGROUPS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETHOSTNAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETOPT_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETPAGESIZE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETPASS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETUSERSHELL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GROUP_MEMBER$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISATTY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LCHOWN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LINK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LINKAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LSEEK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PIPE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PIPE2$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PREAD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PWRITE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_READ$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_READLINK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_READLINKAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RMDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SETHOSTNAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SLEEP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SYMLINK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SYMLINKAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TRUNCATE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TTYNAME_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_GETOPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_NONBLOCKING$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_SIGPIPE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNLINK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UNLINKAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_USLEEP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WRITE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_ACCESS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_CLOSE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP2$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVPE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETCWD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETPID$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_ISATTY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_LSEEK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_READ$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_RMDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_SWAB$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_UNLINK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_WRITE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup2])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup2])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_DUP2$])
m4trace:configure.ac:34: -1- gl_HEADER_ERRNO_H
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([errno.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([errno.h], [assume])
m4trace:configure.ac:34: -1- gl_INCLUDE_NEXT
m4trace:configure.ac:34: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([errno.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_ERRNO_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERRNO_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ERRNO_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:34: -1- gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^EMULTIHOP_HIDDEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^EMULTIHOP_VALUE$])
m4trace:configure.ac:34: -1- gl_REPLACE_ERRNO_VALUE([ENOLINK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ENOLINK_HIDDEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ENOLINK_VALUE$])
m4trace:configure.ac:34: -1- gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
m4trace:configure.ac:34: -1- m4_pattern_allow([^EOVERFLOW_HIDDEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^EOVERFLOW_VALUE$])
m4trace:configure.ac:34: -1- gl_EXTERN_INLINE
m4trace:configure.ac:34: -1- gl_FCNTL_H
m4trace:configure.ac:34: -1- gl_FCNTL_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FCNTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_OPENAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CREAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FCNTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_OPEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_OPENAT$])
m4trace:configure.ac:34: -1- gl_FCNTL_O_FLAGS
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" symlink ]AS_TR_CPP([HAVE_symlink])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- GL_MDA_DEFINES
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WORKING_O_NOATIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WORKING_O_NOFOLLOW$])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([fcntl.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([fcntl.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([fcntl.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_FCNTL_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FCNTL_H$])
m4trace:configure.ac:34: -1- AC_TYPE_PID_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
m4trace:configure.ac:34: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CREAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FCNTL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_NONBLOCKING$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_OPEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_OPENAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_CREAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_OPEN$])
m4trace:configure.ac:34: -1- gl_FLOAT_H
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([float.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([float.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([float.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_FLOAT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FLOAT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLOAT_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [test -n "$FLOAT_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ITOLD$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([float.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([itold.c])
m4trace:configure.ac:34: -1- gl_FUNC_FPRINTF_POSIX
m4trace:configure.ac:34: -1- gl_PRINTF_SIZES_C99
m4trace:configure.ac:34: -1- gl_AC_HEADER_STDINT_H
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STDINT_H_WITH_UINTMAX$])
m4trace:configure.ac:34: -1- gl_AC_HEADER_INTTYPES_H
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_INTTYPES_H_WITH_UINTMAX$])
m4trace:configure.ac:34: -1- gl_PRINTF_LONG_DOUBLE
m4trace:configure.ac:34: -1- gl_PRINTF_INFINITE
m4trace:configure.ac:34: -1- gl_PRINTF_INFINITE_LONG_DOUBLE
m4trace:configure.ac:34: -1- gl_BIGENDIAN
m4trace:configure.ac:34: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:34: -1- gl_LONG_DOUBLE_VS_DOUBLE
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SAME_LONG_DOUBLE_AS_DOUBLE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SAME_LONG_DOUBLE_AS_DOUBLE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^CHECK_PRINTF_SAFE$])
m4trace:configure.ac:34: -1- GL_NOCRASH
m4trace:configure.ac:34: -1- gl_PRINTF_DIRECTIVE_A
m4trace:configure.ac:34: -1- gl_PRINTF_DIRECTIVE_F
m4trace:configure.ac:34: -1- gl_PRINTF_DIRECTIVE_N
m4trace:configure.ac:34: -1- gl_PRINTF_DIRECTIVE_LS
m4trace:configure.ac:34: -1- gl_PRINTF_POSITIONS
m4trace:configure.ac:34: -1- gl_PRINTF_FLAG_GROUPING
m4trace:configure.ac:34: -1- gl_PRINTF_FLAG_LEFTADJUST
m4trace:configure.ac:34: -1- gl_PRINTF_FLAG_ZERO
m4trace:configure.ac:34: -1- gl_PRINTF_PRECISION
m4trace:configure.ac:34: -1- gl_PRINTF_ENOMEM
m4trace:configure.ac:34: -1- gl_MULTIARCH
m4trace:configure.ac:34: -1- m4_pattern_allow([^APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:34: -1- GL_NOCRASH
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_LONG_DOUBLE
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_DOUBLE$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_LONG_DOUBLE$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_A
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_A$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_F
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_F$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_LS$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_FLAG_GROUPING
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_GROUPING$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_LEFTADJUST$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_FLAG_ZERO
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_ZERO$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_PRECISION
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_UNBOUNDED_PRECISION$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF_ENOMEM
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_ENOMEM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:34: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:34: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:34: -1- gt_TYPE_WCHAR_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:34: -1- gt_TYPE_WINT_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIBHEADERS_OVERRIDE_WINT_T$])
m4trace:configure.ac:34: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:34: -1- gl_FEATURES_H
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_features_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" features.h ]AS_TR_SH([features.h]) AS_TR_CPP([HAVE_features.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FEATURES_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:34: -1- gt_AC_TYPE_INTMAX_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_INTMAX_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^intmax_t$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SNPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRNLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL__SNPRINTF$])
m4trace:configure.ac:34: -1- gl_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:34: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^DBL_EXPBIT0_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^DBL_EXPBIT0_BIT$])
m4trace:configure.ac:34: -1- gl_SNPRINTF_RETVAL_C99
m4trace:configure.ac:34: -1- gl_SNPRINTF_PRESENCE
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_snprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" snprintf ]AS_TR_CPP([HAVE_snprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SNPRINTF_RETVAL_C99$])
m4trace:configure.ac:34: -1- gl_SNPRINTF_TRUNCATION_C99
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SNPRINTF_TRUNCATION_C99$])
m4trace:configure.ac:34: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:34: -1- gl_REPLACE_FPRINTF
m4trace:configure.ac:34: -1- gl_STDIO_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_OBSTACK_PRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FTELLO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PCLOSE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_POPEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RENAMEAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_VDPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_DPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FCLOSE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FDOPEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FFLUSH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FOPEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FPURGE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FREOPEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FSEEK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FSEEKO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FTELL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FTELLO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETDELIM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETLINE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_OBSTACK_PRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PERROR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_POPEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REMOVE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RENAME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RENAMEAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SNPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STDIO_READ_FUNCS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STDIO_WRITE_FUNCS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TMPFILE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VASPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VDPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VFPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VSNPRINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VSPRINTF$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([fprintf.c])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_PREREQ_FPRINTF
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fprintf-posix])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_DPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FCLOSE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FDOPEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FFLUSH$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FGETC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FGETS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FOPEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FPURGE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FPUTC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FPUTS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FREAD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FREOPEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FSCANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FSEEK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FSEEKO$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FTELL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FTELLO$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FWRITE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETCHAR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETDELIM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETLINE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PCLOSE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PERROR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_POPEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PUTC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PUTCHAR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PUTS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REMOVE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RENAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RENAMEAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SCANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SNPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_NONBLOCKING$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_SIGPIPE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TMPFILE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VASPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VFSCANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VSCANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VDPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VSNPRINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_VSPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCLOSEALL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_FDOPEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_FILENO$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETW$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTW$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_TEMPNAM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf-posix])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf-posix])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FPRINTF_POSIX$])
m4trace:configure.ac:34: -1- gl_FUNC_FREE
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FREE_POSIX$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([free.c])
m4trace:configure.ac:34: -1- gl_PREREQ_FREE
m4trace:configure.ac:34: -1- gl_STDLIB_MODULE_INDICATOR([free-posix])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([free-posix])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[free-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([free-posix])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FREE_POSIX$])
m4trace:configure.ac:34: -1- gl_FUNC_FREXP_NO_LIBM
m4trace:configure.ac:34: -1- gl_MATH_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ACOSF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ACOSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ASINF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ASINL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ATANF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ATANL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ATAN2F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CBRT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CBRTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CBRTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COPYSIGN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COPYSIGNL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COSF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COSHF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EXPF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EXPM1$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EXPM1F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FABSF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FABSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FMA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FMAF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FMAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FMODF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FMODL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FREXPF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_HYPOTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_HYPOTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ILOGB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ILOGBF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ILOGBL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ISNANF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ISNAND$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ISNANL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LDEXPF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOGF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOGL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOG10F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOG10L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOG1P$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOG1PF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOG1PL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOGBF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LOGBL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MODFF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MODFL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_POWF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_REMAINDER$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_REMAINDERF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RINT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RINTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SINF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SINL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SINHF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SQRTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SQRTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TANF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TANL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TANHF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ACOSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ASINL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ATANL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_CBRTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_CBRTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_CEILF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_CEILL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_COSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXP2$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXP2F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXP2L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXPM1L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FLOORF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FLOORL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FREXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LDEXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOGL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOG10L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOG2$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOG2F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOG2L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOGB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_REMAINDER$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_REMAINDERL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_RINTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ROUND$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ROUNDF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ROUNDL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_SINL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_SQRTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_TANL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_TRUNC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_TRUNCF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_TRUNCL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ACOSF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ASINF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ATANF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ATAN2F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CBRTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CBRTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CEIL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CEILF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CEILL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_COSF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_COSHF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXPF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXPM1$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXPM1F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXPM1L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXP2$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_EXP2L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FABSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FLOOR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FLOORF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FLOORL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FMA$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FMAF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FMAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FMOD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FMODF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FMODL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FREXPF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FREXP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FREXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_HUGE_VAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_HYPOT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_HYPOTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_HYPOTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ILOGB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ILOGBF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ILOGBL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ISFINITE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ISINF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ISNAN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LDEXPL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOGF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOGL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG10$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG10F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG10L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG1P$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG1PF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG1PL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG2$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG2F$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOG2L$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOGB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOGBF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOGBL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MODF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MODFF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MODFL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_NAN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REMAINDER$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REMAINDERF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_REMAINDERL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RINTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ROUND$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ROUNDF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_ROUNDL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SIGNBIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SIGNBIT_USING_BUILTINS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SINF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SINHF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SQRTF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SQRTL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TANF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TANHF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TRUNC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TRUNCF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TRUNCL$])
m4trace:configure.ac:34: -1- gl_CHECK_FREXP_NO_LIBM
m4trace:configure.ac:34: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ALARM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FREXP_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([frexp.c])
m4trace:configure.ac:34: -1- gl_MATH_MODULE_INDICATOR([frexp])
m4trace:configure.ac:34: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ACOSF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ACOSL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ASINF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ASINL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ATANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ATANL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATAN2F])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ATAN2F$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CBRT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CBRTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CBRTL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEIL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CEIL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CEILF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CEILL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGNF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGNL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COSF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COSL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSHF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_COSHF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXPF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXPL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXP2$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2F])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXP2F$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2L])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXP2L$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXPM1$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1F])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXPM1F$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1L])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXPM1L$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FABSF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FABSL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOOR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FLOOR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FLOORF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FLOORL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMA])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FMA$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FMAF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FMAL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMOD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FMOD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FMODF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FMODL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FREXPF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FREXP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FREXPL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_HYPOT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_HYPOTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_HYPOTL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ILOGB$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ILOGBF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ILOGBL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISFINITE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISFINITE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISINF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISINF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISNAN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISNANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAND])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISNAND$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ISNANL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LDEXPF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LDEXPL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOGF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOGL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG10$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10F])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG10F$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10L])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG10L$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1P])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG1P$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG1PF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG1PL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG2$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2F])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG2F$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2L])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOG2L$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOGB$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOGBF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOGBL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MODF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MODFF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MODFL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POWF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_POWF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDER])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REMAINDER$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REMAINDERF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_REMAINDERL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RINT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RINTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RINTL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUND])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ROUND$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ROUNDF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ROUNDL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNBIT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SIGNBIT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SINF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SINL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINHF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SINHF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SQRTF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SQRTL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TANL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANHF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TANHF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TRUNC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCF])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TRUNCF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TRUNCL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J0], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_J0$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J1], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_J1$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_JN], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_JN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y0], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_Y0$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y1], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_Y1$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_YN], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_YN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexp])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexp])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FREXP$])
m4trace:configure.ac:34: -1- gl_FUNC_FREXPL_NO_LIBM
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- gl_CHECK_FREXPL_NO_LIBM
m4trace:configure.ac:34: -1- gl_FUNC_FREXPL_WORKS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FREXPL_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([frexpl.c])
m4trace:configure.ac:34: -1- gl_MATH_MODULE_INDICATOR([frexpl])
m4trace:configure.ac:34: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexpl])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexpl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexpl])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FREXPL$])
m4trace:configure.ac:34: -1- gl_FUNC_FSETERR
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func___fseterr], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" __fseterr ]AS_TR_CPP([HAVE___fseterr])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([fseterr.c])
m4trace:configure.ac:34: -1- gl_FUNC_FSTAT
m4trace:configure.ac:34: -1- gl_SYS_STAT_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FCHMODAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FSTATAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FUTIMENS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETUMASK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LCHMOD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LSTAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKDIRAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKFIFOAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKNOD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MKNODAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UTIMENSAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FCHMODAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FSTAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FSTATAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FUTIMENS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LSTAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKDIR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKFIFO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKFIFOAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKNOD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKNODAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_UTIMENSAT$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([fstat.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:34: -1- gl_PREREQ_FSTAT
m4trace:configure.ac:34: -1- gl_SYS_STAT_H
m4trace:configure.ac:34: -1- m4_pattern_allow([^STAT_MACROS_BROKEN$])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([sys/stat.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sys/stat.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sys/stat.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SYS_STAT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^WINDOWS_STAT_TIMESPEC$])
m4trace:configure.ac:34: -1- gl_LARGEFILE
m4trace:configure.ac:34: -1- m4_pattern_allow([^WINDOWS_64_BIT_ST_SIZE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^nlink_t$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])
m4trace:configure.ac:34: -1- AC_C_RESTRICT
m4trace:configure.ac:34: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:34: -1- gl_PREREQ_STAT_W32
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SDKDDKVER_H$])
m4trace:configure.ac:34: -1- gl_SYS_STAT_MODULE_INDICATOR([fstat])
m4trace:configure.ac:34: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FCHMODAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FSTAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FSTATAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FUTIMENS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETUMASK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LCHMOD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LSTAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKDIRAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKFIFO$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKFIFOAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKNOD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKNODAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UTIMENSAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_OVERRIDES_STRUCT_STAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHMOD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKDIR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_UMASK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstat])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstat])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FSTAT$])
m4trace:configure.ac:34: -1- gl_GETTIME
m4trace:configure.ac:34: -1- gl_TIMESPEC
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" gettimeofday ]AS_TR_CPP([HAVE_gettimeofday])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_FUNC_GETTIMEOFDAY
m4trace:configure.ac:34: -1- gl_SYS_TIME_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_GETTIMEOFDAY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_TIMEVAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GETTIMEOFDAY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRUCT_TIMEVAL$])
m4trace:configure.ac:34: -1- gl_SYS_TIME_H
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([sys/time.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sys/time.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sys/time.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SYS_TIME_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H$])
m4trace:configure.ac:34: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" gettimeofday ]AS_TR_CPP([HAVE_gettimeofday])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GETTIMEOFDAY_TIMEZONE$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([gettimeofday.c])
m4trace:configure.ac:34: -1- gl_PREREQ_GETTIMEOFDAY
m4trace:configure.ac:34: -1- gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
m4trace:configure.ac:34: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gettimeofday])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[gettimeofday]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([gettimeofday])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_GETTIMEOFDAY$])
m4trace:configure.ac:34: -1- gl_INTTYPES_H
m4trace:configure.ac:34: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:34: -1- gl_STDINT_H
m4trace:configure.ac:34: -1- gl_LIMITS_H
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([limits.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([limits.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_limits_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" limits.h ]AS_TR_SH([limits.h]) AS_TR_CPP([HAVE_limits.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([limits.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_LIMITS_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LIMITS_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([stdint.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([stdint.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([stdint.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_STDINT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDINT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^__STDC_CONSTANT_MACROS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^__STDC_LIMIT_MACROS$])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:34: -1- gl_STDINT_TYPE_PROPERTIES
m4trace:configure.ac:34: -1- gl_STDINT_BITSIZEOF([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^BITSIZEOF_PTRDIFF_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^BITSIZEOF_SIZE_T$])
m4trace:configure.ac:34: -1- gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^BITSIZEOF_SIG_ATOMIC_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^BITSIZEOF_WCHAR_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^BITSIZEOF_WINT_T$])
m4trace:configure.ac:34: -1- gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGNED_SIG_ATOMIC_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGNED_WCHAR_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGNED_WINT_T$])
m4trace:configure.ac:34: -1- gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTRDIFF_T_SUFFIX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^SIZE_T_SUFFIX$])
m4trace:configure.ac:34: -1- gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:34: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:34: -1- m4_pattern_allow([^SIG_ATOMIC_T_SUFFIX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^WCHAR_T_SUFFIX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^WINT_T_SUFFIX$])
m4trace:configure.ac:34: -1- gl_REPLACE_LIMITS_H
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_C99_STDINT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^STDINT_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_INTTYPES_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_IMAXABS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_IMAXDIV$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_IMAXDIV_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOIMAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOUMAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([inttypes.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([inttypes.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([inttypes.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_INTTYPES_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])
m4trace:configure.ac:34: -1- gl_INTTYPES_PRI_SCN
m4trace:configure.ac:34: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:34: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([INT32_MAX_LT_INTMAX_MAX], [defined INT32_MAX && defined INTMAX_MAX], [INT32_MAX < INTMAX_MAX], [sizeof (int) < sizeof (long long int)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:34: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([INT64_MAX_EQ_LONG_MAX], [defined INT64_MAX], [INT64_MAX == LONG_MAX], [sizeof (long long int) == sizeof (long int)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:34: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([UINT32_MAX_LT_UINTMAX_MAX], [defined UINT32_MAX && defined UINTMAX_MAX], [UINT32_MAX < UINTMAX_MAX], [sizeof (unsigned int) < sizeof (unsigned long long int)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:34: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([UINT64_MAX_EQ_ULONG_MAX], [defined UINT64_MAX], [UINT64_MAX == ULONG_MAX], [sizeof (unsigned long long int) == sizeof (unsigned long int)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:34: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:34: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_IMAXABS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_IMAXDIV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOIMAX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOUMAX$])
m4trace:configure.ac:34: -1- gl_FUNC_ISNAND_NO_LIBM
m4trace:configure.ac:34: -1- gl_HAVE_ISNAND_NO_LIBM
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ISNAND_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([isnand.c])
m4trace:configure.ac:34: -1- gl_PREREQ_ISNAND
m4trace:configure.ac:34: -1- gl_FUNC_ISNANF_NO_LIBM
m4trace:configure.ac:34: -1- gl_HAVE_ISNANF_NO_LIBM
m4trace:configure.ac:34: -1- gl_ISNANF_WORKS
m4trace:configure.ac:34: -1- gl_FLOAT_EXPONENT_LOCATION
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLT_EXPBIT0_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLT_EXPBIT0_BIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ISNANF_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([isnanf.c])
m4trace:configure.ac:34: -1- gl_PREREQ_ISNANF
m4trace:configure.ac:34: -1- gl_FLOAT_EXPONENT_LOCATION
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLT_EXPBIT0_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLT_EXPBIT0_BIT$])
m4trace:configure.ac:34: -1- gl_FUNC_ISNANL_NO_LIBM
m4trace:configure.ac:34: -1- gl_HAVE_ISNANL_NO_LIBM
m4trace:configure.ac:34: -1- gl_FUNC_ISNANL_WORKS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ISNANL_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([isnanl.c])
m4trace:configure.ac:34: -1- gl_PREREQ_ISNANL
m4trace:configure.ac:34: -1- gl_LONG_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:34: -1- m4_pattern_allow([^LDBL_EXPBIT0_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LDBL_EXPBIT0_BIT$])
m4trace:configure.ac:34: -1- gl_LIMITS_H
m4trace:configure.ac:34: -1- gl_FUNC_LSTAT
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
m4trace:configure.ac:34: -1- m4_pattern_allow([^LSTAT_FOLLOWS_SLASHED_SYMLINK$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([lstat.c])
m4trace:configure.ac:34: -1- gl_PREREQ_LSTAT
m4trace:configure.ac:34: -1- gl_SYS_STAT_MODULE_INDICATOR([lstat])
m4trace:configure.ac:34: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lstat])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([lstat])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_LSTAT$])
m4trace:configure.ac:34: -1- gl_FUNC_MALLOC_GNU
m4trace:configure.ac:34: -1- _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC=1])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:34: -1- gl_STDLIB_MODULE_INDICATOR([malloc-posix])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-posix])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-posix])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_POSIX$])
m4trace:configure.ac:34: -1- gl_MALLOCA
m4trace:configure.ac:34: -1- gl_EEMALLOC
m4trace:configure.ac:34: -1- _AC_FUNC_MALLOC_IF([gl_cv_func_malloc_0_nonnull=1], [gl_cv_func_malloc_0_nonnull=0])
m4trace:configure.ac:34: -1- m4_pattern_allow([^MALLOC_0_IS_NONNULL$])
m4trace:configure.ac:34: -1- gl_MATH_H
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([math.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([math.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_math_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" math.h ]AS_TR_SH([math.h]) AS_TR_CPP([HAVE_math.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([math.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_MATH_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_MATH_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <math.h>]], [acosf acosl asinf asinl atanf atanl
     cbrt cbrtf cbrtl ceilf ceill copysign copysignf copysignl cosf cosl coshf
     expf expl exp2 exp2f exp2l expm1 expm1f expm1l
     fabsf fabsl floorf floorl fma fmaf fmal
     fmod fmodf fmodl frexpf frexpl hypotf hypotl
     ilogb ilogbf ilogbl
     ldexpf ldexpl
     log logf logl log10 log10f log10l log1p log1pf log1pl log2 log2f log2l
     logb logbf logbl
     modf modff modfl powf
     remainder remainderf remainderl
     rint rintf rintl round roundf roundl sinf sinl sinhf sqrtf sqrtl
     tanf tanl tanhf trunc truncf truncl])
m4trace:configure.ac:34: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_FUNC_MEMCHR
m4trace:configure.ac:34: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:34: -1- m4_pattern_allow([^MAP_ANONYMOUS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MAP_ANONYMOUS$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/mman.h ]AS_TR_SH([sys/mman.h]) AS_TR_CPP([HAVE_sys/mman.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mprotect ]AS_TR_CPP([HAVE_mprotect])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_STRING_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBSLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_EXPLICIT_BZERO$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FFSL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FFSLL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_MEMMEM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRPBRK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRSEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRTOK_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRERRORNAME_NP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGABBREV_NP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGDESCR_NP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRVERSCMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FFSLL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MEMCHR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MEMMEM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STPNCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRCHRNUL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRDUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRNCAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRNDUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRNLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRSTR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRCASESTR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRTOK_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRERROR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRERROR_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRERRORNAME_NP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRSIGNAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UNDEFINE_STRTOK_R$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([memchr.c])
m4trace:configure.ac:34: -1- gl_PREREQ_MEMCHR
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_BP_SYM_H$])
m4trace:configure.ac:34: -1- gl_STRING_MODULE_INDICATOR([memchr])
m4trace:configure.ac:34: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_EXPLICIT_BZERO$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FFSL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_FFSLL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MEMCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MEMMEM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MEMPCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MEMRCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RAWMEMCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STPCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STPNCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRCHRNUL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRDUP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRNCAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRNDUP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRNLEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRPBRK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRSEP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRSTR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRCASESTR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRTOK_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSLEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSNLEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSRCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSSTR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSCASECMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSNCASECMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSPCASECMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSCASESTR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSCSPN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSPBRK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSSPN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSSEP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSTOK_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRERROR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRERROR_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRERRORNAME_NP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SIGABBREV_NP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SIGDESCR_NP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRSIGNAL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRVERSCMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_MEMCCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_STRDUP$])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memchr])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([memchr])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_MEMCHR$])
m4trace:configure.ac:34: -1- gl_MINMAX
m4trace:configure.ac:34: -1- gl_PREREQ_MINMAX
m4trace:configure.ac:34: -1- gl_MINMAX_IN_HEADER([limits.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MINMAX_IN_LIMITS_H$])
m4trace:configure.ac:34: -1- gl_MINMAX_IN_HEADER([sys/param.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MINMAX_IN_SYS_PARAM_H$])
m4trace:configure.ac:34: -1- gl_MSVC_INVAL
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func__set_invalid_parameter_handler], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" _set_invalid_parameter_handler ]AS_TR_CPP([HAVE__set_invalid_parameter_handler])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([msvc-inval.c])
m4trace:configure.ac:34: -1- gl_MSVC_NOTHROW
m4trace:configure.ac:34: -1- gl_LIBSOURCES([msvc-nothrow.c])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR([msvc-nothrow])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_MSVC_NOTHROW$])
m4trace:configure.ac:34: -1- gl_MULTIARCH
m4trace:configure.ac:34: -1- gl_FUNC_NANOSLEEP
m4trace:configure.ac:34: -1- gl_TIME_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_NANOSLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRPTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TIMEGM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TIMESPEC_GET$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TIMEZONE_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_CTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOCALTIME_R$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MKTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_NANOSLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_STRFTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TIMEGM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_TZSET$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_GMTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_LOCALTIME$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_FUNC_SELECT
m4trace:configure.ac:34: -1- gl_SYS_SELECT_H
m4trace:configure.ac:34: -1- gl_SYS_SELECT_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PSELECT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PSELECT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SELECT$])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([sys/select.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sys/select.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sys/select.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SYS_SELECT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:34: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
m4trace:configure.ac:34: -1- gl_SOCKETS
m4trace:configure.ac:34: -1- gl_SOCKETLIB
m4trace:configure.ac:34: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^WINDOWS_SOCKETS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBSOCKET$])
m4trace:configure.ac:34: -1- gl_PREREQ_SOCKETS
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- GL_MDA_DEFINES
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_SELECT$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_NANOSLEEP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_BUG_BIG_NANOSLEEP$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([nanosleep.c])
m4trace:configure.ac:34: -1- gl_PREREQ_NANOSLEEP
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_PREREQ_SIG_HANDLER_H
m4trace:configure.ac:34: -1- gl_TIME_MODULE_INDICATOR([nanosleep])
m4trace:configure.ac:34: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MKTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LOCALTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_NANOSLEEP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRFTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_STRPTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TIMEGM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TIMESPEC_GET$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TIME_R$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TIME_RZ$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_TZSET$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_TZSET$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([nanosleep])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[nanosleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([nanosleep])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_NANOSLEEP$])
m4trace:configure.ac:34: -1- gl_PATHMAX
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_FUNC_PRINTF_FREXP
m4trace:configure.ac:34: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FREXP_IN_LIBC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LDEXP_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_FUNC_PRINTF_FREXPL
m4trace:configure.ac:34: -1- gl_CHECK_FREXPL_NO_LIBM
m4trace:configure.ac:34: -1- gl_FUNC_FREXPL_WORKS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_FREXPL_IN_LIBC$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- gl_CHECK_LDEXPL_NO_LIBM
m4trace:configure.ac:34: -1- gl_FUNC_LDEXPL_WORKS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_LDEXPL_IN_LIBC$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- gl_PTHREAD_COND
m4trace:configure.ac:34: -1- gl_PTHREAD_H
m4trace:configure.ac:34: -1- gl_PTHREAD_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPINLOCK_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_CREATE_DETACHED$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_RECURSIVE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_ROBUST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_PROCESS_SHARED$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_CREATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_GETDETACHSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_SETDETACHSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SELF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_EQUAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_DETACH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_JOIN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_EXIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_ONCE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_GETTYPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_SETTYPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_GETROBUST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_SETROBUST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_LOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_TRYLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_UNLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCKATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCKATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_RDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_WRLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TRYRDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TRYWRLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_UNLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_CONDATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_CONDATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_WAIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_TIMEDWAIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_SIGNAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_BROADCAST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_KEY_CREATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SETSPECIFIC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_GETSPECIFIC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_KEY_DELETE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_TRYLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_UNLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_CREATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_GETDETACHSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_SETDETACHSTATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SELF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_EQUAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_DETACH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_JOIN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_EXIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_ONCE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_GETTYPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_SETTYPE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_GETROBUST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_SETROBUST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_LOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_TRYLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_UNLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCKATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCKATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_RDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_WRLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TRYRDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TRYWRLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_UNLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_CONDATTR_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_CONDATTR_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_WAIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_TIMEDWAIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_SIGNAL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_BROADCAST$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_DESTROY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_KEY_CREATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SETSPECIFIC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_GETSPECIFIC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_KEY_DELETE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_INIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_TRYLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_UNLOCK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_DESTROY$])
m4trace:configure.ac:34: -1- gl_PTHREADLIB
m4trace:configure.ac:34: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([pthread.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([pthread.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_pthread_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" pthread.h ]AS_TR_SH([pthread.h]) AS_TR_CPP([HAVE_pthread.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([pthread.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_PTHREAD_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_PTHREAD_H$])
m4trace:configure.ac:34: -1- gl_THREADLIB
m4trace:configure.ac:34: -1- gl_THREADLIB_EARLY
m4trace:configure.ac:34: -1- gl_THREADLIB_EARLY_BODY
m4trace:configure.ac:34: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:34: -1- gl_THREADLIB_BODY
m4trace:configure.ac:34: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^USE_ISOC_AND_POSIX_THREADS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^USE_POSIX_THREADS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^USE_POSIX_THREADS_FROM_LIBC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^USE_POSIX_THREADS_WEAK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:34: -1- gl_STDTHREADLIB_BODY
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_THRD_CREATE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBSTDTHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^USE_ISOC_THREADS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^USE_WINDOWS_THREADS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBTHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LTLIBTHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBMULTITHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LTLIBMULTITHREAD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SPINLOCK_T$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <pthread.h>
    ]], [
    pthread_create pthread_attr_init pthread_attr_getdetachstate
    pthread_attr_setdetachstate pthread_attr_destroy pthread_self pthread_equal
    pthread_detach pthread_join pthread_exit
    pthread_once
    pthread_mutex_init pthread_mutexattr_init pthread_mutexattr_gettype
    pthread_mutexattr_settype pthread_mutexattr_getrobust
    pthread_mutexattr_setrobust pthread_mutexattr_destroy pthread_mutex_lock
    pthread_mutex_trylock pthread_mutex_timedlock pthread_mutex_unlock
    pthread_mutex_destroy
    pthread_rwlock_init pthread_rwlockattr_init pthread_rwlockattr_destroy
    pthread_rwlock_rdlock pthread_rwlock_wrlock pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock pthread_rwlock_unlock pthread_rwlock_destroy
    pthread_cond_init pthread_condattr_init pthread_condattr_destroy
    pthread_cond_wait pthread_cond_timedwait pthread_cond_signal
    pthread_cond_broadcast pthread_cond_destroy
    pthread_key_create pthread_setspecific pthread_getspecific
    pthread_key_delete
    pthread_spin_init pthread_spin_lock pthread_spin_trylock pthread_spin_unlock
    pthread_spin_destroy])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_PTHREAD$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-cond.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-cond])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_THREAD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_THREAD$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_ONCE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_ONCE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_MUTEX$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_RWLOCK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_RWLOCK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_COND])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_COND$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_TSS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_TSS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SPIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SPIN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX_TIMEDLOCK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-cond])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-cond]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-cond])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_COND$])
m4trace:configure.ac:34: -1- gl_PTHREAD_H
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_PTHREAD_MUTEX
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_MUTEXATTR_ROBUST_UNIMPLEMENTED$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-mutex.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-mutex])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-mutex])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-mutex]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-mutex])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_MUTEX$])
m4trace:configure.ac:34: -1- gl_PTHREAD_ONCE
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-once.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-once])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-once])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-once]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-once])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_ONCE$])
m4trace:configure.ac:34: -1- gl_PTHREAD_RWLOCK
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_RWLOCK_UNIMPLEMENTED$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_RWLOCK_LACKS_TIMEOUT$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-rwlock.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-rwlock])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-rwlock])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-rwlock]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-rwlock])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_RWLOCK$])
m4trace:configure.ac:34: -1- gl_PTHREAD_SPIN
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-spin.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-spin])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-spin])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-spin]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-spin])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_SPIN$])
m4trace:configure.ac:34: -1- gl_PTHREAD_THREAD
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_CREATE_IS_INLINE$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-thread.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-thread])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-thread])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-thread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-thread])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_THREAD$])
m4trace:configure.ac:34: -1- gl_PTHREAD_TSS
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread-tss.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-tss])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-tss])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-tss]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-tss])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_TSS$])
m4trace:configure.ac:34: -1- gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([pthread_mutex_timedlock.c])
m4trace:configure.ac:34: -1- gl_PTHREAD_MODULE_INDICATOR([pthread_mutex_timedlock])
m4trace:configure.ac:34: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread_mutex_timedlock])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread_mutex_timedlock]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread_mutex_timedlock])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:34: -1- gl_FUNC_RAISE
m4trace:configure.ac:34: -1- gl_SIGNAL_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_POSIX_SIGNALBLOCKING$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGACTION$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_TYPE_VOLATILE_SIG_ATOMIC_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGHANDLER_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_PTHREAD_SIGMASK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_RAISE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:34: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:34: -1- gl_CHECK_TYPE_SIGSET_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([raise.c])
m4trace:configure.ac:34: -1- gl_PREREQ_RAISE
m4trace:configure.ac:34: -1- gl_SIGNAL_MODULE_INDICATOR([raise])
m4trace:configure.ac:34: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RAISE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SIGNAL_H_SIGPIPE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SIGPROCMASK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SIGACTION$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([raise])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[raise]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([raise])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_RAISE$])
m4trace:configure.ac:34: -1- gl_FUNC_REALLOC_GNU
m4trace:configure.ac:34: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:34: -1- _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC=1])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:34: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:34: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:34: -1- gl_STDLIB_MODULE_INDICATOR([realloc-posix])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-posix])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-posix])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_REALLOC_POSIX$])
m4trace:configure.ac:34: -1- gl_FUNC_REALLOCARRAY
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([reallocarray.c])
m4trace:configure.ac:34: -1- gl_PREREQ_REALLOCARRAY
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_REALLOCARRAY$])
m4trace:configure.ac:34: -1- gl_STDLIB_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([reallocarray])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[reallocarray]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([reallocarray])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_REALLOCARRAY$])
m4trace:configure.ac:34: -1- gl_SCHED_H
m4trace:configure.ac:34: -1- gl_SCHED_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SCHED_YIELD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_SCHED_YIELD$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_cdefs_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/cdefs.h ]AS_TR_SH([sys/cdefs.h]) AS_TR_CPP([HAVE_sys/cdefs.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([sched.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sched.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sched.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SCHED_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SCHED_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SCHED_PARAM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_CDEFS_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <sched.h>
    ]], [sched_yield])
m4trace:configure.ac:34: -1- gl_SCHED_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCHED_YIELD])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SCHED_YIELD$])
m4trace:configure.ac:34: -1- gl_FUNC_SELECT
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- GL_MDA_DEFINES
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIB_SELECT$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([select.c])
m4trace:configure.ac:34: -1- gl_SYS_SELECT_MODULE_INDICATOR([select])
m4trace:configure.ac:34: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_PSELECT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SELECT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([select])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[select]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([select])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_SELECT$])
m4trace:configure.ac:34: -1- gl_SIGACTION
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_sigaction], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaction ]AS_TR_CPP([HAVE_sigaction])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([sigaction.c])
m4trace:configure.ac:34: -1- gl_PREREQ_SIGACTION
m4trace:configure.ac:34: -1- m4_pattern_allow([^uid_t$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^gid_t$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_sigaltstack], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaltstack ]AS_TR_CPP([HAVE_sigaltstack])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_siginterrupt], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" siginterrupt ]AS_TR_CPP([HAVE_siginterrupt])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:34: -1- gl_SIGNAL_MODULE_INDICATOR([sigaction])
m4trace:configure.ac:34: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigaction])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigaction]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigaction])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_SIGACTION$])
m4trace:configure.ac:34: -1- gl_SIGNAL_H
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([signal.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([signal.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([signal.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SIGNAL_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])
m4trace:configure.ac:34: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_SIGNBIT
m4trace:configure.ac:34: -1- gl_SIGNBIT_TEST_PROGRAM
m4trace:configure.ac:34: -1- gl_SIGNBIT_TEST_PROGRAM
m4trace:configure.ac:34: -1- gl_FLOAT_SIGN_LOCATION
m4trace:configure.ac:34: -1- gl_FLOATTYPE_SIGN_LOCATION([float], [gl_cv_cc_float_signbit], [f], [FLT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLT_SIGNBIT_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^FLT_SIGNBIT_BIT$])
m4trace:configure.ac:34: -1- gl_DOUBLE_SIGN_LOCATION
m4trace:configure.ac:34: -1- gl_FLOATTYPE_SIGN_LOCATION([double], [gl_cv_cc_double_signbit], [], [DBL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^DBL_SIGNBIT_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^DBL_SIGNBIT_BIT$])
m4trace:configure.ac:34: -1- gl_LONG_DOUBLE_SIGN_LOCATION
m4trace:configure.ac:34: -1- gl_FLOATTYPE_SIGN_LOCATION([long double], [gl_cv_cc_long_double_signbit], [L], [LDBL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LDBL_SIGNBIT_WORD$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LDBL_SIGNBIT_BIT$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNF$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COPYSIGNF_IN_LIBC$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COPYSIGN_IN_LIBC$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_COPYSIGNL_IN_LIBC$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([signbitf.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([signbitd.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([signbitl.c])
m4trace:configure.ac:34: -1- gl_MATH_MODULE_INDICATOR([signbit])
m4trace:configure.ac:34: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([signbit])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[signbit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([signbit])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_SIGNBIT$])
m4trace:configure.ac:34: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:34: -1- gl_LIBSOURCES([sigprocmask.c])
m4trace:configure.ac:34: -1- gl_PREREQ_SIGPROCMASK
m4trace:configure.ac:34: -1- gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
m4trace:configure.ac:34: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigprocmask])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigprocmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigprocmask])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_SIGPROCMASK$])
m4trace:configure.ac:34: -1- gl_SIZE_MAX
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^SIZE_MAX$])
m4trace:configure.ac:34: -1- gl_TYPE_SOCKLEN_T
m4trace:configure.ac:34: -1- gl_CHECK_SOCKET_HEADERS
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:34: -1- gl_SOCKET_HEADERS
m4trace:configure.ac:34: -1- m4_pattern_allow([^socklen_t$])
m4trace:configure.ac:34: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:34: -1- gl_FUNC_STAT
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_FILE$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([stat.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:34: -1- gl_PREREQ_STAT
m4trace:configure.ac:34: -1- gl_SYS_STAT_MODULE_INDICATOR([stat])
m4trace:configure.ac:34: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stat])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([stat])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_STAT$])
m4trace:configure.ac:34: -1- gl_STAT_TIME
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMENSEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC$])
m4trace:configure.ac:34: -1- gl_STAT_BIRTHTIME
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMENSEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIM_TV_NSEC$])
m4trace:configure.ac:34: -1- gl_STDALIGN_H
m4trace:configure.ac:34: -1- m4_pattern_allow([^STDALIGN_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_FALSE])
m4trace:configure.ac:34: -1- AM_STDBOOL_H
m4trace:configure.ac:34: -1- AC_CHECK_HEADER_STDBOOL
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^STDBOOL_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:34: -1- gl_STDDEF_H
m4trace:configure.ac:34: -1- gl_STDDEF_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_NULL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MAX_ALIGN_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^STDDEF_H$])
m4trace:configure.ac:34: -1- AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_TRUE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_FALSE$])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:34: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([stddef.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([stddef.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([stddef.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_STDDEF_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDDEF_H$])
m4trace:configure.ac:34: -1- gl_STDDEF_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_STDINT_H
m4trace:configure.ac:34: -1- gl_STDIO_H
m4trace:configure.ac:34: -1- m4_pattern_allow([^__USE_MINGW_ANSI_STDIO$])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([stdio.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([stdio.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([stdio.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_fcloseall], [_AC_CHECK_DECLS([fcloseall])])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fscanf])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fscanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fscanf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FSCANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([scanf])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([scanf])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[scanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([scanf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_SCANF$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR([scanf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fgetc])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgetc])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgetc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgetc])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FGETC$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([getc])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getc])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([getc])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_GETC$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([getchar])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getchar])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([getchar])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_GETCHAR$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fgets])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgets])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgets]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgets])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FGETS$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fread])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fread])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fread])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FREAD$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fprintf])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FPRINTF$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([printf])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([printf])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[printf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([printf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PRINTF$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([vfprintf])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vfprintf])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vfprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([vfprintf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_VFPRINTF$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([vprintf])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vprintf])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([vprintf])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_VPRINTF$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fputc])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputc])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputc])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FPUTC$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([putc])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putc])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([putc])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PUTC$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([putchar])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putchar])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([putchar])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PUTCHAR$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fputs])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputs])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputs])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FPUTS$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([puts])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([puts])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[puts]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([puts])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_PUTS$])
m4trace:configure.ac:34: -1- gl_STDIO_MODULE_INDICATOR([fwrite])
m4trace:configure.ac:34: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fwrite])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fwrite]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([fwrite])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_FWRITE$])
m4trace:configure.ac:34: -1- gl_STDLIB_H
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([stdlib.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([stdlib.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([stdlib.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_STDLIB_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDLIB_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getsubopt grantpt
    initstate initstate_r mbtowc mkdtemp mkostemp mkostemps mkstemp mkstemps
    posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_ecvt], [_AC_CHECK_DECLS([ecvt])])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_fcvt], [_AC_CHECK_DECLS([fcvt])])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_gcvt], [_AC_CHECK_DECLS([gcvt])])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_STRING_H
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([string.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([string.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([string.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]], [ffsl ffsll memmem mempcpy memrchr rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])
m4trace:configure.ac:34: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_SYS_SELECT_H
m4trace:configure.ac:34: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:34: -1- gl_SYS_SOCKET_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_ACCEPT4$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^_POSIX_PII_SOCKET$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SHUTDOWN$])
m4trace:configure.ac:34: -1- gl_PREREQ_SYS_H_SOCKET
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([sys/socket.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sys/socket.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sys/socket.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SYS_SOCKET_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_SOCKET_H$])
m4trace:configure.ac:34: -1- gl_PREREQ_SYS_H_WS2TCPIP
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:34: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])
m4trace:configure.ac:34: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SOCKET$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_CONNECT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_BIND$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETPEERNAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKNAME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKOPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_LISTEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RECV$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SEND$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_RECVFROM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SENDTO$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SETSOCKOPT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_SHUTDOWN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT4$])
m4trace:configure.ac:34: -1- gl_SYS_STAT_H
m4trace:configure.ac:34: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_SYS_TIME_H
m4trace:configure.ac:34: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_SYS_TYPES_H
m4trace:configure.ac:34: -1- gl_SYS_TYPES_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^_USE_STD_STAT$])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([sys/types.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sys/types.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sys/types.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SYS_TYPES_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H$])
m4trace:configure.ac:34: -1- gl_TYPE_OFF_T
m4trace:configure.ac:34: -1- m4_pattern_allow([^WINDOWS_64_BIT_OFF_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^WINDOWS_STAT_INODES$])
m4trace:configure.ac:34: -1- gl_SYS_TYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_SYS_UIO_H
m4trace:configure.ac:34: -1- gl_SYS_UIO_H_DEFAULTS
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([sys/uio.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([sys/uio.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_uio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/uio.h ]AS_TR_SH([sys/uio.h]) AS_TR_CPP([HAVE_sys/uio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([sys/uio.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_SYS_UIO_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_SYS_UIO_H$])
m4trace:configure.ac:34: -1- gl_SYS_UIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_TIME_H
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS([time.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([time.h], [assume])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([time.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_TIME_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_TIME_H$])
m4trace:configure.ac:34: -1- gl_CHECK_TYPE_STRUCT_TIMESPEC
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^SYS_TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^PTHREAD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^UNISTD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^TIME_H_DEFINES_TIME_UTC$])
m4trace:configure.ac:34: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_TIMESPEC
m4trace:configure.ac:34: -1- gl_UNISTD_H
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([unistd.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([unistd.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([unistd.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_UNISTD_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UNISTD_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Check_Decl_execvpe], [_AC_CHECK_DECLS([execvpe])])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:34: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_FUNC_UTIME
m4trace:configure.ac:34: -1- gl_UTIME_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_UTIME$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_FUNC_UTIME_FILE$])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([utime.c])
m4trace:configure.ac:34: -1- gl_PREREQ_UTIME
m4trace:configure.ac:34: -1- gl_UTIME_MODULE_INDICATOR([utime])
m4trace:configure.ac:34: -1- gl_UTIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_UTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UTIME], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_UTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE([utime])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[utime]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_FOR_TESTS([utime])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_TEST_UTIME$])
m4trace:configure.ac:34: -1- gl_UTIME_H
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_utime_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" utime.h ]AS_TR_SH([utime.h]) AS_TR_CPP([HAVE_utime.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([utime.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([utime.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_utime_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" utime.h ]AS_TR_SH([utime.h]) AS_TR_CPP([HAVE_utime.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([utime.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_UTIME_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UTIME_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_UTIME_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[#include <utime.h>
    ]], [utime])
m4trace:configure.ac:34: -1- gl_UTIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_UTIMENS
m4trace:configure.ac:34: -1- gl_FUNC_UTIMES
m4trace:configure.ac:34: -1- GL_MDA_DEFINES
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WORKING_UTIMES$])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_futimes], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" futimes ]AS_TR_CPP([HAVE_futimes])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_futimesat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" futimesat ]AS_TR_CPP([HAVE_futimesat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_futimens], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" futimens ]AS_TR_CPP([HAVE_futimens])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_utimensat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" utimensat ]AS_TR_CPP([HAVE_utimensat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_lutimes], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lutimes ]AS_TR_CPP([HAVE_lutimes])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- GL_MDA_DEFINES
m4trace:configure.ac:34: -1- m4_pattern_allow([^FUTIMESAT_NULL_BUG$])
m4trace:configure.ac:34: -1- gl_FUNC_VASNPRINTF
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:34: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:34: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:34: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:34: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:34: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:34: -1- gl_WCHAR_H
m4trace:configure.ac:34: -1- gl_WCHAR_H_DEFAULTS
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_BTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBSINIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBRLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBSRTOWCS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_MBSNRTOWCS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSRTOMBS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNRTOMBS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WMEMCHR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WMEMCMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WMEMCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WMEMMOVE$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WMEMPCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WMEMSET$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCPCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCPNCPY$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNCAT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNCMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCASECMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSNCASECMP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCOLL$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSXFRM$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSDUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCHR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSRCHR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSCSPN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSSPN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSPBRK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSSTR$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSTOK$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSWIDTH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCSFTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_WCTOB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBSTATE_T$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_BTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCTOB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBSINIT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBRTOWC$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBRLEN$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBSRTOWCS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_MBSNRTOWCS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCRTOMB$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCSRTOMBS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCSNRTOMBS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCWIDTH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCSWIDTH$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCSFTIME$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^REPLACE_WCSTOK$])
m4trace:configure.ac:34: -1- gl_WCHAR_H_INLINE_OK
m4trace:configure.ac:34: -1- gl_CHECK_NEXT_HEADERS([wchar.h])
m4trace:configure.ac:34: -1- gl_NEXT_HEADERS_INTERNAL([wchar.h], [check])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- gl_ABSOLUTE_HEADER_ONE([wchar.h])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_WCHAR_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCHAR_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:34: -1- gl_TYPE_WINT_T_PREREQ
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_Header_crtdefs_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" crtdefs.h ]AS_TR_SH([crtdefs.h]) AS_TR_CPP([HAVE_crtdefs.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_CRTDEFS_H$])
m4trace:configure.ac:34: -1- gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]], [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])
m4trace:configure.ac:34: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:34: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_BTOWC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCTOB$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSINIT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBRTOWC$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBRLEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSRTOWCS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MBSNRTOWCS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCRTOMB$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSRTOMBS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSNRTOMBS$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCWIDTH$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WMEMCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WMEMCMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WMEMCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WMEMMOVE$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WMEMPCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WMEMSET$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSLEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSNLEN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCPCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSNCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCPNCPY$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSNCAT$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSNCMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCASECMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSNCASECMP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCOLL$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSXFRM$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSDUP$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSRCHR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSCSPN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSSPN$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSPBRK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSSTR$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSTOK$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSWIDTH$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_WCSFTIME$])
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GL_GNULIB_MDA_WCSDUP$])
m4trace:configure.ac:34: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-cond.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-once.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-spin.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-thread.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-timedmutex.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-timedrecmutex.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-timedrwlock.c])
m4trace:configure.ac:34: -1- gl_LIBSOURCES([windows-tls.c])
m4trace:configure.ac:34: -1- gl_XALLOC
m4trace:configure.ac:34: -1- gl_MODULE_INDICATOR([xalloc])
m4trace:configure.ac:34: -1- m4_pattern_allow([^GNULIB_XALLOC$])
m4trace:configure.ac:34: -1- gl_XSIZE
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:34: -1- gl_COMMON
m4trace:configure.ac:34: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBGNU_LIBDEPS$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^LIBGNU_LTLIBDEPS$])
m4trace:configure.ac:36: -1- gl_ASSERT_NO_GNULIB_TESTS
m4trace:configure.ac:36: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
m4trace:configure.ac:37: -1- gl_ASSERT_NO_GNULIB_POSIXCHECK
m4trace:configure.ac:37: -1- AC_DEFUN([gl_WARN_ON_USE_PREPARE], [])
m4trace:configure.ac:40: -1- m4_pattern_allow([^ENABLE_TRACING$])
m4trace:configure.ac:49: -1- m4_pattern_allow([^COVERAGE_CFLAGS$])
m4trace:configure.ac:49: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
You should run autoupdate.], [./lib/autoconf/general.m4:2847: AC_TRY_COMPILE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:1534: AC_ARG_ENABLE is expanded from...
configure.ac:49: the top level])
m4trace:configure.ac:49: -1- m4_pattern_allow([^LCOV$])
m4trace:configure.ac:49: -1- m4_pattern_allow([^GENHTML$])
m4trace:configure.ac:72: -1- AM_CONDITIONAL([ENABLE_COVERAGE], [test "$enable_coverage" = yes])
m4trace:configure.ac:72: -1- m4_pattern_allow([^ENABLE_COVERAGE_TRUE$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^ENABLE_COVERAGE_FALSE$])
m4trace:configure.ac:72: -1- _AM_SUBST_NOTMAKE([ENABLE_COVERAGE_TRUE])
m4trace:configure.ac:72: -1- _AM_SUBST_NOTMAKE([ENABLE_COVERAGE_FALSE])
m4trace:configure.ac:74: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:130: -1- gl_INIT
m4trace:configure.ac:130: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:130: -1- gl_COMMON
m4trace:configure.ac:130: -1- gl_FUNC_ALLOCA
m4trace:configure.ac:130: -1- gl_PREREQ_ALLOCA
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:130: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:130: -1- gl_FUNC_CALLOC_GNU
m4trace:configure.ac:130: -1- _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC=1])
m4trace:configure.ac:130: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/calloc.m4:18: _AC_FUNC_CALLOC_IF is expanded from...
m4/calloc.m4:57: gl_FUNC_CALLOC_GNU is expanded from...
m4/gnulib-comp.m4:176: gl_INIT is expanded from...
configure.ac:130: the top level])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:130: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:130: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:130: -1- gl_STDLIB_MODULE_INDICATOR([calloc-posix])
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-posix])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-posix])
m4trace:configure.ac:130: -1- gl_CLOCK_TIME
m4trace:configure.ac:130: -1- m4_pattern_allow([^LIB_CLOCK_GETTIME$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_CLOCK_GETTIME$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_CLOCK_SETTIME$])
m4trace:configure.ac:130: -1- gl_FUNC_DUP2
m4trace:configure.ac:130: -1- GL_MDA_DEFINES
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_SETDTABLESIZE$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([dup2.c])
m4trace:configure.ac:130: -1- gl_PREREQ_DUP2
m4trace:configure.ac:130: -1- gl_UNISTD_MODULE_INDICATOR([dup2])
m4trace:configure.ac:130: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup2])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup2])
m4trace:configure.ac:130: -1- gl_HEADER_ERRNO_H
m4trace:configure.ac:130: -1- gl_FCNTL_H
m4trace:configure.ac:130: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_FLOAT_H
m4trace:configure.ac:130: -1- gl_NEXT_HEADERS([float.h])
m4trace:configure.ac:130: -1- gl_NEXT_HEADERS_INTERNAL([float.h], [assume])
m4trace:configure.ac:130: -1- gl_ABSOLUTE_HEADER_ONE([float.h])
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEXT_FLOAT_H$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FLOAT_H$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^FLOAT_H$])
m4trace:configure.ac:130: -1- AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [test -n "$FLOAT_H"])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:130: -1- m4_pattern_allow([^REPLACE_ITOLD$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([float.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([itold.c])
m4trace:configure.ac:130: -1- gl_FUNC_FPRINTF_POSIX
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_LONG_DOUBLE
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_DOUBLE$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_LONG_DOUBLE$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_A
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_A$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_F
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_F$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_LS$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_FLAG_GROUPING
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_GROUPING$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_LEFTADJUST$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_FLAG_ZERO
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_ZERO$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_PRECISION
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_UNBOUNDED_PRECISION$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF_ENOMEM
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_ENOMEM$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:130: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:130: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:130: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:130: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:130: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:130: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:130: -1- gl_REPLACE_FPRINTF
m4trace:configure.ac:130: -1- gl_LIBSOURCES([fprintf.c])
m4trace:configure.ac:130: -1- m4_pattern_allow([^REPLACE_FPRINTF_POSIX$])
m4trace:configure.ac:130: -1- gl_PREREQ_FPRINTF
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fprintf-posix])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf-posix])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf-posix])
m4trace:configure.ac:130: -1- gl_FUNC_FREE
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_FREE_POSIX$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([free.c])
m4trace:configure.ac:130: -1- gl_PREREQ_FREE
m4trace:configure.ac:130: -1- gl_STDLIB_MODULE_INDICATOR([free-posix])
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([free-posix])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[free-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([free-posix])
m4trace:configure.ac:130: -1- gl_FUNC_FREXP_NO_LIBM
m4trace:configure.ac:130: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_FREXP_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([frexp.c])
m4trace:configure.ac:130: -1- gl_MATH_MODULE_INDICATOR([frexp])
m4trace:configure.ac:130: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexp])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexp])
m4trace:configure.ac:130: -1- gl_FUNC_FREXPL_NO_LIBM
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- gl_CHECK_FREXPL_NO_LIBM
m4trace:configure.ac:130: -1- gl_FUNC_FREXPL_WORKS
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_FREXPL_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([frexpl.c])
m4trace:configure.ac:130: -1- gl_MATH_MODULE_INDICATOR([frexpl])
m4trace:configure.ac:130: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexpl])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexpl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexpl])
m4trace:configure.ac:130: -1- gl_FUNC_FSETERR
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func___fseterr], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" __fseterr ]AS_TR_CPP([HAVE___fseterr])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([fseterr.c])
m4trace:configure.ac:130: -1- gl_FUNC_FSTAT
m4trace:configure.ac:130: -1- gl_LIBSOURCES([fstat.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:130: -1- gl_PREREQ_FSTAT
m4trace:configure.ac:130: -1- gl_SYS_STAT_MODULE_INDICATOR([fstat])
m4trace:configure.ac:130: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstat])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstat])
m4trace:configure.ac:130: -1- gl_GETTIME
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" gettimeofday ]AS_TR_CPP([HAVE_gettimeofday])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_FUNC_GETTIMEOFDAY
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" gettimeofday ]AS_TR_CPP([HAVE_gettimeofday])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GETTIMEOFDAY_TIMEZONE$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([gettimeofday.c])
m4trace:configure.ac:130: -1- gl_PREREQ_GETTIMEOFDAY
m4trace:configure.ac:130: -1- gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
m4trace:configure.ac:130: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gettimeofday])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[gettimeofday]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([gettimeofday])
m4trace:configure.ac:130: -1- gl_INTTYPES_H
m4trace:configure.ac:130: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:130: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_FUNC_ISNAND_NO_LIBM
m4trace:configure.ac:130: -1- gl_HAVE_ISNAND_NO_LIBM
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_ISNAND_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([isnand.c])
m4trace:configure.ac:130: -1- gl_PREREQ_ISNAND
m4trace:configure.ac:130: -1- gl_FUNC_ISNANF_NO_LIBM
m4trace:configure.ac:130: -1- gl_HAVE_ISNANF_NO_LIBM
m4trace:configure.ac:130: -1- gl_ISNANF_WORKS
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_ISNANF_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([isnanf.c])
m4trace:configure.ac:130: -1- gl_PREREQ_ISNANF
m4trace:configure.ac:130: -1- gl_FLOAT_EXPONENT_LOCATION
m4trace:configure.ac:130: -1- m4_pattern_allow([^FLT_EXPBIT0_WORD$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^FLT_EXPBIT0_BIT$])
m4trace:configure.ac:130: -1- gl_FUNC_ISNANL_NO_LIBM
m4trace:configure.ac:130: -1- gl_HAVE_ISNANL_NO_LIBM
m4trace:configure.ac:130: -1- gl_FUNC_ISNANL_WORKS
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_ISNANL_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([isnanl.c])
m4trace:configure.ac:130: -1- gl_PREREQ_ISNANL
m4trace:configure.ac:130: -1- gl_LONG_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:130: -1- m4_pattern_allow([^LDBL_EXPBIT0_WORD$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^LDBL_EXPBIT0_BIT$])
m4trace:configure.ac:130: -1- gl_LIMITS_H
m4trace:configure.ac:130: -1- gl_FUNC_LSTAT
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([lstat.c])
m4trace:configure.ac:130: -1- gl_PREREQ_LSTAT
m4trace:configure.ac:130: -1- gl_SYS_STAT_MODULE_INDICATOR([lstat])
m4trace:configure.ac:130: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lstat])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([lstat])
m4trace:configure.ac:130: -1- gl_FUNC_MALLOC_GNU
m4trace:configure.ac:130: -1- _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC=1])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:130: -1- gl_STDLIB_MODULE_INDICATOR([malloc-posix])
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-posix])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-posix])
m4trace:configure.ac:130: -1- gl_MALLOCA
m4trace:configure.ac:130: -1- gl_MATH_H
m4trace:configure.ac:130: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_FUNC_MEMCHR
m4trace:configure.ac:130: -1- gl_LIBSOURCES([memchr.c])
m4trace:configure.ac:130: -1- gl_PREREQ_MEMCHR
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_BP_SYM_H$])
m4trace:configure.ac:130: -1- gl_STRING_MODULE_INDICATOR([memchr])
m4trace:configure.ac:130: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memchr])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([memchr])
m4trace:configure.ac:130: -1- gl_MINMAX
m4trace:configure.ac:130: -1- gl_LIBSOURCES([msvc-inval.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([msvc-nothrow.c])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR([msvc-nothrow])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GNULIB_MSVC_NOTHROW$])
m4trace:configure.ac:130: -1- gl_MULTIARCH
m4trace:configure.ac:130: -1- gl_FUNC_NANOSLEEP
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:130: -1- m4_pattern_allow([^LIB_NANOSLEEP$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_BUG_BIG_NANOSLEEP$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([nanosleep.c])
m4trace:configure.ac:130: -1- gl_PREREQ_NANOSLEEP
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_PREREQ_SIG_HANDLER_H
m4trace:configure.ac:130: -1- gl_TIME_MODULE_INDICATOR([nanosleep])
m4trace:configure.ac:130: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([nanosleep])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[nanosleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([nanosleep])
m4trace:configure.ac:130: -1- gl_PATHMAX
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_FUNC_PRINTF_FREXP
m4trace:configure.ac:130: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_FREXP_IN_LIBC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_LDEXP_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_FUNC_PRINTF_FREXPL
m4trace:configure.ac:130: -1- gl_CHECK_FREXPL_NO_LIBM
m4trace:configure.ac:130: -1- gl_FUNC_FREXPL_WORKS
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_FREXPL_IN_LIBC$])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- gl_CHECK_LDEXPL_NO_LIBM
m4trace:configure.ac:130: -1- gl_FUNC_LDEXPL_WORKS
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_LDEXPL_IN_LIBC$])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- gl_PTHREAD_COND
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-cond.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-cond])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-cond])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-cond]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-cond])
m4trace:configure.ac:130: -1- gl_PTHREAD_H
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_PTHREAD_MUTEX
m4trace:configure.ac:130: -1- m4_pattern_allow([^PTHREAD_MUTEXATTR_ROBUST_UNIMPLEMENTED$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-mutex.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-mutex])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-mutex])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-mutex]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-mutex])
m4trace:configure.ac:130: -1- gl_PTHREAD_ONCE
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-once.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-once])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-once])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-once]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-once])
m4trace:configure.ac:130: -1- gl_PTHREAD_RWLOCK
m4trace:configure.ac:130: -1- m4_pattern_allow([^PTHREAD_RWLOCK_UNIMPLEMENTED$])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- m4_pattern_allow([^PTHREAD_RWLOCK_LACKS_TIMEOUT$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-rwlock.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-rwlock])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-rwlock])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-rwlock]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-rwlock])
m4trace:configure.ac:130: -1- gl_PTHREAD_SPIN
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-spin.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-spin])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-spin])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-spin]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-spin])
m4trace:configure.ac:130: -1- gl_PTHREAD_THREAD
m4trace:configure.ac:130: -1- m4_pattern_allow([^PTHREAD_CREATE_IS_INLINE$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-thread.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-thread])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-thread])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-thread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-thread])
m4trace:configure.ac:130: -1- gl_PTHREAD_TSS
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread-tss.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-tss])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-tss])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-tss]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-tss])
m4trace:configure.ac:130: -1- gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([pthread_mutex_timedlock.c])
m4trace:configure.ac:130: -1- gl_PTHREAD_MODULE_INDICATOR([pthread_mutex_timedlock])
m4trace:configure.ac:130: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread_mutex_timedlock])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread_mutex_timedlock]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread_mutex_timedlock])
m4trace:configure.ac:130: -1- gl_FUNC_RAISE
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:130: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:130: -1- gl_LIBSOURCES([raise.c])
m4trace:configure.ac:130: -1- gl_PREREQ_RAISE
m4trace:configure.ac:130: -1- gl_SIGNAL_MODULE_INDICATOR([raise])
m4trace:configure.ac:130: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([raise])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[raise]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([raise])
m4trace:configure.ac:130: -1- gl_FUNC_REALLOC_GNU
m4trace:configure.ac:130: -1- _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC=1])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:130: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:130: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:130: -1- gl_STDLIB_MODULE_INDICATOR([realloc-posix])
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-posix])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-posix])
m4trace:configure.ac:130: -1- gl_FUNC_REALLOCARRAY
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([reallocarray.c])
m4trace:configure.ac:130: -1- gl_PREREQ_REALLOCARRAY
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GNULIB_REALLOCARRAY$])
m4trace:configure.ac:130: -1- gl_STDLIB_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([reallocarray])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[reallocarray]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([reallocarray])
m4trace:configure.ac:130: -1- gl_SCHED_H
m4trace:configure.ac:130: -1- gl_SCHED_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_FUNC_SELECT
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- GL_MDA_DEFINES
m4trace:configure.ac:130: -1- m4_pattern_allow([^LIB_SELECT$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([select.c])
m4trace:configure.ac:130: -1- gl_SYS_SELECT_MODULE_INDICATOR([select])
m4trace:configure.ac:130: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([select])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[select]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([select])
m4trace:configure.ac:130: -1- gl_SIGACTION
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_sigaction], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaction ]AS_TR_CPP([HAVE_sigaction])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([sigaction.c])
m4trace:configure.ac:130: -1- gl_PREREQ_SIGACTION
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_sigaltstack], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaltstack ]AS_TR_CPP([HAVE_sigaltstack])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_siginterrupt], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" siginterrupt ]AS_TR_CPP([HAVE_siginterrupt])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:130: -1- gl_SIGNAL_MODULE_INDICATOR([sigaction])
m4trace:configure.ac:130: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigaction])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigaction]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigaction])
m4trace:configure.ac:130: -1- gl_SIGNAL_H
m4trace:configure.ac:130: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SIGNBIT
m4trace:configure.ac:130: -1- gl_SIGNBIT_TEST_PROGRAM
m4trace:configure.ac:130: -1- gl_SIGNBIT_TEST_PROGRAM
m4trace:configure.ac:130: -1- gl_FLOAT_SIGN_LOCATION
m4trace:configure.ac:130: -1- gl_FLOATTYPE_SIGN_LOCATION([float], [gl_cv_cc_float_signbit], [f], [FLT])
m4trace:configure.ac:130: -1- m4_pattern_allow([^FLT_SIGNBIT_WORD$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^FLT_SIGNBIT_BIT$])
m4trace:configure.ac:130: -1- gl_DOUBLE_SIGN_LOCATION
m4trace:configure.ac:130: -1- gl_FLOATTYPE_SIGN_LOCATION([double], [gl_cv_cc_double_signbit], [], [DBL])
m4trace:configure.ac:130: -1- m4_pattern_allow([^DBL_SIGNBIT_WORD$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^DBL_SIGNBIT_BIT$])
m4trace:configure.ac:130: -1- gl_LONG_DOUBLE_SIGN_LOCATION
m4trace:configure.ac:130: -1- gl_FLOATTYPE_SIGN_LOCATION([long double], [gl_cv_cc_long_double_signbit], [L], [LDBL])
m4trace:configure.ac:130: -1- m4_pattern_allow([^LDBL_SIGNBIT_WORD$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^LDBL_SIGNBIT_BIT$])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNF$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_COPYSIGNF_IN_LIBC$])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGN$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_COPYSIGN_IN_LIBC$])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNL$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_COPYSIGNL_IN_LIBC$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([signbitf.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([signbitd.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([signbitl.c])
m4trace:configure.ac:130: -1- gl_MATH_MODULE_INDICATOR([signbit])
m4trace:configure.ac:130: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([signbit])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[signbit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([signbit])
m4trace:configure.ac:130: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:130: -1- gl_LIBSOURCES([sigprocmask.c])
m4trace:configure.ac:130: -1- gl_PREREQ_SIGPROCMASK
m4trace:configure.ac:130: -1- gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
m4trace:configure.ac:130: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigprocmask])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigprocmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigprocmask])
m4trace:configure.ac:130: -1- gl_SIZE_MAX
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^SIZE_MAX$])
m4trace:configure.ac:130: -1- gl_TYPE_SOCKLEN_T
m4trace:configure.ac:130: -1- gl_SOCKET_HEADERS
m4trace:configure.ac:130: -1- m4_pattern_allow([^socklen_t$])
m4trace:configure.ac:130: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:130: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:130: -1- gl_FUNC_STAT
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_FILE$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([stat.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:130: -1- gl_PREREQ_STAT
m4trace:configure.ac:130: -1- gl_SYS_STAT_MODULE_INDICATOR([stat])
m4trace:configure.ac:130: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stat])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([stat])
m4trace:configure.ac:130: -1- gl_STAT_TIME
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMENSEC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC$])
m4trace:configure.ac:130: -1- gl_STAT_BIRTHTIME
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMENSEC$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIM_TV_NSEC$])
m4trace:configure.ac:130: -1- gl_STDALIGN_H
m4trace:configure.ac:130: -1- m4_pattern_allow([^STDALIGN_H$])
m4trace:configure.ac:130: -1- AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_FALSE])
m4trace:configure.ac:130: -1- AM_STDBOOL_H
m4trace:configure.ac:130: -1- m4_pattern_allow([^STDBOOL_H$])
m4trace:configure.ac:130: -1- AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:130: -1- gl_STDDEF_H
m4trace:configure.ac:130: -1- gl_STDDEF_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_STDINT_H
m4trace:configure.ac:130: -1- gl_STDIO_H
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fscanf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fscanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fscanf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([scanf])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([scanf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[scanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([scanf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR([scanf])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fgetc])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgetc])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgetc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgetc])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([getc])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getc])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([getc])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([getchar])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getchar])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([getchar])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fgets])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgets])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgets]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgets])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fread])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fread])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fread])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fprintf])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([printf])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([printf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[printf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([printf])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([vfprintf])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vfprintf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vfprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([vfprintf])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([vprintf])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vprintf])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([vprintf])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fputc])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputc])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputc])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([putc])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putc])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([putc])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([putchar])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putchar])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([putchar])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fputs])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputs])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputs])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([puts])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([puts])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[puts]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([puts])
m4trace:configure.ac:130: -1- gl_STDIO_MODULE_INDICATOR([fwrite])
m4trace:configure.ac:130: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fwrite])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fwrite]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([fwrite])
m4trace:configure.ac:130: -1- gl_STDLIB_H
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_STRING_H
m4trace:configure.ac:130: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SYS_SELECT_H
m4trace:configure.ac:130: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:130: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SYS_STAT_H
m4trace:configure.ac:130: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SYS_TIME_H
m4trace:configure.ac:130: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SYS_TYPES_H
m4trace:configure.ac:130: -1- gl_SYS_TYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_SYS_UIO_H
m4trace:configure.ac:130: -1- gl_SYS_UIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_TIME_H
m4trace:configure.ac:130: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_TIMESPEC
m4trace:configure.ac:130: -1- gl_UNISTD_H
m4trace:configure.ac:130: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_FUNC_UTIME
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_UTIME$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^REPLACE_FUNC_UTIME_FILE$])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([utime.c])
m4trace:configure.ac:130: -1- gl_PREREQ_UTIME
m4trace:configure.ac:130: -1- gl_UTIME_MODULE_INDICATOR([utime])
m4trace:configure.ac:130: -1- gl_UTIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE([utime])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[utime]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR_FOR_TESTS([utime])
m4trace:configure.ac:130: -1- gl_UTIME_H
m4trace:configure.ac:130: -1- gl_UTIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_UTIMENS
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_futimes], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" futimes ]AS_TR_CPP([HAVE_futimes])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_futimesat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" futimesat ]AS_TR_CPP([HAVE_futimesat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_futimens], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" futimens ]AS_TR_CPP([HAVE_futimens])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_utimensat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" utimensat ]AS_TR_CPP([HAVE_utimensat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_lutimes], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lutimes ]AS_TR_CPP([HAVE_lutimes])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- GL_MDA_DEFINES
m4trace:configure.ac:130: -1- m4_pattern_allow([^FUTIMESAT_NULL_BUG$])
m4trace:configure.ac:130: -1- gl_FUNC_VASNPRINTF
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:130: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:130: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:130: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:130: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:130: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:130: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:130: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:130: -1- gl_WCHAR_H
m4trace:configure.ac:130: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-cond.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-once.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-spin.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-thread.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-timedmutex.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-timedrecmutex.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-timedrwlock.c])
m4trace:configure.ac:130: -1- gl_LIBSOURCES([windows-tls.c])
m4trace:configure.ac:130: -1- gl_XALLOC
m4trace:configure.ac:130: -1- gl_MODULE_INDICATOR([xalloc])
m4trace:configure.ac:130: -1- m4_pattern_allow([^GNULIB_XALLOC$])
m4trace:configure.ac:130: -1- gl_XSIZE
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:130: -1- gl_COMMON
m4trace:configure.ac:130: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^LIBGNU_LIBDEPS$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^LIBGNU_LTLIBDEPS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:134: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:134: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:134: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:134: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:134: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:134: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:134: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
